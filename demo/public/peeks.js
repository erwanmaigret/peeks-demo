!function(t){function e(r){if(i[r])return i[r].exports;var n=i[r]={i:r,l:!1,exports:{}};return t[r].call(n.exports,n,n.exports,e),n.l=!0,n.exports}var i={};e.m=t,e.c=i,e.d=function(t,i,r){e.o(t,i)||Object.defineProperty(t,i,{configurable:!1,enumerable:!0,get:r})},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,"a",i),i},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=0)}([function(t,e,i){i(1),i(2),i(3),i(4),Function("return this")().THREE=i(5),i(6),i(7),i(8),i(9),i(10),i(11),i(12),i(13),i(14),i(15),i(16),i(17),i(18)},function(t,e){function i(t){R=t}function r(t){C=t}function n(){return C<=0}function a(t){n()&&console.log("Peeks (verbose): "+t)}function o(t){C<=1&&console.log("Peeks (debug): "+t)}function s(t){C<=2&&console.log("Peeks (info): "+t)}function c(t){C<=3&&console.log("Peeks (warning): "+t)}function h(t){C<=4&&console.log("Peeks (error): "+t)}function l(){}function u(){this.type="Node",this.children=[]}function p(t){u.call(this),t&&this.initAsset(this,t),this.position=[0,0,0],this.rotation=[0,0,0],this.pivotRotation=[0,0,0],this.rotationOrder="XYZ",this.size=[1,1,1],this.updateInitial(),this.type="Asset",this.time=0,this.primitive=p.PrimitiveNone,this.textureUrl="",this.textureBackUrl="",this.textureRepeat=[1,1],this.geomertryUrl="",this.visible=!0}function d(){p.call(this),this.rotationOrder="ZYX",this.type="Camera"}function f(t,e,i){if(void 0===k[t]&&(k[t]={listeners:[]}),i&&(k[t].extension?i(k[t].extension):k[t].listeners.push(i)),e&&void 0===k[t].extension){k[t].extension=e;for(var r=0;r<k[t].listeners.length;r++)k[t].listeners[r](e)}}function m(t){return f(t).extension}function g(t,e){return f(t,void 0,e)}function v(){return!!window.WebAssembly||(console.log("Your web browser doesn't support WebAssembly"),!1)}function y(t,e){if(e)O[t]=e;else{var i=t,r=i.name,n=i.category||"fashion",a=i.url||"";y(r,function(){var t=new PEEKS.Asset({title:r,category:n||"fashion"});return t.addExternalView(a),t.addPage("peeks_toolbar"),t})}}function x(){D&&dataLayer.push(arguments)}function b(t,e){if(O[t]){var i=O[t](e);return i.name=t,i.onLoad&&(o("Calling onLoad on page "+t),i.onLoad(e)),i}h("Can't load unregistered page "+t)}function _(){var t=navigator.userAgent.toLowerCase();return-1!==t.search("iphone")||-1!==t.search("ipod")||-1!==t.search("android")}function w(){p.call(this),this.camera=this.add(new d),this.mouseDownTime=0,this.type="Scene",this.ground=this.add(new PEEKS.Asset),this.background=this.add(new PEEKS.Asset),this.arAsset=this.add(new PEEKS.Asset);var t=navigator.userAgent.toLowerCase();this.isPhone=-1!==t.search("iphone")||-1!==t.search("ipod")||-1!==t.search("android"),this.gyroscope=this.isPhone,this.vrMode=this.isPhone,this.pagesHistory=[],this.pageIndex=-1,this.style={viewBgColor:[1,1,1],viewBgAlpha:.2,buttonBgAlpha:1,bgColor:[0,0,0],fontSize:12,fontBgColor:[1,1,1,0],fontColor:[1,1,1],fontName:"Futura",fontOutlineStyle:"grey",valign:"center",align:"center",colorDark:[0,100/255,0],colorMedium:[1,1,1],colorLight:[173/255,1,223/255],colorBlack:[0,0,0],colorGrey:[80/255,80/255,80/255],colorWhite:[1,1,1]}}function E(){p.call(this),this.primitive=p.PrimitivePlane}function M(){p.call(this),this.name="Canvas",this.type="Canvas"}function T(){p.call(this),this.name="Screen",this.type="Screen",this.radius=5}function S(t){p.call(this),this.name="Page",this.type="Page",this.initAsset(this,t)}function A(t){p.call(this),this.primitive=p.PrimitiveAnimation,this.duration=10,this.delay=0,this.attribute="position",this.loop=!1,this.ended=!1,t.duration&&(this.duration=t.duration),t.delay&&(this.delay=t.delay),t.begin&&(this.p0=t.begin),t.end&&(this.p3=t.end),t.p0&&(this.p0=t.p0),t.p1&&(this.p1=t.p1),t.p2&&(this.p2=t.p2),t.p3&&(this.p3=t.p3),this.p0||(this.p0=[0,0,0]),this.p3||(this.p3=[0,0,0]),this.p1||(this.p1=[2*this.p0[0]/3+this.p3[0]/3,2*this.p0[1]/3+this.p3[1]/3,2*this.p0[2]/3+this.p3[2]/3]),this.p2||(this.p2=[1*this.p0[0]/3+2*this.p3[0]/3,1*this.p0[1]/3+2*this.p3[1]/3,1*this.p0[2]/3+2*this.p3[2]/3]),t.attribute&&(this.attribute=t.attribute),t.loop&&(this.loop=t.loop),t.interpolate?this.interpolate=t.interpolate:this.loop?this.interpolate=A.InterpolateLinear:this.interpolate=A.InterpolateEaseInOut}var R=1,C=2,P=Date.now(),L={};L.v2Distance=function(t,e){var i=e[0]-t[0],r=e[1]-t[1];return Math.sqrt(i*i+r*r)},L.v3=function(t,e,i){return 3===arguments.length?[t,e,i]:1===arguments.length?3===arguments[0].length?[arguments[0][0],arguments[0][1],arguments[0][2]]:[arguments[0],arguments[0],arguments[0]]:2===arguments.length?arguments[0]||arguments[1]:[0,0,0]},L.v4=function(t,e,i,r){return 3===arguments.length?[t,e,i,0]:4===arguments.length?[t,e,i,r]:1===arguments.length?3===arguments[0].length?[arguments[0][0],arguments[0][1],arguments[0][2]]:4===arguments[0].length?[arguments[0][0],arguments[0][1],arguments[0][2],arguments[0][3]]:[arguments[0],arguments[0],arguments[0],0]:[0,0,0,0]},L.hex2rgb=function(t){"#"===t.charAt(0)&&(t=t.substring(1,9));var e=[parseInt(t.substring(0,2),16)/255,parseInt(t.substring(2,4),16)/255,parseInt(t.substring(4,6),16)/255];return t.length>6&&e.push(parseInt(t.substring(6,8),16)/255),e},L.color=function(){if(3===arguments.length)return L.v3(arguments[0],arguments[1],arguments[2]);if(4===arguments.length)return L.v4(arguments[0],arguments[1],arguments[2],arguments[3]);if(1===arguments.length){if("string"==typeof arguments[0]||arguments[0]instanceof String){var t=L.hex2rgb(arguments[0]);return 3===t.length?L.v3(t):L.v4(t)}return 3===arguments[0].length?L.v3(arguments[0]):4===arguments[0].length?L.v4(arguments[0]):L.v3(arguments)}return[0,0,0]},L.math={euclideanModulo:function(t,e){return(t%e+e)%e},clamp:function(t,e,i){return Math.max(e,Math.min(i,t))}},L.color.hsl=function(t,e,i){function r(t,e,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+6*(e-t)*(2/3-i):t}if(t=L.math.euclideanModulo(t,1),e=L.math.clamp(e,0,1),i=L.math.clamp(i,0,1),0===e)return[i,i,i];var n=i<=.5?i*(1+e):i+e-i*e,a=2*i-n;return[r(a,n,t+1/3),r(a,n,t),r(a,n,t-1/3)]},L.rgba=function(){return 3===arguments.length?L.v4(arguments[0],arguments[1],arguments[2],1):4===arguments.length?L.v4(arguments[0],arguments[1],arguments[2],arguments[3]):1===arguments.length?"string"==typeof arguments[0]||arguments[0]instanceof String?L.v4(L.hex2rgb(arguments[0])):3===arguments[0].length?L.v4(arguments[0]):4===arguments[0].length?L.v4(arguments[0]):L.v4(arguments):[0,0,0,0]};var I;Object.assign(l.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});var i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;var i=this._listeners;return void 0!==i[t]&&-1!==i[t].indexOf(e)},removeEventListener:function(t,e){if(void 0!==this._listeners){var i=this._listeners,r=i[t];if(void 0!==r){var n=r.indexOf(e);-1!==n&&r.splice(n,1)}}},dispatchEvent:function(t){if(void 0!==this._listeners){var e=this._listeners,i=e[t.type];if(void 0!==i){t.target=this;for(var r=i.slice(0),n=0,a=r.length;n<a;n++)r[n].call(this,t)}}}}),Object.assign(u.prototype,l.prototype,{add:function(t){return t.parent=this,t.time=this.time,this.children[this.children.length]=t,t},addPage:function(t){var e=PEEKS.navigateToPage(t);return e?this.add(e):o("Can not add missing page "+t),e},destroy:function(){this.unload();var t=this.parent;if(t){delete this.parent;for(var e=0;e<t.children.length;e++)if(t.children[e]===this){t.children.splice(e,1);break}}for(;this.children.length>0;)this.children[0].destroy()},unload:function(){this.onUnload()},addCanvas:function(t){var e=new PEEKS.Canvas;return this.applyParams(e,t),this.add(e)},addScreen:function(t){var e=new PEEKS.Screen;return this.applyParams(e,t),this.add(e)},addButton:function(t){var e=this.addImage(t);return t&&(t.onClick?e.onClick=t.onClick:e.onClick=function(){},t.onClickArgs&&(e.onClickArgs=t.onClickArgs)),e},addStateButton:function(t){var e=this.addButton(t);return e.onClick=function(){this.toggleButtonState()},e},toggleButtonState:function(){this.setButtonState(!this.buttonPressed)},getButtonState:function(){return this.buttonPressed},setButtonState:function(t){var e=this.buttonPressed||!1;this.buttonPressed=t,this.buttonPressed!==e&&this.onButtonStateChange&&this.onButtonStateChange(this.buttonPressed),this.buttonPressed?this.selectionIcon||(this.selectionIcon=this.addImage({image:"/images/icon_selected.png"})):this.selectionIcon&&(this.selectionIcon.destroy(),this.selectionIcon=void 0)},addCube:function(t){var e=this.addButton(t);return e.primitive=p.PrimitiveCube,t&&(t.onClick?e.onClick=t.onClick:e.onClick=function(){},t.onClickArgs&&(e.onClickArgs=t.onClickArgs)),e},addRibbon:function(t){var e=this.addAsset(t);return e.primitive=p.PrimitiveRibbon,e},addSphere:function(t){var e=this.addImage(t);return e.primitive=p.PrimitiveSphere,e},addCurvedPanel:function(t){var e=this.addButton(t);return e.primitive=p.PrimitiveCurvedPanel,e.sides="back",e},addRing:function(t){var e=this.addView(t);return e.primitive=p.PrimitiveRing,e},addDisc:function(t){var e=this.addView(t);return e.primitive=p.PrimitiveDisc,e},addSquare:function(t){var e=this.addAsset(t);return e.addView({position:[0,0,0]}),e},addTextButton:function(t){var e=this.addButton(t);return e.addAttrAlias("viewBgColor","colorWhite"),e.addAttrAlias("alpha","buttonBgAlpha"),e.alpha=0,e.addText({position:[0,0,.01]}).addAttrAlias("text","label"),e},addRoundTextButton:function(t){var e=this.addButton(t);return e.primitive=p.PrimitiveCircle,e.addAttrAlias("viewBgColor","fontColor"),e.addText({position:[0,0,.01]}).addAttrAlias("text","label"),e},addIconButton:function(t){var e=this.addButton(t);return e.addAttrAlias("viewBgColor","fontColor"),e.addAttrAlias("alpha","buttonBgAlpha"),e.addImage({image:t.icon}).addAttrAlias("color","fontColor"),e},addRoundIconButton:function(t){var e=this.addIconButton(t);return e.primitive=p.PrimitiveCircle,e},addVideo:function(t){var e=this.addButton(t);return e.useVideoTexture=!0,t&&t.url&&(e.videoUrl=t.url),e.onClick=function(){this.video&&(this.isPlaying?(this.isPlaying=!1,this.video.pause()):(this.isPlaying=!0,this.video.play()))},e},DOMcreateElementVideo:function(t){if(this.video=document.createElement(t||"video"),this.video.autoplay=!0,this.video.setAttribute("autoplay",""),this.video.setAttribute("playsinline",""),void 0===this.videoUrl)this.video.width=512,this.video.height=512,this.video.setAttribute("muted",""),this.video.setAttribute("id","peeksCamera");else{var e=this.size[0]/this.size[1];this.video.width=512,this.video.height=512/e}},addImage:function(t){var e=this.addView(t);return t&&(t.image&&e.setTexture(t.image),t.imageBack&&e.setTextureBack(t.imageBack),t.imageRepeat&&(e.textureRepeat=t.imageRepeat)),e},toString:function(){var t=this.type;return this.textureUrl&&(t+=" "+this.textureUrl),this.text&&(t+=' "'+this.text+'"'),this.label&&(t+=' "'+this.label+'"'),t},addText:function(t){var e=this.addView(t);return this.applyParams(e,t),e},applyParams:function(t,e){if(e)for(var i in e){var r="set"+i.charAt(0).toUpperCase()+i.slice(1);void 0!==t[r]?t[r].call(t,e[i]):t[i]=e[i]}},setAttr:function(t,e){this[t]=e},getAttrColor:function(t,e){return L.color.apply(this,this.getAttr(t,e))},getAttrRgba:function(t,e){return L.rgba.apply(this,this.getAttr(t,e))},getAttr:function(t,e){if(this.style&&void 0!==this.style[t])return this.style[t];if(void 0!==this[t])return this[t];var i=this.attrAliases&&this.attrAliases[t];return i?this.getAttr(i,e):this.parent?this.parent.getAttr(t,e):e},addAttrAlias:function(t,e){return void 0===this.attrAliases&&(this.attrAliases={}),this.attrAliases[t]=e,this},initAsset:function(t,e){this.applyParams(t,e)},addView:function(t){var e=new PEEKS.Plane;return this.initAsset(e,t),this.add(e)},progressStart:function(t){this.progressStop(),this.progress=this.addCanvas({}),this.progress.addText({size:1.5,text:t,fontSize:30})},progressStop:function(t){this.progress&&(this.progress.destroy(),delete this.progress)},addExternalView:function(t){var e=this.addAsset();e.url=t,this.url=t,e.progressStart("Loading...");var i=e.addScreen({radius:2}),r=e.addScreen({radius:5}),n=0,a=0,o=function(t,r){if(!(n>=20)){var a=Math.floor(n);a=a%2==0?-a/2:(a+1)/2;var o=i.addTextButton({label:t,position:[a/10,.25,0],size:[1,.1,1],fontSize:t.length>20?20:40,onClick:function(){if(this.href){var t=e.parent;if(t)t.addExternalView(this.href),e.destroy();else{window.open(this.href,"_blank").focus()}}}});o.href=r,o.animateInFromFar(.1*n),n++}},s=function(t,i,n,o){if(!(a>=20)){var s=Math.floor(a);s=s%2==0?-s/2:(s+1)/2;r.addButton({image:n,imageDetour:!0,position:[s/10,0,0],onClick:function(){if(this.href){var t=e.parent;if(t)t.addExternalView(this.href),e.destroy();else{window.open(this.href,"_blank").focus()}}}}).href=o,a++}},c=new XMLHttpRequest;c.onreadystatechange=function(){if(4==this.readyState&&200==this.status){var t=JSON.parse(this.responseText);if(t.peeks.menu&&t.peeks.menu.length>0)for(var i=0;i<t.peeks.menu.length;i++){var r=t.peeks.menu[i];r.label&&o(r.label,r.href)}if(t.peeks.img&&t.peeks.img.length>0)for(var n=0;n<t.peeks.img.length;n++){var a=t.peeks.img[n];s(a.width,a.height,a.src,a.href)}e.progressStop()}},c.open("GET","/scrap?uri="+encodeURI(t),!0),c.send()},addRecommendationsView:function(){var t=this.addCanvas(),e=t.addView({position:[0,0],size:[1,.6,1],viewBgColor:[.3,.3,.3],alpha:0}),i=new XMLHttpRequest;i.onreadystatechange=function(){if(4==this.readyState&&200==this.status){var t=JSON.parse(this.responseText),i=0;if(t&&t.pages){var r=function(){if(this.page)if(console.log(this.page),this.page.url){var t=window.open(this.page.url,"_blank");t.focus()}else this.page.page&&b(this.page.page,this)};for(var n in t.pages){var a=t.pages[n];void 0===O[a.name]&&PEEKS.registerPage({name:a.name,url:a.url});e.addTextButton({label:a.name,position:[0,.6-.2*i,0],size:[.9,.15,1],onClick:r,fontSize:50}).animate({duration:.5,delay:.3+.15*i,begin:[-90,0,0],end:[0,0,0],attribute:"rotation"}).page=a,i++}}}},i.open("GET","/reco",!0),i.send()},getSiteMap:function(){return void 0===this.siteMap&&(this.siteMap={menuPath:"",path:"",items:{}}),this.siteMap},setSiteMapMenuPath:function(t){this.getSiteMap().menuPath=t},getSiteMapMenuPath:function(t){return this.getSiteMap().menuPath},setSiteMapPath:function(t){this.getSiteMap().path=t},getSiteMapPath:function(t){return this.getSiteMap().path},addSiteMapItem:function(t,e){this.getSiteMap().items[t]=e||{}},siteMapPathIsLeaf:function(t){var e=this.querySiteMapItemAssets(t);return 0===e.length||0===this.querySiteMapItemAssets(e[0].path).length},querySiteMapItem:function(t,e,i){if(void 0!==this.siteMap){if(void 0!==e){var r={};for(var n in e)r[n]=e[n];return r.path=t,r.name=e.name||t.split("/").pop(),r.description=e.description,r.image=e.icon,r.items=i?this.querySiteMapItemAssets(t):void 0,r}if(void 0!==(e=this.siteMap.items[t]))return this.querySiteMapItem(t,e,!0)}},querySiteMapMenuAssets:function(t){return this.querySiteMapItemAssets(this.getSiteMapMenuPath(),t)},querySiteMapAssets:function(){return this.querySiteMapItemAssets(this.getSiteMapPath())},querySiteMapItemAssets:function(t,e){var i=[],r=void 0!==t&&""!==t?t+"/":"";for(var n in this.siteMap.items)e&&""!==e&&-1===n.split("/").pop().toLowerCase().search(e.toLowerCase())||r+n.split("/").pop()===n&&i.push(this.querySiteMapItem(n,this.siteMap.items[n]));return i},setAssetPath:function(t){this.assetPath=t},getAssetPath:function(t){if(t){var e=e||this.getPage().assetPath;return-1!==t.search("://")||"/"===t.substr(0,1)?t:e+t}},addAsset:function(t){var e=new PEEKS.Asset;return this.initAsset(e,t),this.add(e)},addMesh:function(t){var e=new PEEKS.Plane;return e.primitive=p.PrimitiveMesh,t&&(e.name=t.geometry,t.geometry&&e.setGeometry(t.geometry),t.texture&&e.setTexture(t.texture),this.initAsset(e,t)),this.add(e)},initShapeWeights:function(){for(var t in this.shapes)this.shapes.hasOwnProperty(t)&&(this.shapes[t].weightSet=!1)},validateShapeWeights:function(){for(var t in this.shapes)if(this.shapes.hasOwnProperty(t)){var e=this.shapes[t];e.weightSet||0!==e.weightEnd&&(e.weightSetTime=this.time||0,e.weightStart=e.weightEval,e.weightEnd=0,e.weight=0)}},setShape:function(t,e,i){if(void 0===this.shapes&&(this.shapes={}),void 0===this.shapes[t]){var r=this.addMesh({geometry:e});r.name=t,r.hide(),r.weightCurrent=0,this.weight=0,this.shapes[t]=r}var i=i||0;this.shapes[t].weightEnd!==i&&(this.shapes[t].weightSetTime=this.time||0,this.shapes[t].weightStart=this.weight,this.shapes[t].weightEnd=i),this.shapes[t].weight=i,this.shapes[t].weightSet=!0},setProperties:function(t){this.applyParams(this,t),this.materialNeedsUpdate=!0},animate:function(t){var e=this.add(new PEEKS.Animation(t));return this.initAsset(e,t),0!==this.time&&e.update(this.time),this},verbose:function(t){a(t)},debug:function(t){o(t)},info:function(t){s(t)},warn:function(t){c(t)},error:function(t){h(t)}}),p.PrimitiveNone=0,p.PrimitivePlane=1,p.PrimitiveCube=2,p.PrimitiveDisc=3,p.PrimitiveRing=4,p.PrimitiveCircle=5,p.PrimitiveSphere=6,p.PrimitiveCurvedPanel=7,p.PrimitiveRibbon=8,p.PrimitiveMesh=9,p.PrimitiveAnimation=10,p.prototype=Object.assign(Object.create(u.prototype),{constructor:p,isInCanvas:function(){for(var t=this;t;){if("Canvas"===t.type)return!0;t=t.parent}return!1},resetToInitial:function(){this.position=this.initialPosition.slice(),this.rotation=this.initialRotation.slice(),this.size=this.initialSize.slice()},updateInitial:function(){this.initialPosition=this.position.slice(),this.initialRotation=this.rotation.slice(),this.initialSize=this.size.slice()},setPosition:function(t,e,i){"number"==typeof t?(t&&(this.position[0]=t),e&&(this.position[1]=e),i&&(this.position[2]=i)):arguments.length>0&&(2==arguments[0].length?this.position=[arguments[0][0],arguments[0][1],0]:3==arguments[0].length&&(this.position=arguments[0].slice())),this.initialPosition=this.position.slice()},setRotation:function(t,e,i){"number"==typeof t?(t&&(this.rotation[0]=t),e&&(this.rotation[1]=e),i&&(this.rotation[2]=i)):this.rotation=t,this.initialRotation=this.rotation.slice()},getPropagatedSize:function(){for(var t=this.size.slice(),e=this.parent;e;)t[0]*=e.size[0],t[1]*=e.size[1],t[2]*=e.size[2],e=e.parent;return t},setSize:function(t,e,i){void 0!==t&&("number"==typeof t?(this.size[0]=t,this.size[1]=e||t,i?this.size[2]=i:e||(this.size[2]=t)):this.size=arguments[0]),this.initialSize=this.size.slice()},measureText:function(t,e,i,r){if(r=r||{},r.range=r.range||3,""===i)return{relativeBot:0,relativeTop:0,height:0,width:0};var n,a;r.canAndCtx?(n=r.canAndCtx.can,a=r.canAndCtx.ctx):(n=document.createElement("canvas"),n.mozOpaque="true",a=n.getContext("2d"));var o=r.width;o||(a.textBaseline="alphabetic",a.textAlign="left",a.font=t,o=a.measureText(i).width),o=Math.ceil(o),n.width=o,n.height=e*r.range,a.font=t,a.textBaseline="alphabetic",a.textAlign="left",a.fillStyle="white";var s=(r.range+1)/2,c=Math.ceil(e*s);a.fillText(i,0,c);for(var h=e*r.range,l=a.getImageData(0,0,o,h).data,u=-1,p=-1,d=0;d<=h;d++)for(var f=0;f<o;f+=1){var m=4*(o*d+f),g=l[m],v=l[m+1],y=l[m+2];if(g+v+y>0){-1==p&&(p=d),u=d;break}}return{relativeBot:u-c,relativeTop:p-c,height:u-p+1,width:o}},createTextTexture:function(){var t=this.getDocument();if(t){var e=2*this.getAttr("fontSize"),i=this.getAttr("text"),r=this.getAttrRgba("fontColor"),n={};n.canvas=t.createElement("canvas"),n.context=n.canvas.getContext("2d");var a=e.toString()+"px "+this.getAttr("fontName");n.context.font=a;for(var o=this.measureText(a,e,i),s=o.width,c=o.height,h=2,l=2;h<s;)h*=2;for(;l<c;)l*=2;l*=2,n.canvas.width=h,n.canvas.height=l,n.context.clearRect(0,0,h,l);var u,p=(l-c)/2+c/2;switch(this.textAlign){case"left":u=0;break;case"right":u=h-s;break;default:u=(h-s)/2}u=(h-s)/2,p=l/2;var d=this.getAttrRgba("fontBgColor");n.context.fillStyle="rgba("+Math.round(255*d[0])+","+Math.round(255*d[1])+","+Math.round(255*d[2])+","+Math.round(255*d[3])+")",n.context.fillRect(u,p+o.relativeTop,s,c),n.context.font=a,n.context.fillStyle="rgba("+Math.round(255*r[0])+","+Math.round(255*r[1])+","+Math.round(255*r[2])+","+Math.round(255*r[3])+")",n.context.fillText(i,u,p);var f=this.getAttr("fontOutlineStyle");f&&""!==f&&(n.context.strokeStyle=f,n.context.lineWidth=2,n.context.strokeText(i,u,p));var m=this.getPropagatedSize(),g=1;return g=m[0]>m[1]?1/m[0]:1/m[1],n.textSize=[s*g,c*g],n.size=[h*g,l*g],n.relativeTop=o.relativeTop*g,n.relativeBot=o.relativeBot*g,n}this.logError("Can't draw text in empty texture")},getTexture:function(){return this.textureUrl},setTexture:function(t){return this.textureUrl=t,this},setTextureBack:function(t){this.textureBackUrl=t},setGeometry:function(t){this.geometryUrl=t},onUpdate:function(){},update:function(t){void 0==t&&(t=(Date.now()-P)/1e3),this.onUpdate(t),this.timeLast=this.time,this.time=t,this.resetToInitial();for(var e=0;e<this.children.length;e++)this.children[e].update(t);if(void 0!==this.speed&&0!==this.speed&&void 0!==this.timeLast){void 0===this.speedOffset&&(this.speedOffset=[0,0,0]);if(this===this.getCamera()){var i=-this.speed*(t-this.timeLast),r=this.getScene().onGetCameraTranslation([0,0,i]);this.speedOffset=[this.speedOffset[0]+r[0],this.speedOffset[1]+r[1],this.speedOffset[2]+r[2]]}}if(void 0!==this.speedOffset&&(this.position[0]+=this.speedOffset[0],this.position[1]+=this.speedOffset[1],this.position[2]+=this.speedOffset[2]),this.shapes)for(var n in this.shapes)if(this.shapes.hasOwnProperty(n)){var a=this.shapes[n];if(a.weight!==a.weightEval){var o=this.time-a.weightSetTime,s=o>.5?1:o/.5;a.weightEval=s*a.weightEnd+(1-s)*a.weightStart}}},raise:function(t){t&&("string"==typeof t&&(t=this[t]||this.getScene()[t]),t&&t.apply(this))},render:function(){this.onRender()},onRender:function(){},onUpdateSiteMapPath:function(){},getScene:function(){for(var t=this;t&&"Scene"!=t.type;)t=t.parent;return t},getPage:function(){for(var t=this;t&&"Page"!=t.type;)t=t.parent;return t},getScreen:function(){for(var t=this;t&&"Screen"!=t.type;)t=t.parent;return t},getDocument:function(){var t=this.getScene();if(t&&t.window)return t.window.document},getCamera:function(){var t=this.getScene();if(t)return t.camera},setVisible:function(t){this.visible=t},show:function(){this.visible=!0},hide:function(){this.visible=!1},toggleVisible:function(){this.visible=!this.visible},animateFlip:function(){this.animate({duration:1,begin:[0,0,0],end:[0,180,0],attribute:"rotation"})},animateRotate90:function(){this.animate({duration:1,begin:[0,0,0],end:[0,90,0],attribute:"rotation"})},animateFocusStart:function(){this.animate({duration:.3,begin:[1,1,1],end:[1.05,1.05,1.05],attribute:"size"}),this.animate({duration:.3,begin:[0,0,0],end:[0,0,.001],attribute:"position"})},animateFocusEnd:function(){this.animate({duration:.3,begin:[1,1,1],end:[1/1.05,1/1.05,1/1.05],attribute:"size"}),this.animate({duration:.3,begin:[0,0,0],end:[0,0,-.001],attribute:"position"})},animateClick:function(){this.animate({duration:.4,p0:[1,1,1],p1:[1.1,1.1,1.1],p2:[1.1,1.1,1.1],p3:[1,1,1],attribute:"size"})},animateInFromFar:function(t){void 0===t&&(t=0),this.animate({duration:.5,delay:t,begin:[0,0,-100],end:[0,0,0],attribute:"position"})},clearAnimations:function(){for(var t=this.children.length-1;t>=0;t--)if(this.children[t].primitive===p.PrimitiveAnimation){this.children.splice(t,1);break}}}),d.prototype=Object.assign(Object.create(p.prototype),{constructor:d,animateIntro:function(){this.animate({duration:5,begin:[0,0,16],end:[0,0,0]}),this.animate({duration:4.5,delay:1,p0:[0,0,0],p1:[0,40,10],p2:[0,-40,-10],p3:[0,0,0],attribute:"rotation"})}});var k={},O={};window.dataLayer=window.dataLayer||[];var D=!0;w.prototype=Object.assign(Object.create(p.prototype),{constructor:w,convertMouse:function(t,e){var i=this.domElement.getBoundingClientRect(),r=t,n=e,a=r-i.left,o=n-i.top;return a/=i.width,o/=i.height,this.isVrMode()&&(a>.5&&(a-=.5),a*=2),[2*a-1,2*-o+1]},isVrMode:function(){return this.vrMode},isGyroMode:function(){return this.isVrMode()||this.gyroscope},getMouse:function(t){return void 0===t?[0,0]:t.touches?t.touches.length>0?this.convertMouse(t.touches[0].clientX,t.touches[0].clientY):void 0:this.convertMouse(t.clientX,t.clientY)},onPickNode:function(t){x("event","scene.onPickNode"),o("onPickNode")},computeOffsetFromCamera:function(t){var t=this.onGetCameraTranslation(t);return[this.camera.position[0]+t[0],this.camera.position[1]+t[1],this.camera.position[2]+t[2]]},getCameraQuaternion:function(){return this.onGetCameraQuaternion()},onGetCameraQuaternion:function(){return[0,0,0,1]},onGetCameraTranslation:function(t){return[t[0],t[1],t[2]]},touchPinch:function(t){if(t.targetTouches&&t.changedTouches&&2==t.targetTouches.length&&2==t.changedTouches.length){var e=this.convertMouse(t.touches[0].clientX,t.touches[0].clientY),i=this.convertMouse(t.touches[1].clientX,t.touches[1].clientY),r=Math.sqrt((e[0]-i[0])*(e[0]-i[0])+(e[1]-i[1])*(e[1]-i[1]));if(0===this.mousePinchStartDistance)this.mousePinchStartDistance=r,this.mousePinchStartPosition=this.camera.position.slice();else{r=this.mousePinchStartDistance-r,this.camera.setPosition(this.mousePinchStartPosition);var n=this.onGetCameraTranslation([0,0,2*r]);this.camera.setPosition([this.mousePinchStartPosition[0]+n[0],this.mousePinchStartPosition[1]+n[1],this.mousePinchStartPosition[2]+n[2]])}return this.mouseDownCanMove=!1,!0}},onFocusChange:function(t){var e=this.onPickNode(this.getMouse(t));this.assetOver&&e!==this.assetOver&&(void 0!==this.assetOver.onFocus||this.assetOver.animateFocusEnd(),delete this.assetOver),e&&e.onClick&&e!==this.assetOver&&(this.assetOver=e,void 0!==e.onFocus||e.animateFocusStart())},onMouseMove:function(t){if(t.preventDefault(),this.mouseDown){if(this.touchPinch(t)&&(this.mouseDownCanClick=!1),this.mouseDownCanMove){this.mouseMove=this.getMouse(t),this.mouseMoveTime=this.time;var e=L.v2Distance(this.mouseMove,this.mouseDown);e>.01&&(this.mouseDownCanClick=!1,this.mouseDownCameraRotation&&(this.camera.initialRotation=[this.mouseDownCameraRotation[0]-45*(this.mouseMove[1]-this.mouseDown[1]),this.mouseDownCameraRotation[1]+45*(this.mouseMove[0]-this.mouseDown[0]),this.mouseDownCameraRotation[2]]))}}else this.isVrMode()||this.onFocusChange(t)},onMouseDown:function(t){a("onMouseDown"),t.preventDefault(),this.mouseDown=this.getMouse(t),this.mouseDownCameraRotation=this.camera.initialRotation.slice(),this.mouseDownCanClick=!0,this.mouseDownCanMove=!0,this.mousePinchStartDistance=0,this.mouseDownTime=this.time,this.isVrMode()&&this.onMouseUp(t)},onMouseUp:function(t){if(a("onMouseUp"),t.preventDefault(),this.mouseDown){if(this.mouseDownCanClick){this.mouseUp=this.getMouse(t),void 0===this.mouseUp&&(this.mouseUp=this.mouseMove),void 0===this.mouseUp&&(this.mouseUp=this.mouseDown),this.mouseUpTime=this.time;var e=this.mouseDown,i=this.mouseUp,r=this.mouseUpTime-this.mouseDownTime;this.isVrMode()&&(e=[0,0],i=[0,0],r*=4);L.v2Distance(i,e)<.05&&r<.3&&this.onClick(i)}delete this.mouseDown,delete this.mouseMove}},onClick:function(t){var e=this.onPickNode(t);if(e){if(x("event","scene.onClick"),o("onClick"+(e.name?" on "+e.name:"")),e.onClick)if("string"==typeof e.onClick){var i=e[e.onClick];i?i.apply(e,e.onClickArgs):(i=this[e.onClick])&&i.apply(this,e.onClickArgs)}else e.onClick();return!0}},onKeyDown:function(t){x("event","scene.onKeyDown"),o("onKeyDown"),t.preventDefault();var e,i,r=t.shiftKey?.1:1,n=this.page&&"vehicle"===this.page.navigation;switch(t.keyCode){case 37:t.altKey?(e="position",i=this.onGetCameraTranslation([-r,0,0])):(e="rotation",i=[0,20*r,0]);break;case 38:var a=t.altKey;n&&(a=!a),a?(e="position",i=this.onGetCameraTranslation([0,0,-r])):(e="rotation",i=[20*r,0,0]);break;case 39:t.altKey?(e="position",i=this.onGetCameraTranslation([r,0,0])):(e="rotation",i=[0,20*-r,0]);break;case 40:var a=t.altKey;n&&(a=!a),a?(e="position",i=this.onGetCameraTranslation([0,0,r])):(e="rotation",i=[20*-r,0,0])}var s=this.camera;s&&e&&i&&s.add(new PEEKS.Animation({duration:1,begin:[0,0,0],end:i,attribute:e}))},onKeyUp:function(t){x("event","scene.onKeyUp"),o("onKeyUp"),t.preventDefault()},onMouseWheel:function(t){o("onMouseWheel"),t.preventDefault();var e=this.camera.position,i=this.onGetCameraTranslation([0,0,.01*t.deltaY]);this.camera.setPosition([e[0]+i[0],e[1]+i[1],e[2]+i[2]])},onStart:function(){},onResize:function(){},onAnimate:function(){},onSynch:function(){},getPage:function(){return this.page},toggleGyroscope:function(){x("event","scene.toggleGyroscope"),this.gyroscope=!this.gyroscope},toggleArMode:function(){x("event","scene.toggleArMode"),this.setArMode(!this.arMode)},open2D:function(){if(this.page&&this.page.url){window.open(this.page.url,"_blank").focus()}},onShowSiteMapMenu:function(){this.showSiteMapMenu()},showSiteMapMenu:function(t){this.page&&void 0===this.page.siteMapMenu&&(x("event","scene.showSiteMapMenu"),this.page.siteMapMenu=this.page.addAsset()),this.refreshSiteMapMenu(t)},refreshSiteMapMenu:function(t){if(this.page&&this.page.siteMapMenu){var e=this.page,i=function(){e.getScene().hideKeyboard(),e.getScene().hideSiteMapMenu(),e.onUpdateSiteMapPath()},r=function(){e.siteMapPathIsLeaf(this.path)?e.setSiteMapPath(this.path):e.setSiteMapMenuPath(this.path),x("event","scene.onClickSiteMapMenuItem"),i()},n=!0;if(this.page.siteMapMenu.items){for(var a=0;a<this.page.siteMapMenu.items.length;a++)this.page.siteMapMenu.items[a].destroy();n=!1}this.page.siteMapMenu.items=[];var o=e.siteMapMenu.addSphere({position:[0,0,0],rotation:[0,0,0],sides:"back",size:4,alpha:.96,onClick:i});this.page.siteMapMenu.items.push(o);var s=e.siteMapMenu.addScreen({radius:3});this.page.siteMapMenu.items.push(s);var c=this.page.querySiteMapMenuAssets(t);if(c)for(var h=c.length,a=0;a<h;a++){for(var l=c[a],u=a,p=.2;u>=3;)p-=.1,u-=3;var d=u%2==0?.055*-u:.055*(u+1),f=s.addButton({position:[n?.5:d,p,0],size:[.5,.2,1],path:l.path,viewBgColor:[.98,.98,.98],alpha:0,onClick:r});f.addText({position:[0,0,.01],fontSize:48,text:l.name}),n&&f.animate({duration:.6,delay:0,begin:[0,0,0],end:[d-.5,0,0],attribute:"position"})}}},hideSiteMapMenu:function(){this.page&&this.page.siteMapMenu&&(x("event","scene.hideSiteMapMenu"),this.page.siteMapMenu.destroy(),this.page.siteMapMenu=void 0)},showKeyboard:function(t){if(void 0===t&&(t={}),x("event","scene.showKeyboard"),void 0===this.keyboard){this.keyboard=this.addAsset();var e=this.keyboard.addCanvas({valign:"bottom"}),i=e.addView({position:[0,-.35],size:[1,.3,1],viewBgColor:[0,0,0]});i.textInput="";var r=function(){void 0!==i.textEntry&&i.textEntry.destroy(),i.textEntry=i.addText({position:[0,.5-.5/c.length],fontSize:28,fontOutlineStyle:"",fontColor:""===i.textInput?[.4,.4,.4]:[1,1,1],text:""!==i.textInput?i.textInput:"email"===t.style?"<enter email>":"<type some text>",size:[1,1/c.length,1]}),t.onUpdate&&t.onUpdate.call(i.getScene(),i.textInput)},n=function(){i.textInput.length>0&&(i.textInput=i.textInput.substring(0,i.textInput.length-1)),r()},a=function(){t.onEnter&&t.onEnter.call(i.getScene(),i.textInput),this.getScene().hideKeyboard()},o=function(){for(var t=0;t<i.keyWidgets.length;t++)i.keyWidgets[t].animateFlip()},s=function(t){void 0===t&&void 0!==this&&(t=this.input),i.textInput=i.textInput+t,r()},c=[[],["",{text:"1",textBack:"!"},{text:"2",textBack:"@"},{text:"3",textBack:"#"},{text:"4",textBack:"$"},{text:"5",textBack:"%"},{text:"6",textBack:"^"},{text:"7",textBack:"&"},{text:"8",textBack:"*"},{text:"9",textBack:"("},{text:"0",textBack:")"},"","",""],["",{text:"q",textBack:"Q"},{text:"w",textBack:"W"},{text:"e",textBack:"E"},{text:"r",textBack:"R"},{text:"t",textBack:"T"},{text:"y",textBack:"Y"},{text:"u",textBack:"U"},{text:"i",textBack:"I"},{text:"o",textBack:"O"},{text:"p",textBack:"P"},{label:"back",onClick:n},"",""],["",{text:"a",textBack:"A"},{text:"s",textBack:"S"},{text:"d",textBack:"D"},{text:"f",textBack:"F"},{text:"g",textBack:"G"},{text:"h",textBack:"H"},{text:"j",textBack:"J"},{text:"k",textBack:"K"},{text:"l",textBack:"L"},{text:";",textBack:":"},{text:"'",textBack:'"'},{
label:"email"===t.style?"send":"enter",onClick:a},""],["",{text:"z",textBack:"Z"},{text:"x",textBack:"X"},{text:"c",textBack:"C"},{text:"v",textBack:"V"},{text:"b",textBack:"B"},{text:"n",textBack:"N"},{text:"m",textBack:"M"},{text:",",textBack:"<"},{text:".",textBack:">"},{text:"/",textBack:"?"},"","",""],["","","",{label:"shift",onClick:o},"",{label:"space",text:" "},"email"===t.style?{text:"@"}:"",{text:"v",onClick:"hideKeyboard"},"","",""]];i.keyWidgets=[];for(var h=[.8,.8,.8],l=0;l<c.length;l++)for(var u=c[l],p=0;p<u.length;p++){var d=u[p],f=void 0,m=void 0,g=void 0;"string"==typeof d?(f=d,m=d):(f=d.text,m=d.label||f,d.textBack,g=d.onClick),void 0===g&&void 0!==f&&1===f.length&&(g=s);var v=l%2==0?.5:0,y=i.addTextButton({position:[(p+.5+v)/u.length-.5,.5-(l+.5)/c.length],fontSize:28,fontColor:h,input:f,text:m,size:[1/u.length,.9/c.length,1],onClick:g});d.textBack&&(y.addTextButton({rotation:[0,180,0],fontSize:28,fontColor:h,input:d.textBack,text:d.textBack,onClick:g}),i.keyWidgets.push(y))}r(),i.animate({duration:.5,begin:[0,-.3,0],end:[0,0,0],attribute:"position"})}},hideKeyboard:function(){this.keyboard&&(x("event","scene.hideKeyboard"),this.keyboard.destroy(),this.keyboard=void 0),this.hideSiteMapMenu()},getArView:function(){return this.arView},getArImageData:function(){if(this.arView&&this.arView.video&&(void 0===this.arView.canvas&&(this.arView.canvas=document.createElement("canvas"),this.arView.canvas.width=this.arView.video.width,this.arView.canvas.height=this.arView.video.height),this.arView.canvasUpdated)){return this.arView.canvas.getContext("2d").getImageData(0,0,this.arView.canvas.width,this.arView.canvas.height)}},setArMode:function(t){void 0===t&&(t=!0),t!==this.arMode&&(t?(this.DOMarGetElement(),this.arView.show()):this.arView&&this.arView.hide(),this.arMode=t,this.arMode?(x("event","scene.setArModeOn"),this.setVrMode(!1)):x("event","scene.setArModeOff"),this.gyroscope=this.arMode)},DOMarGetElement:function(){if(!this.arView){var t=this.arAsset.addCanvas({}),e=new PEEKS.Plane;e.useVideoTexture=!0,t.add(e),this.arView=t,this.arView.name="AR View",this.arView.videoAsset=e,this.arView.DOMcreateElementVideo(),this.arView.onClick=function(){this.videoAsset.stopVideoTexture=!this.videoAsset.stopVideoTexture},this.arView.onFocus=function(){}}return this.arView.video},toggleVrMode:function(){this.setVrMode(!this.vrMode)},setVrMode:function(t){void 0===t&&(t=!0),t!==this.vrMode&&(this.vrMode=t,this.vrMode?(x("event","scene.setVrModeOn"),this.setArMode(!1)):x("event","scene.setVrModeOff"),this.gyroscope=this.vrMode)},loadPage:function(t){if(this.hideKeyboard(),"string"==typeof t){var e=t;if(void 0===O[e]&&(e="Peeks"),O[e]){this.page&&(h("Unloading current page"),this.page.destroy()),x("event","scene.loadPage",{name:e}),o("Loading "+e);var t=b(e,this);this.add(t),this.page=t,this.pageIndex++,this.pageIndex<this.pagesHistory.length-1?this.pagesHistory.push(e):this.pagesHistory[this.pageIndex]=e}else h("Can't load unregistered page "+e)}else{var i=t;if(i>=0&&i<this.pagesHistory.length){var e=this.pagesHistory[i];this.page&&(h("Unloading current page"),this.page.destroy());var t=b(e,this);this.add(t),this.page=t,this.pageIndex=i}}if(this.page){this.groundImage&&(this.groundImage.destroy(),delete this.groundImage),"off"===this.page.gyroscope&&(this.gyroscope=!1);var r=this.page.getAttr("category"),n=this.page.groundImage,a=50,s=[1,1,1],c=1;void 0===n?"fashion"===r?n="/images/floor_marble_1.jpg":"shopping"===r?n="/images/floor_marble_4.jpg":"entertainment"===r&&(n="/images/floor_dot_1.jpg"):(this.page.groundImageRepeat&&(a=this.page.groundImageRepeat),this.page.groundImageColor&&(s=this.page.groundImageColor),this.page.groundImageAlpha&&(c=this.page.groundImageAlpha)),n&&(this.groundImage=this.ground.addImage({image:n,imageRepeat:[a,a],position:[0,-2,0],rotation:[-90,0,0],size:100,color:s,alpha:c})),this.backgroundImage&&(this.backgroundImage.destroy(),delete this.backgroundImage);var l=t.backgroundImage,u=t.backgroundImageColor||[1,1,1];void 0===l&&("fashion"===r?l="/images/bg_360_place.jpg":"winter"===r?l="/images/bg_360_winter.jpg":"shopping"===r?l="/images/bg_360_interior2.jpg":"entertainment"===r?l="/images/bg_360_interior1.jpg":"outdoor"===r?l="/images/bg_360_bridge.jpg":"soccer"===r?l="/images/bg_360_soccer.jpg":"white"===r||""===r||(l="/images/bg_360_canyon.jpg")),l&&(this.backgroundImage=this.background.addSphere({image:l,position:[0,0,0],rotation:[0,0,0],sides:"back",size:20,color:u})),this.titleText&&(this.titleText.destroy(),delete this.titleText);var p=this.page.getAttr("title");void 0!==p&&""!=p&&(this.titleText=t.addCanvas({valign:"top"}),this.titleText.addTextButton({label:p,position:[0,.45,0],size:[.9,.15,1],fontSize:40}))}this.resetCamera()},loadPreviousPage:function(){x("event","scene.loadPreviousPage"),this.pageIndex>0&&this.loadPage(this.pageIndex-1)},loadNextPage:function(){x("event","scene.loadNextPage"),this.pageIndex<this.pagesHistory.length-1&&this.loadPage(this.pageIndex+1)},loadHomePage:function(){x("event","scene.loadHomePage"),this.loadPage("Peeks")},searchPage:function(){x("event","scene.searchPage"),this.showKeyboard({onUpdate:function(t){this.showSiteMapMenu(t)}})},resetCamera:function(t){this.camera.destroy(),this.camera=this.add(new d),this.camera.setPosition([0,0,0]),t&&this.camera.animateIntro()},updateFullScreen:function(){var t=this.getDocument();t&&(t.fullscreenEnabled||t.webkitFullscreenEnabled||t.mozFullScreenEnabled||t.msFullscreenEnabled)&&(this.isVrMode()?t.fullscreenElement||t.webkitFullscreenElement||t.mozFullscreenElement||t.msFullscreenElement||(this.domElement.requestFullscreen?this.domElement.requestFullscreen():this.domElement.webkitRequestFullscreen?this.domElement.webkitRequestFullscreen():this.domElement.mozRequestFullScreen?this.domElement.mozRequestFullScreen():this.domElement.msRequestFullscreen&&this.domElement.msRequestFullscreen()):(t.fullscreenElement||t.webkitFullscreenElement||t.mozFullscreenElement||t.msFullscreenElement)&&(t.exitFullscreen?t.exitFullscreen():t.webkitExitFullscreen?t.webkitExitFullscreen():t.mozExitFullscreen?t.mozExitFullscreen():t.msExitFullscreen&&t.msExitFullscreen()))},start:function(t,e){var i=t.document,r=i.URL;-1!=r.search("127.0.0.1:3000")?(D=!1,PEEKS.setLogLevel(1)):PEEKS.setLogLevel(3),x("js",new Date),x("config","UA-109650112-1");var n=r.search("\\?");if(-1!==n){this.urlParams=[];for(var a=[],s=r.substring(n+1),c=s.split("&"),h=0;h<c.length;h++){var l=c[h].split("=");a.push([l[0],l[1]]),this.urlParams.push([l[0],l[1]])}PEEKS.registerPage("Christmas",function(){for(var t=new PEEKS.Asset({category:"winter"}),e=(t.addCanvas(),t.addScreen({radius:2})),i=0;i<a.length;i++){e.addTextButton({label:a[i][0].replace("_"," "),position:[.2*(i-.5*a.length),0,0],fontSize:50}).animate({duration:20,delay:0,begin:[1,0,0],end:[-1,0,0],attribute:"position",loop:!0})}return t}),this.loadPage("Christmas")}else{var u=i.title;if("Peeks"===u){var p=r.split(".");p.length>2&&(u=p[1])}this.loadPage(u)}x("event","scene.start"),o("Scene.start"),this.resetCamera(e),this.window=t,this.width=this.window.innerWidth,this.height=this.window.innerHeight,this.onStart(),I=this,i&&(i.body.appendChild(I.domElement),t.addEventListener("orientationchange",function(){I.screenOrientation=t.orientation||0}),t.addEventListener("deviceorientation",function(t){null!=t.alpha&&(I.deviceOrientation=t)}),i.addEventListener("mousemove",function(t){I.onMouseMove(t)}),i.addEventListener("mousedown",function(t){"CANVAS"===t.target.nodeName&&I.onMouseDown(t)}),i.addEventListener("mouseup",function(t){I.onMouseUp(t)}),i.addEventListener("keydown",function(t){I.onKeyDown(t)}),i.addEventListener("keyup",function(t){I.onKeyUp(t)}),i.addEventListener("mousewheel",function(t){"CANVAS"===t.target.nodeName&&I.onMouseWheel(t)}),i.addEventListener("MozMousePixelScroll",function(t){"CANVAS"===t.target.nodeName&&I.onMouseWheel(t)}),i.addEventListener("touchstart",function(t){"CANVAS"===t.target.nodeName&&I.onMouseDown(t)}),i.addEventListener("touchend",function(t){I.onMouseUp(t)}),i.addEventListener("touchmove",function(t){I.onMouseMove(t)}));var e=function(){I&&(requestAnimationFrame(e),I.width===I.window.innerWidth&&I.height===I.window.innerHeight||(I.width=I.window.innerWidth,I.height=I.window.innerHeight,I.onResize()),I.isVrMode()?(void 0!==I.vrReticle&&(I.vrReticle.destroy(),delete I.vrReticle),void 0===I.vrReticle&&(I.vrReticle=I.addCanvas({}),I.vrReticle.vrFixed=!0,I.vrReticle.addRing({viewBgColor:[1,1,1],size:.025}),I.vrReticle.addRing({viewBgColor:[.3,.3,.3],size:.02})),I.onFocusChange()):I.vrReticle&&(I.vrReticle.destroy(),delete I.vrReticle),I.update(),I.background.setPosition(I.camera.position),I.render())};e()}}),E.prototype=Object.assign(Object.create(p.prototype),{constructor:E}),M.prototype=Object.assign(Object.create(p.prototype),{constructor:M}),T.prototype=Object.assign(Object.create(p.prototype),{constructor:T}),S.prototype=Object.assign(Object.create(p.prototype),{constructor:S}),A.InterpolateLinear=0,A.InterpolateEaseInOut=1,A.InterpolateEaseIn=2,A.InterpolateEaseOut=3,A.prototype=Object.assign(Object.create(p.prototype),{constructor:A,interpolateEaseIn:function(t){return t*t},interpolateEaseOut:function(t){return-t*(t-2)},interpolateEaseInOut:function(t){return t<.5?2*t*t:-2*t*t+4*t-1},update:function(t){t*=R;var e=0;void 0===this.startTime&&(this.startTime=t);var i=this.startTime+this.delay,r=i+this.duration;if(t<=i)e=0;else if(t>=r)if(this.loop){for(;t>r;)t-=this.duration;e=(t-i)/this.duration}else e=1;else e=(t-i)/this.duration;switch(this.interpolate){case A.InterpolateLinear:break;case A.InterpolateEaseInOut:e=this.interpolateEaseInOut(e);break;case A.InterpolateEaseIn:e=this.interpolateEaseIn(e);break;case A.InterpolateEaseOut:e=this.interpolateEaseOut(e)}var o=(1-e)*(1-e)*(1-e),s=3*(1-e)*(1-e)*e,c=3*(1-e)*e*e,h=e*e*e,l=[o*this.p0[0]+s*this.p1[0]+c*this.p2[0]+h*this.p3[0],o*this.p0[1]+s*this.p1[1]+c*this.p2[1]+h*this.p3[1],o*this.p0[2]+s*this.p1[2]+c*this.p2[2]+h*this.p3[2]];this.parent&&(this.parent[this.attribute]&&("size"===this.attribute?(this.parent[this.attribute][0]*=l[0],this.parent[this.attribute][1]*=l[1],this.parent[this.attribute][2]*=l[2]):(this.parent[this.attribute][0]+=l[0],this.parent[this.attribute][1]+=l[1],this.parent[this.attribute][2]+=l[2])),this.parent.name&&e>0&&e<1&&n()&&a("Animation update at "+e.toString()+": "+this.parent.name+"["+this.attribute+"] = "+this.parent[this.attribute].toString())),e>=1&&!this.loop&&!this.ended&&(this.ended=!0,this.parent.raise(this.onEnd))}}),e.EventDispatcher=l,e.Node=u,e.Asset=p,e.Scene=w,e.Camera=d,e.Canvas=M,e.Screen=T,e.Page=S,e.Plane=E,e.Animation=A,e.setLogLevel=r,e.logLevel=C,e.logDebug=o,e.logInfo=s,e.logWarning=c,e.logError=h,e.registerPage=y,e.cvSupported=v,e.registerExtension=f,e.getExtension=m,e.addExtensionListener=g,e.navigateToPage=b,e.isPhone=_,e.v3=L.v3,e.color=L.color,e.math=L.math,e.setAnimationSpeed=i;var U=Function("return this")();U.PEEKS=U.PEEKS||e},function(t,e){PEEKS.registerPage("peeks_toolbar",function(){var t=new PEEKS.Asset,e=t.addCanvas({valign:"bottom"});return e.addRoundIconButton({icon:"/ui/icon_previous.png",position:[-.45,-.44],size:.08,onClick:"loadPreviousPage"}),e.addRoundIconButton({icon:"/ui/icon_next.png",position:[-.35,-.44],size:.08,onClick:"loadNextPage"}),e.addRoundTextButton({position:[.45,-.44],size:.08,label:"AR",fontSize:40,onClick:function(){this.getScene().toggleArMode()}}),PEEKS.isPhone()?e.addRoundIconButton({icon:"/ui/icon_gyroscope.png",position:[.35,-.44],size:.08,onClick:function(){this.getScene().toggleGyroscope()}}):e.addRoundTextButton({position:[.35,-.44],size:.08,label:"VR",fontSize:40,onClick:function(){this.getScene().toggleVrMode()}}),e.addTextButton({position:[0,-.44],fontSize:40,text:"search",size:.08,onClick:"searchPage"}),e.animate({duration:1,delay:.2,begin:[0,-.3,0],end:[0,0,0],attribute:"position"}),t})},function(t,e){PEEKS.registerPage("Demo",function(){var t=new PEEKS.Asset;return t.addRecommendationsView(),t.addPage("peeks_toolbar"),t})},function(t,e){PEEKS.registerPage("Peeks",function(){var t=new PEEKS.Asset,e=t.addCanvas();return e.addTextButton({label:"Coming soon....",position:[0,-.3,0],size:[.9,.15,1],fontSize:50}).animate({duration:3,delay:2,begin:[0,-1,0],end:[0,0,0],attribute:"position"}),e.addButton({image:"/ui/icon_peeks.png",position:[0,0],size:[.4,.2,1]}).addAttrAlias("color","colorMedium"),e.addView({position:[0,.1],size:[4,1,1]}).animate({duration:2,delay:1,begin:[1,1,1],end:[1,.003,1],attribute:"size"}).animate({duration:2,delay:1,begin:[0,.5,0],end:[0,0,0],attribute:"position"}),e.addView({position:[0,-.1],size:[4,1,1]}).animate({duration:2,delay:2,begin:[1,1,1],end:[1,.003,1],attribute:"size"}).animate({duration:2,delay:2,begin:[0,-.5,0],end:[0,0,0],attribute:"position"}),t})},function(t,e){!function(t,i){!function(t){"use strict";function e(){}function i(t,e){this.x=t||0,this.y=e||0}function r(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}function n(t,e,i,r){this._x=t||0,this._y=e||0,this._z=i||0,this._w=void 0!==r?r:1}function a(t,e,i){this.x=t||0,this.y=e||0,this.z=i||0}function o(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}function s(t,e,r,n,a,c,h,l,u,p){Object.defineProperty(this,"id",{value:vs++}),this.uuid=gs.generateUUID(),this.name="",this.image=void 0!==t?t:s.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:s.DEFAULT_MAPPING,this.wrapS=void 0!==r?r:xo,this.wrapT=void 0!==n?n:xo,this.magFilter=void 0!==a?a:Mo,this.minFilter=void 0!==c?c:So,this.anisotropy=void 0!==u?u:1,this.format=void 0!==h?h:Ho,this.type=void 0!==l?l:Ao,this.offset=new i(0,0),this.repeat=new i(1,1),this.center=new i(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new o,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==p?p:ss,this.version=0,this.onUpdate=null}function c(t,e,i,r){this.x=t||0,this.y=e||0,this.z=i||0,this.w=void 0!==r?r:1}function h(t,e,i){this.uuid=gs.generateUUID(),this.width=t,this.height=e,this.scissor=new c(0,0,t,e),this.scissorTest=!1,this.viewport=new c(0,0,t,e),i=i||{},void 0===i.minFilter&&(i.minFilter=Mo),this.texture=new s(void 0,void 0,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0===i.stencilBuffer||i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null}function l(t,e,i){h.call(this,t,e,i),this.activeCubeFace=0,this.activeMipMapLevel=0}function u(t,e,i,r,n,a,o,c,h,l,u,p){s.call(this,null,a,o,c,h,l,r,n,u,p),this.image={data:t,width:e,height:i},this.magFilter=void 0!==h?h:_o,this.minFilter=void 0!==l?l:_o,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}function p(t,e,i,r,n,a,o,c,h,l){t=void 0!==t?t:[],e=void 0!==e?e:lo,s.call(this,t,e,i,r,n,a,o,c,h,l),this.flipY=!1}function d(){this.seq=[],this.map={}}function f(t,e,i){var r=t[0];if(r<=0||r>0)return t;var n=e*i,a=bs[n];if(void 0===a&&(a=new Float32Array(n),bs[n]=a),0!==e){r.toArray(a,0);for(var o=1,s=0;o!==e;++o)s+=i,t[o].toArray(a,s)}return a}function m(t,e){var i=_s[e];void 0===i&&(i=new Int32Array(e),_s[e]=i);for(var r=0;r!==e;++r)i[r]=t.allocTextureUnit();return i}function g(t,e){t.uniform1f(this.addr,e)}function v(t,e){t.uniform1i(this.addr,e)}function y(t,e){void 0===e.x?t.uniform2fv(this.addr,e):t.uniform2f(this.addr,e.x,e.y)}function x(t,e){void 0!==e.x?t.uniform3f(this.addr,e.x,e.y,e.z):void 0!==e.r?t.uniform3f(this.addr,e.r,e.g,e.b):t.uniform3fv(this.addr,e)}function b(t,e){void 0===e.x?t.uniform4fv(this.addr,e):t.uniform4f(this.addr,e.x,e.y,e.z,e.w)}function _(t,e){t.uniformMatrix2fv(this.addr,!1,e.elements||e)}function w(t,e){void 0===e.elements?t.uniformMatrix3fv(this.addr,!1,e):(Es.set(e.elements),t.uniformMatrix3fv(this.addr,!1,Es))}function E(t,e){void 0===e.elements?t.uniformMatrix4fv(this.addr,!1,e):(ws.set(e.elements),t.uniformMatrix4fv(this.addr,!1,ws))}function M(t,e,i){var r=i.allocTextureUnit();t.uniform1i(this.addr,r),i.setTexture2D(e||ys,r)}function T(t,e,i){var r=i.allocTextureUnit();t.uniform1i(this.addr,r),i.setTextureCube(e||xs,r)}function S(t,e){t.uniform2iv(this.addr,e)}function A(t,e){t.uniform3iv(this.addr,e)}function R(t,e){t.uniform4iv(this.addr,e)}function C(t){switch(t){case 5126:return g;case 35664:return y;case 35665:return x;case 35666:return b;case 35674:return _;case 35675:return w;case 35676:return E;case 35678:case 36198:return M;case 35680:return T;case 5124:case 35670:return v;case 35667:case 35671:return S;case 35668:case 35672:return A;case 35669:case 35673:return R}}function P(t,e){t.uniform1fv(this.addr,e)}function L(t,e){t.uniform1iv(this.addr,e)}function I(t,e){t.uniform2fv(this.addr,f(e,this.size,2))}function k(t,e){t.uniform3fv(this.addr,f(e,this.size,3))}function O(t,e){t.uniform4fv(this.addr,f(e,this.size,4))}function D(t,e){t.uniformMatrix2fv(this.addr,!1,f(e,this.size,4))}function U(t,e){t.uniformMatrix3fv(this.addr,!1,f(e,this.size,9))}function B(t,e){t.uniformMatrix4fv(this.addr,!1,f(e,this.size,16))}function F(t,e,i){var r=e.length,n=m(i,r);t.uniform1iv(this.addr,n);for(var a=0;a!==r;++a)i.setTexture2D(e[a]||ys,n[a])}function N(t,e,i){var r=e.length,n=m(i,r);t.uniform1iv(this.addr,n);for(var a=0;a!==r;++a)i.setTextureCube(e[a]||xs,n[a])}function z(t){switch(t){case 5126:return P;case 35664:return I;case 35665:return k;case 35666:return O;case 35674:return D;case 35675:return U;case 35676:return B;case 35678:return F;case 35680:return N;case 5124:case 35670:return L;case 35667:case 35671:return S;case 35668:case 35672:return A;case 35669:case 35673:return R}}function H(t,e,i){this.id=t,this.addr=i,this.setValue=C(e.type)}function G(t,e,i){this.id=t,this.addr=i,this.size=e.size,this.setValue=z(e.type)}function V(t){this.id=t,d.call(this)}function j(t,e){t.seq.push(e),t.map[e.id]=e}function W(t,e,i){var r=t.name,n=r.length;for(Ms.lastIndex=0;;){var a=Ms.exec(r),o=Ms.lastIndex,s=a[1],c="]"===a[2],h=a[3];if(c&&(s|=0),void 0===h||"["===h&&o+2===n){j(i,void 0===h?new H(s,t,e):new G(s,t,e));break}var l=i.map,u=l[s];void 0===u&&(u=new V(s),j(i,u)),i=u}}function X(t,e,i){d.call(this),this.renderer=i;for(var r=t.getProgramParameter(e,t.ACTIVE_UNIFORMS),n=0;n<r;++n){var a=t.getActiveUniform(e,n),o=a.name;W(a,t.getUniformLocation(e,o),this)}}function q(t,e,i){return void 0===e&&void 0===i?this.set(t):this.setRGB(t,e,i)}function Y(t,e){this.min=void 0!==t?t:new i(1/0,1/0),this.max=void 0!==e?e:new i(-1/0,-1/0)}function K(t,e,r,n,o){function s(){var t=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),i=new Uint16Array([0,1,2,0,2,3]);h=e.createBuffer(),l=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,h),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,l),e.bufferData(e.ELEMENT_ARRAY_BUFFER,i,e.STATIC_DRAW),m=e.createTexture(),g=e.createTexture(),r.bindTexture(e.TEXTURE_2D,m),e.texImage2D(e.TEXTURE_2D,0,e.RGB,16,16,0,e.RGB,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),r.bindTexture(e.TEXTURE_2D,g),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,16,16,0,e.RGBA,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),u={vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","\tvUV = uv;","\tvec2 pos = position;","\tif ( renderType == 2 ) {","\t\tvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","\t\tvVisibility =        visibility.r / 9.0;","\t\tvVisibility *= 1.0 - visibility.g / 9.0;","\t\tvVisibility *=       visibility.b / 9.0;","\t\tvVisibility *= 1.0 - visibility.a / 9.0;","\t\tpos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","\t\tpos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","\t}","\tgl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","\tif ( renderType == 0 ) {","\t\tgl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","\t} else if ( renderType == 1 ) {","\t\tgl_FragColor = texture2D( map, vUV );","\t} else {","\t\tvec4 texture = texture2D( map, vUV );","\t\ttexture.a *= opacity * vVisibility;","\t\tgl_FragColor = texture;","\t\tgl_FragColor.rgb *= color;","\t}","}"].join("\n")},p=c(u),d={vertex:e.getAttribLocation(p,"position"),uv:e.getAttribLocation(p,"uv")},f={renderType:e.getUniformLocation(p,"renderType"),map:e.getUniformLocation(p,"map"),occlusionMap:e.getUniformLocation(p,"occlusionMap"),opacity:e.getUniformLocation(p,"opacity"),color:e.getUniformLocation(p,"color"),scale:e.getUniformLocation(p,"scale"),rotation:e.getUniformLocation(p,"rotation"),screenPosition:e.getUniformLocation(p,"screenPosition")}}function c(t){var i=e.createProgram(),r=e.createShader(e.FRAGMENT_SHADER),n=e.createShader(e.VERTEX_SHADER),a="precision "+o.precision+" float;\n";return e.shaderSource(r,a+t.fragmentShader),e.shaderSource(n,a+t.vertexShader),e.compileShader(r),e.compileShader(n),e.attachShader(i,r),e.attachShader(i,n),e.linkProgram(i),i}var h,l,u,p,d,f,m,g;this.render=function(t,o,c,u){if(0!==t.length){var v=new a,y=u.w/u.z,x=.5*u.z,b=.5*u.w,_=16/u.w,w=new i(_*y,_),E=new a(1,1,0),M=new i(1,1),T=new Y;T.min.set(u.x,u.y),T.max.set(u.x+(u.z-16),u.y+(u.w-16)),void 0===p&&s(),r.useProgram(p),r.initAttributes(),r.enableAttribute(d.vertex),r.enableAttribute(d.uv),r.disableUnusedAttributes(),e.uniform1i(f.occlusionMap,0),e.uniform1i(f.map,1),e.bindBuffer(e.ARRAY_BUFFER,h),e.vertexAttribPointer(d.vertex,2,e.FLOAT,!1,16,0),e.vertexAttribPointer(d.uv,2,e.FLOAT,!1,16,8),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,l),r.disable(e.CULL_FACE),r.buffers.depth.setMask(!1);for(var S=0,A=t.length;S<A;S++){_=16/u.w,w.set(_*y,_);var R=t[S];if(v.set(R.matrixWorld.elements[12],R.matrixWorld.elements[13],R.matrixWorld.elements[14]),v.applyMatrix4(c.matrixWorldInverse),v.applyMatrix4(c.projectionMatrix),E.copy(v),M.x=u.x+E.x*x+x-8,M.y=u.y+E.y*b+b-8,!0===T.containsPoint(M)){r.activeTexture(e.TEXTURE0),r.bindTexture(e.TEXTURE_2D,null),r.activeTexture(e.TEXTURE1),r.bindTexture(e.TEXTURE_2D,m),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGB,M.x,M.y,16,16,0),e.uniform1i(f.renderType,0),e.uniform2f(f.scale,w.x,w.y),e.uniform3f(f.screenPosition,E.x,E.y,E.z),r.disable(e.BLEND),r.enable(e.DEPTH_TEST),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),r.activeTexture(e.TEXTURE0),r.bindTexture(e.TEXTURE_2D,g),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGBA,M.x,M.y,16,16,0),e.uniform1i(f.renderType,1),r.disable(e.DEPTH_TEST),r.activeTexture(e.TEXTURE1),r.bindTexture(e.TEXTURE_2D,m),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),R.positionScreen.copy(E),R.customUpdateCallback?R.customUpdateCallback(R):R.updateLensFlares(),e.uniform1i(f.renderType,2),r.enable(e.BLEND);for(var C=0,P=R.lensFlares.length;C<P;C++){var L=R.lensFlares[C];L.opacity>.001&&L.scale>.001&&(E.x=L.x,E.y=L.y,E.z=L.z,_=L.size*L.scale/u.w,w.x=_*y,w.y=_,e.uniform3f(f.screenPosition,E.x,E.y,E.z),e.uniform2f(f.scale,w.x,w.y),e.uniform1f(f.rotation,L.rotation),e.uniform1f(f.opacity,L.opacity),e.uniform3f(f.color,L.color.r,L.color.g,L.color.b),r.setBlending(L.blending,L.blendEquation,L.blendSrc,L.blendDst),n.setTexture2D(L.texture,1),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}}}r.enable(e.CULL_FACE),r.enable(e.DEPTH_TEST),r.buffers.depth.setMask(!0),r.reset()}}}function Z(t,e,i,r,n,a,o,c,h){s.call(this,t,e,i,r,n,a,o,c,h),this.needsUpdate=!0}function J(t,e,i,r,o){function s(){var t=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),i=new Uint16Array([0,1,2,0,2,3]);l=e.createBuffer(),u=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,l),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,u),e.bufferData(e.ELEMENT_ARRAY_BUFFER,i,e.STATIC_DRAW),p=c(),d={position:e.getAttribLocation(p,"position"),uv:e.getAttribLocation(p,"uv")},f={uvOffset:e.getUniformLocation(p,"uvOffset"),uvScale:e.getUniformLocation(p,"uvScale"),rotation:e.getUniformLocation(p,"rotation"),scale:e.getUniformLocation(p,"scale"),color:e.getUniformLocation(p,"color"),map:e.getUniformLocation(p,"map"),opacity:e.getUniformLocation(p,"opacity"),modelViewMatrix:e.getUniformLocation(p,"modelViewMatrix"),projectionMatrix:e.getUniformLocation(p,"projectionMatrix"),fogType:e.getUniformLocation(p,"fogType"),fogDensity:e.getUniformLocation(p,"fogDensity"),fogNear:e.getUniformLocation(p,"fogNear"),fogFar:e.getUniformLocation(p,"fogFar"),fogColor:e.getUniformLocation(p,"fogColor"),fogDepth:e.getUniformLocation(p,"fogDepth"),alphaTest:e.getUniformLocation(p,"alphaTest")};var r=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");r.width=8,r.height=8;var n=r.getContext("2d");n.fillStyle="white",n.fillRect(0,0,8,8),m=new Z(r)}function c(){var t=e.createProgram(),i=e.createShader(e.VERTEX_SHADER),r=e.createShader(e.FRAGMENT_SHADER);return e.shaderSource(i,["precision "+o.precision+" float;","#define SHADER_NAME SpriteMaterial","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float fogDepth;","void main() {","\tvUV = uvOffset + uv * uvScale;","\tvec2 alignedPosition = position * scale;","\tvec2 rotatedPosition;","\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","\tvec4 mvPosition;","\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","\tmvPosition.xy += rotatedPosition;","\tgl_Position = projectionMatrix * mvPosition;","\tfogDepth = - mvPosition.z;","}"].join("\n")),e.shaderSource(r,["precision "+o.precision+" float;","#define SHADER_NAME SpriteMaterial","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","varying float fogDepth;","void main() {","\tvec4 texture = texture2D( map, vUV );","\tgl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","\tif ( gl_FragColor.a < alphaTest ) discard;","\tif ( fogType > 0 ) {","\t\tfloat fogFactor = 0.0;","\t\tif ( fogType == 1 ) {","\t\t\tfogFactor = smoothstep( fogNear, fogFar, fogDepth );","\t\t} else {","\t\t\tconst float LOG2 = 1.442695;","\t\t\tfogFactor = exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 );","\t\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","\t\t}","\t\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );","\t}","}"].join("\n")),e.compileShader(i),e.compileShader(r),e.attachShader(t,i),e.attachShader(t,r),e.linkProgram(t),t}function h(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:e.id-t.id}var l,u,p,d,f,m,g=new a,v=new n,y=new a;this.render=function(n,a,o){if(0!==n.length){void 0===p&&s(),i.useProgram(p),i.initAttributes(),i.enableAttribute(d.position),i.enableAttribute(d.uv),i.disableUnusedAttributes(),i.disable(e.CULL_FACE),i.enable(e.BLEND),e.bindBuffer(e.ARRAY_BUFFER,l),e.vertexAttribPointer(d.position,2,e.FLOAT,!1,16,0),e.vertexAttribPointer(d.uv,2,e.FLOAT,!1,16,8),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,u),e.uniformMatrix4fv(f.projectionMatrix,!1,o.projectionMatrix.elements),i.activeTexture(e.TEXTURE0),e.uniform1i(f.map,0);var c=0,x=0,b=a.fog;b?(e.uniform3f(f.fogColor,b.color.r,b.color.g,b.color.b),b.isFog?(e.uniform1f(f.fogNear,b.near),e.uniform1f(f.fogFar,b.far),e.uniform1i(f.fogType,1),c=1,x=1):b.isFogExp2&&(e.uniform1f(f.fogDensity,b.density),e.uniform1i(f.fogType,2),c=2,x=2)):(e.uniform1i(f.fogType,0),c=0,x=0);for(var _=0,w=n.length;_<w;_++){var E=n[_];E.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,E.matrixWorld),E.z=-E.modelViewMatrix.elements[14]}n.sort(h);for(var M=[],_=0,w=n.length;_<w;_++){var E=n[_],T=E.material;if(!1!==T.visible){E.onBeforeRender(t,a,o,void 0,T,void 0),e.uniform1f(f.alphaTest,T.alphaTest),e.uniformMatrix4fv(f.modelViewMatrix,!1,E.modelViewMatrix.elements),E.matrixWorld.decompose(g,v,y),M[0]=y.x,M[1]=y.y;var S=0;a.fog&&T.fog&&(S=x),c!==S&&(e.uniform1i(f.fogType,S),c=S),null!==T.map?(e.uniform2f(f.uvOffset,T.map.offset.x,T.map.offset.y),e.uniform2f(f.uvScale,T.map.repeat.x,T.map.repeat.y)):(e.uniform2f(f.uvOffset,0,0),e.uniform2f(f.uvScale,1,1)),e.uniform1f(f.opacity,T.opacity),e.uniform3f(f.color,T.color.r,T.color.g,T.color.b),e.uniform1f(f.rotation,T.rotation),e.uniform2fv(f.scale,M),i.setBlending(T.blending,T.blendEquation,T.blendSrc,T.blendDst,T.blendEquationAlpha,T.blendSrcAlpha,T.blendDstAlpha,T.premultipliedAlpha),i.buffers.depth.setTest(T.depthTest),i.buffers.depth.setMask(T.depthWrite),i.buffers.color.setMask(T.colorWrite),r.setTexture2D(T.map||m,0),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),E.onAfterRender(t,a,o,void 0,T,void 0)}}i.enable(e.CULL_FACE),i.reset()}}}function Q(){Object.defineProperty(this,"id",{value:Ps++}),this.uuid=gs.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.lights=!0,this.blending=Aa,this.side=ba,this.flatShading=!1,this.vertexColors=Ea,this.opacity=1,this.transparent=!1,this.blendSrc=Ha,this.blendDst=Ga,this.blendEquation=Ia,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Ja,this.depthTest=!0,this.depthWrite=!0,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.overdraw=0,this.visible=!0,this.userData={},this.needsUpdate=!0}function $(t){Q.call(this),this.type="MeshDepthMaterial",this.depthPacking=fs,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.setValues(t)}function tt(t){Q.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new a,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.lights=!1,this.setValues(t)}function et(t,e){this.min=void 0!==t?t:new a(1/0,1/0,1/0),this.max=void 0!==e?e:new a(-1/0,-1/0,-1/0)}function it(t,e){this.center=void 0!==t?t:new a,this.radius=void 0!==e?e:0}function rt(t,e){this.normal=void 0!==t?t:new a(1,0,0),
this.constant=void 0!==e?e:0}function nt(t,e,i,r,n,a){this.planes=[void 0!==t?t:new rt,void 0!==e?e:new rt,void 0!==i?i:new rt,void 0!==r?r:new rt,void 0!==n?n:new rt,void 0!==a?a:new rt]}function at(t,e,n){function o(e,i,r,n,a,o){var s=e.geometry,c=null,h=x,l=e.customDepthMaterial;if(r&&(h=b,l=e.customDistanceMaterial),l)c=l;else{var u=!1;i.morphTargets&&(s&&s.isBufferGeometry?u=s.morphAttributes&&s.morphAttributes.position&&s.morphAttributes.position.length>0:s&&s.isGeometry&&(u=s.morphTargets&&s.morphTargets.length>0)),e.isSkinnedMesh&&!1===i.skinning&&console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e);var p=e.isSkinnedMesh&&i.skinning,d=0;u&&(d|=g),p&&(d|=v),c=h[d]}if(t.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length){var f=c.uuid,m=i.uuid,y=_[f];void 0===y&&(y={},_[f]=y);var w=y[m];void 0===w&&(w=c.clone(),y[m]=w),c=w}c.visible=i.visible,c.wireframe=i.wireframe;var E=i.side;return P.renderSingleSided&&E==wa&&(E=ba),P.renderReverseSided&&(E===ba?E=_a:E===_a&&(E=ba)),c.side=E,c.clipShadows=i.clipShadows,c.clippingPlanes=i.clippingPlanes,c.clipIntersection=i.clipIntersection,c.wireframeLinewidth=i.wireframeLinewidth,c.linewidth=i.linewidth,r&&c.isMeshDistanceMaterial&&(c.referencePosition.copy(n),c.nearDistance=a,c.farDistance=o),c}function s(i,r,n,a){if(!1!==i.visible){if(i.layers.test(r.layers)&&(i.isMesh||i.isLine||i.isPoints)&&i.castShadow&&(!i.frustumCulled||l.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,i.matrixWorld);var c=e.update(i),h=i.material;if(Array.isArray(h))for(var u=c.groups,p=0,d=u.length;p<d;p++){var f=u[p],g=h[f.materialIndex];if(g&&g.visible){var v=o(i,g,a,m,n.near,n.far);t.renderBufferDirect(n,null,c,v,i,f)}}else if(h.visible){var v=o(i,h,a,m,n.near,n.far);t.renderBufferDirect(n,null,c,v,i,null)}}for(var y=i.children,x=0,b=y.length;x<b;x++)s(y[x],r,n,a)}}for(var l=new nt,u=new r,p=new i,d=new i(n,n),f=new a,m=new a,g=1,v=2,y=1+(g|v),x=new Array(y),b=new Array(y),_={},w=[new a(1,0,0),new a(-1,0,0),new a(0,0,1),new a(0,0,-1),new a(0,1,0),new a(0,-1,0)],E=[new a(0,1,0),new a(0,1,0),new a(0,1,0),new a(0,1,0),new a(0,0,1),new a(0,0,-1)],M=[new c,new c,new c,new c,new c,new c],T=0;T!==y;++T){var S=0!=(T&g),A=0!=(T&v),R=new $({depthPacking:ms,morphTargets:S,skinning:A});x[T]=R;var C=new tt({morphTargets:S,skinning:A});b[T]=C}var P=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=ya,this.renderReverseSided=!0,this.renderSingleSided=!0,this.render=function(e,i,r){if(!1!==P.enabled&&(!1!==P.autoUpdate||!1!==P.needsUpdate)&&0!==e.length){var n=t.context,a=t.state;a.disable(n.BLEND),a.buffers.color.setClear(1,1,1,1),a.buffers.depth.setTest(!0),a.setScissorTest(!1);for(var o,c=0,g=e.length;c<g;c++){var v=e[c],y=v.shadow,x=v&&v.isPointLight;if(void 0!==y){var b=y.camera;if(p.copy(y.mapSize),p.min(d),x){var _=p.x,T=p.y;M[0].set(2*_,T,_,T),M[1].set(0,T,_,T),M[2].set(3*_,T,_,T),M[3].set(_,T,_,T),M[4].set(3*_,0,_,T),M[5].set(_,0,_,T),p.x*=4,p.y*=2}if(null===y.map){var S={minFilter:_o,magFilter:_o,format:Ho};y.map=new h(p.x,p.y,S),y.map.texture.name=v.name+".shadowMap",b.updateProjectionMatrix()}y.isSpotLightShadow&&y.update(v);var A=y.map,R=y.matrix;m.setFromMatrixPosition(v.matrixWorld),b.position.copy(m),x?(o=6,R.makeTranslation(-m.x,-m.y,-m.z)):(o=1,f.setFromMatrixPosition(v.target.matrixWorld),b.lookAt(f),b.updateMatrixWorld(),R.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),R.multiply(b.projectionMatrix),R.multiply(b.matrixWorldInverse)),t.setRenderTarget(A),t.clear();for(var C=0;C<o;C++){if(x){f.copy(b.position),f.add(w[C]),b.up.copy(E[C]),b.lookAt(f),b.updateMatrixWorld();var L=M[C];a.viewport(L)}u.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),l.setFromMatrix(u),s(i,r,b,x)}}else console.warn("THREE.WebGLShadowMap:",v,"has no shadow.")}P.needsUpdate=!1}}}function ot(t){function e(e,i){var r=e.array,n=e.dynamic?t.DYNAMIC_DRAW:t.STATIC_DRAW,a=t.createBuffer();t.bindBuffer(i,a),t.bufferData(i,r,n),e.onUploadCallback();var o=t.FLOAT;return r instanceof Float32Array?o=t.FLOAT:r instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):r instanceof Uint16Array?o=t.UNSIGNED_SHORT:r instanceof Int16Array?o=t.SHORT:r instanceof Uint32Array?o=t.UNSIGNED_INT:r instanceof Int32Array?o=t.INT:r instanceof Int8Array?o=t.BYTE:r instanceof Uint8Array&&(o=t.UNSIGNED_BYTE),{buffer:a,type:o,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version}}function i(e,i,r){var n=i.array,a=i.updateRange;t.bindBuffer(r,e),!1===i.dynamic?t.bufferData(r,n,t.STATIC_DRAW):-1===a.count?t.bufferSubData(r,0,n):0===a.count?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(t.bufferSubData(r,a.offset*n.BYTES_PER_ELEMENT,n.subarray(a.offset,a.offset+a.count)),a.count=-1)}function r(t){return t.isInterleavedBufferAttribute&&(t=t.data),o[t.uuid]}function n(e){e.isInterleavedBufferAttribute&&(e=e.data);var i=o[e.uuid];i&&(t.deleteBuffer(i.buffer),delete o[e.uuid])}function a(t,r){t.isInterleavedBufferAttribute&&(t=t.data);var n=o[t.uuid];void 0===n?o[t.uuid]=e(t,r):n.version<t.version&&(i(n.buffer,t,r),n.version=t.version)}var o={};return{get:r,remove:n,update:a}}function st(t,e,i,r){this._x=t||0,this._y=e||0,this._z=i||0,this._order=r||st.DefaultOrder}function ct(){this.mask=1}function ht(){function t(){c.setFromEuler(s,!1)}function e(){s.setFromQuaternion(c,void 0,!1)}Object.defineProperty(this,"id",{value:Ls++}),this.uuid=gs.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ht.DefaultUp.clone();var i=new a,s=new st,c=new n,h=new a(1,1,1);s.onChange(t),c.onChange(e),Object.defineProperties(this,{position:{enumerable:!0,value:i},rotation:{enumerable:!0,value:s},quaternion:{enumerable:!0,value:c},scale:{enumerable:!0,value:h},modelViewMatrix:{value:new r},normalMatrix:{value:new o}}),this.matrix=new r,this.matrixWorld=new r,this.matrixAutoUpdate=ht.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ct,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}function lt(){ht.call(this),this.type="Camera",this.matrixWorldInverse=new r,this.projectionMatrix=new r}function ut(t,e,i,r,n,a){lt.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=i,this.bottom=r,this.near=void 0!==n?n:.1,this.far=void 0!==a?a:2e3,this.updateProjectionMatrix()}function pt(t,e,i,r,n,o){this.a=t,this.b=e,this.c=i,this.normal=r&&r.isVector3?r:new a,this.vertexNormals=Array.isArray(r)?r:[],this.color=n&&n.isColor?n:new q,this.vertexColors=Array.isArray(n)?n:[],this.materialIndex=void 0!==o?o:0}function dt(){Object.defineProperty(this,"id",{value:Is+=2}),this.uuid=gs.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}function ft(t,e,i){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.uuid=gs.generateUUID(),this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===i,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.onUploadCallback=function(){},this.version=0}function mt(t,e,i){ft.call(this,new Int8Array(t),e,i)}function gt(t,e,i){ft.call(this,new Uint8Array(t),e,i)}function vt(t,e,i){ft.call(this,new Uint8ClampedArray(t),e,i)}function yt(t,e,i){ft.call(this,new Int16Array(t),e,i)}function xt(t,e,i){ft.call(this,new Uint16Array(t),e,i)}function bt(t,e,i){ft.call(this,new Int32Array(t),e,i)}function _t(t,e,i){ft.call(this,new Uint32Array(t),e,i)}function wt(t,e,i){ft.call(this,new Float32Array(t),e,i)}function Et(t,e,i){ft.call(this,new Float64Array(t),e,i)}function Mt(){this.indices=[],this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}function Tt(t){if(0===t.length)return-1/0;for(var e=t[0],i=1,r=t.length;i<r;++i)t[i]>e&&(e=t[i]);return e}function St(){Object.defineProperty(this,"id",{value:ks+=2}),this.uuid=gs.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0}}function At(t,e,i,r,n,a){dt.call(this),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:r,heightSegments:n,depthSegments:a},this.fromBufferGeometry(new Rt(t,e,i,r,n,a)),this.mergeVertices()}function Rt(t,e,i,r,n,o){function s(t,e,i,r,n,o,s,m,g,v,y){var x,b,_=o/g,w=s/v,E=o/2,M=s/2,T=m/2,S=g+1,A=v+1,R=0,C=0,P=new a;for(b=0;b<A;b++){var L=b*w-M;for(x=0;x<S;x++){var I=x*_-E;P[t]=I*r,P[e]=L*n,P[i]=T,l.push(P.x,P.y,P.z),P[t]=0,P[e]=0,P[i]=m>0?1:-1,u.push(P.x,P.y,P.z),p.push(x/g),p.push(1-b/v),R+=1}}for(b=0;b<v;b++)for(x=0;x<g;x++){var k=d+x+S*b,O=d+x+S*(b+1),D=d+(x+1)+S*(b+1),U=d+(x+1)+S*b;h.push(k,O,U),h.push(O,D,U),C+=6}c.addGroup(f,C,y),f+=C,d+=R}St.call(this),this.type="BoxBufferGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:r,heightSegments:n,depthSegments:o};var c=this;t=t||1,e=e||1,i=i||1,r=Math.floor(r)||1,n=Math.floor(n)||1,o=Math.floor(o)||1;var h=[],l=[],u=[],p=[],d=0,f=0;s("z","y","x",-1,-1,i,e,t,o,n,0),s("z","y","x",1,-1,i,e,-t,o,n,1),s("x","z","y",1,1,t,i,e,r,o,2),s("x","z","y",1,-1,t,i,-e,r,o,3),s("x","y","z",1,-1,t,e,i,r,n,4),s("x","y","z",-1,-1,t,e,-i,r,n,5),this.setIndex(h),this.addAttribute("position",new wt(l,3)),this.addAttribute("normal",new wt(u,3)),this.addAttribute("uv",new wt(p,2))}function Ct(t,e,i,r){dt.call(this),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:r},this.fromBufferGeometry(new Pt(t,e,i,r)),this.mergeVertices()}function Pt(t,e,i,r){St.call(this),this.type="PlaneBufferGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:r},t=t||1,e=e||1;var n,a,o=t/2,s=e/2,c=Math.floor(i)||1,h=Math.floor(r)||1,l=c+1,u=h+1,p=t/c,d=e/h,f=[],m=[],g=[],v=[];for(a=0;a<u;a++){var y=a*d-s;for(n=0;n<l;n++){var x=n*p-o;m.push(x,-y,0),g.push(0,0,1),v.push(n/c),v.push(1-a/h)}}for(a=0;a<h;a++)for(n=0;n<c;n++){var b=n+l*a,_=n+l*(a+1),w=n+1+l*(a+1),E=n+1+l*a;f.push(b,_,E),f.push(_,w,E)}this.setIndex(f),this.addAttribute("position",new wt(m,3)),this.addAttribute("normal",new wt(g,3)),this.addAttribute("uv",new wt(v,2))}function Lt(t){Q.call(this),this.type="MeshBasicMaterial",this.color=new q(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=io,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.lights=!1,this.setValues(t)}function It(t){Q.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}function kt(t,e){this.origin=void 0!==t?t:new a,this.direction=void 0!==e?e:new a}function Ot(t,e){this.start=void 0!==t?t:new a,this.end=void 0!==e?e:new a}function Dt(t,e,i){this.a=void 0!==t?t:new a,this.b=void 0!==e?e:new a,this.c=void 0!==i?i:new a}function Ut(t,e){ht.call(this),this.type="Mesh",this.geometry=void 0!==t?t:new St,this.material=void 0!==e?e:new Lt({color:16777215*Math.random()}),this.drawMode=ns,this.updateMorphTargets()}function Bt(t,e,i,r){function n(e,r,n,u){var p=r.background;null===p?a(h,l):p&&p.isColor&&(a(p,1),u=!0),(t.autoClear||u)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),p&&p.isCubeTexture?(void 0===c&&(c=new Ut(new Rt(1,1,1),new It({uniforms:Cs.cube.uniforms,vertexShader:Cs.cube.vertexShader,fragmentShader:Cs.cube.fragmentShader,side:_a,depthTest:!0,depthWrite:!1,fog:!1})),c.geometry.removeAttribute("normal"),c.geometry.removeAttribute("uv"),c.onBeforeRender=function(t,e,i){this.matrixWorld.copyPosition(i.matrixWorld)},i.update(c.geometry)),c.material.uniforms.tCube.value=p,e.push(c,c.geometry,c.material,0,null)):p&&p.isTexture&&(void 0===o&&(o=new ut(-1,1,1,-1,0,1),s=new Ut(new Pt(2,2),new Lt({depthTest:!1,depthWrite:!1,fog:!1})),i.update(s.geometry)),s.material.map=p,t.renderBufferDirect(o,null,s.geometry,s.material,s,null))}function a(t,i){e.buffers.color.setClear(t.r,t.g,t.b,i,r)}var o,s,c,h=new q(0),l=0;return{getClearColor:function(){return h},setClearColor:function(t,e){h.set(t),l=void 0!==e?e:1,a(h,l)},getClearAlpha:function(){return l},setClearAlpha:function(t){l=t,a(h,l)},render:n}}function Ft(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program&&e.program&&t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Nt(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function zt(){function t(){n=0,a.length=0,o.length=0}function e(t,e,i,s,c){var h=r[n];void 0===h?(h={id:t.id,object:t,geometry:e,material:i,program:i.program,renderOrder:t.renderOrder,z:s,group:c},r[n]=h):(h.id=t.id,h.object=t,h.geometry=e,h.material=i,h.program=i.program,h.renderOrder=t.renderOrder,h.z=s,h.group=c),(!0===i.transparent?o:a).push(h),n++}function i(){a.length>1&&a.sort(Ft),o.length>1&&o.sort(Nt)}var r=[],n=0,a=[],o=[];return{opaque:a,transparent:o,init:t,push:e,sort:i}}function Ht(){function t(t,e){var r=t.id+","+e.id,n=i[r];return void 0===n&&(n=new zt,i[r]=n),n}function e(){i={}}var i={};return{get:t,dispose:e}}function Gt(t,e){return Math.abs(e[1])-Math.abs(t[1])}function Vt(t){function e(e,n,a,o){var s=e.morphTargetInfluences,c=s.length,h=i[n.id];if(void 0===h){h=[];for(var l=0;l<c;l++)h[l]=[l,0];i[n.id]=h}for(var u=a.morphTargets&&n.morphAttributes.position,p=a.morphNormals&&n.morphAttributes.normal,l=0;l<c;l++){var d=h[l];0!==d[1]&&(u&&n.removeAttribute("morphTarget"+l),p&&n.removeAttribute("morphNormal"+l))}for(var l=0;l<c;l++){var d=h[l];d[0]=l,d[1]=s[l]}h.sort(Gt);for(var l=0;l<8;l++){var d=h[l];if(d){var f=d[0],m=d[1];if(m){u&&n.addAttribute("morphTarget"+l,u[f]),p&&n.addAttribute("morphNormal"+l,p[f]),r[l]=m;continue}}r[l]=0}o.getUniforms().setValue(t,"morphTargetInfluences",r)}var i={},r=new Float32Array(8);return{update:e}}function jt(t,e,i){function r(t){s=t}function n(t){c=t.type,h=t.bytesPerElement}function a(e,r){t.drawElements(s,r,c,e*h),i.calls++,i.vertices+=r,s===t.TRIANGLES?i.faces+=r/3:s===t.POINTS&&(i.points+=r)}function o(r,n,a){var o=e.get("ANGLE_instanced_arrays");if(null===o)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");o.drawElementsInstancedANGLE(s,a,c,n*h,r.maxInstancedCount),i.calls++,i.vertices+=a*r.maxInstancedCount,s===t.TRIANGLES?i.faces+=r.maxInstancedCount*a/3:s===t.POINTS&&(i.points+=r.maxInstancedCount*a)}var s,c,h;this.setMode=r,this.setIndex=n,this.render=a,this.renderInstances=o}function Wt(t,e,i){function r(t){o=t}function n(e,r){t.drawArrays(o,e,r),i.calls++,i.vertices+=r,o===t.TRIANGLES?i.faces+=r/3:o===t.POINTS&&(i.points+=r)}function a(r,n,a){var s=e.get("ANGLE_instanced_arrays");if(null===s)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");var c=r.attributes.position;c.isInterleavedBufferAttribute?(a=c.data.count,s.drawArraysInstancedANGLE(o,0,a,r.maxInstancedCount)):s.drawArraysInstancedANGLE(o,n,a,r.maxInstancedCount),i.calls++,i.vertices+=a*r.maxInstancedCount,o===t.TRIANGLES?i.faces+=r.maxInstancedCount*a/3:o===t.POINTS&&(i.points+=r.maxInstancedCount*a)}var o;this.setMode=r,this.render=n,this.renderInstances=a}function Xt(t,e,i){function r(t){var n=t.target,a=s[n.id];null!==a.index&&e.remove(a.index);for(var o in a.attributes)e.remove(a.attributes[o]);n.removeEventListener("dispose",r),delete s[n.id];var h=c[n.id];h&&(e.remove(h),delete c[n.id]),h=c[a.id],h&&(e.remove(h),delete c[a.id]),i.geometries--}function n(t,e){var n=s[e.id];return n||(e.addEventListener("dispose",r),e.isBufferGeometry?n=e:e.isGeometry&&(void 0===e._bufferGeometry&&(e._bufferGeometry=(new St).setFromObject(t)),n=e._bufferGeometry),s[e.id]=n,i.geometries++,n)}function a(i){var r=i.index,n=i.attributes;null!==r&&e.update(r,t.ELEMENT_ARRAY_BUFFER);for(var a in n)e.update(n[a],t.ARRAY_BUFFER);var o=i.morphAttributes;for(var a in o)for(var s=o[a],c=0,h=s.length;c<h;c++)e.update(s[c],t.ARRAY_BUFFER)}function o(i){var r=c[i.id];if(r)return r;var n=[],a=i.index,o=i.attributes;if(null!==a)for(var s=a.array,h=0,l=s.length;h<l;h+=3){var u=s[h+0],p=s[h+1],d=s[h+2];n.push(u,p,p,d,d,u)}else for(var s=o.position.array,h=0,l=s.length/3-1;h<l;h+=3){var u=h+0,p=h+1,d=h+2;n.push(u,p,p,d,d,u)}return r=new(Tt(n)>65535?_t:xt)(n,1),e.update(r,t.ELEMENT_ARRAY_BUFFER),c[i.id]=r,r}var s={},c={};return{get:n,update:a,getWireframeAttribute:o}}function qt(){var t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];var r;switch(e.type){case"DirectionalLight":r={direction:new a,color:new q,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new i};break;case"SpotLight":r={position:new a,direction:new a,color:new q,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new i};break;case"PointLight":r={position:new a,color:new q,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new i,shadowCameraNear:1,shadowCameraFar:1e3};break;case"HemisphereLight":r={direction:new a,skyColor:new q,groundColor:new q};break;case"RectAreaLight":r={color:new q,position:new a,halfWidth:new a,halfHeight:new a}}return t[e.id]=r,r}}}function Yt(){function t(t,r,a){for(var c=0,h=0,l=0,u=0,p=0,d=0,f=0,m=0,g=a.matrixWorldInverse,v=0,y=t.length;v<y;v++){var x=t[v],b=x.color,_=x.intensity,w=x.distance,E=x.shadow&&x.shadow.map?x.shadow.map.texture:null;if(x.isAmbientLight)c+=b.r*_,h+=b.g*_,l+=b.b*_;else if(x.isDirectionalLight){var M=e.get(x);if(M.color.copy(x.color).multiplyScalar(x.intensity),M.direction.setFromMatrixPosition(x.matrixWorld),n.setFromMatrixPosition(x.target.matrixWorld),M.direction.sub(n),M.direction.transformDirection(g),M.shadow=x.castShadow,x.castShadow){var T=x.shadow;M.shadowBias=T.bias,M.shadowRadius=T.radius,M.shadowMapSize=T.mapSize}i.directionalShadowMap[u]=E,i.directionalShadowMatrix[u]=x.shadow.matrix,i.directional[u]=M,u++}else if(x.isSpotLight){var M=e.get(x);if(M.position.setFromMatrixPosition(x.matrixWorld),M.position.applyMatrix4(g),M.color.copy(b).multiplyScalar(_),M.distance=w,M.direction.setFromMatrixPosition(x.matrixWorld),n.setFromMatrixPosition(x.target.matrixWorld),M.direction.sub(n),M.direction.transformDirection(g),M.coneCos=Math.cos(x.angle),M.penumbraCos=Math.cos(x.angle*(1-x.penumbra)),M.decay=0===x.distance?0:x.decay,M.shadow=x.castShadow,x.castShadow){var T=x.shadow;M.shadowBias=T.bias,M.shadowRadius=T.radius,M.shadowMapSize=T.mapSize}i.spotShadowMap[d]=E,i.spotShadowMatrix[d]=x.shadow.matrix,i.spot[d]=M,d++}else if(x.isRectAreaLight){var M=e.get(x);M.color.copy(b).multiplyScalar(_/(x.width*x.height)),M.position.setFromMatrixPosition(x.matrixWorld),M.position.applyMatrix4(g),s.identity(),o.copy(x.matrixWorld),o.premultiply(g),s.extractRotation(o),M.halfWidth.set(.5*x.width,0,0),M.halfHeight.set(0,.5*x.height,0),M.halfWidth.applyMatrix4(s),M.halfHeight.applyMatrix4(s),i.rectArea[f]=M,f++}else if(x.isPointLight){var M=e.get(x);if(M.position.setFromMatrixPosition(x.matrixWorld),M.position.applyMatrix4(g),M.color.copy(x.color).multiplyScalar(x.intensity),M.distance=x.distance,M.decay=0===x.distance?0:x.decay,M.shadow=x.castShadow,x.castShadow){var T=x.shadow;M.shadowBias=T.bias,M.shadowRadius=T.radius,M.shadowMapSize=T.mapSize,M.shadowCameraNear=T.camera.near,M.shadowCameraFar=T.camera.far}i.pointShadowMap[p]=E,i.pointShadowMatrix[p]=x.shadow.matrix,i.point[p]=M,p++}else if(x.isHemisphereLight){var M=e.get(x);M.direction.setFromMatrixPosition(x.matrixWorld),M.direction.transformDirection(g),M.direction.normalize(),M.skyColor.copy(x.color).multiplyScalar(_),M.groundColor.copy(x.groundColor).multiplyScalar(_),i.hemi[m]=M,m++}}i.ambient[0]=c,i.ambient[1]=h,i.ambient[2]=l,i.directional.length=u,i.spot.length=d,i.rectArea.length=f,i.point.length=p,i.hemi.length=m,i.hash=u+","+p+","+d+","+f+","+m+","+r.length}var e=new qt,i={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},n=new a,o=new r,s=new r;return{setup:t,state:i}}function Kt(t,e){function i(i){var r=e.frame,a=i.geometry,o=t.get(i,a);return n[o.id]!==r&&(a.isGeometry&&o.updateFromObject(i),t.update(o),n[o.id]=r),o}function r(){n={}}var n={};return{update:i,clear:r}}function Zt(t){for(var e=t.split("\n"),i=0;i<e.length;i++)e[i]=i+1+": "+e[i];return e.join("\n")}function Jt(t,e,i){var r=t.createShader(e);return t.shaderSource(r,i),t.compileShader(r),!1===t.getShaderParameter(r,t.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==t.getShaderInfoLog(r)&&console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",e===t.VERTEX_SHADER?"vertex":"fragment",t.getShaderInfoLog(r),Zt(i)),r}function Qt(t){switch(t){case ss:return["Linear","( value )"];case cs:return["sRGB","( value )"];case ls:return["RGBE","( value )"];case us:return["RGBM","( value, 7.0 )"];case ps:return["RGBM","( value, 16.0 )"];case ds:return["RGBD","( value, 256.0 )"];case hs:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw new Error("unsupported encoding: "+t)}}function $t(t,e){var i=Qt(e);return"vec4 "+t+"( vec4 value ) { return "+i[0]+"ToLinear"+i[1]+"; }"}function te(t,e){var i=Qt(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+i[0]+i[1]+"; }"}function ee(t,e){var i;switch(e){case oo:i="Linear";break;case so:i="Reinhard";break;case co:i="Uncharted2";break;case ho:i="OptimizedCineon";break;default:throw new Error("unsupported toneMapping: "+e)}return"vec3 "+t+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}function ie(t,e,i){return t=t||{},[t.derivatives||e.envMapCubeUV||e.bumpMap||e.normalMap||e.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(t.fragDepth||e.logarithmicDepthBuffer)&&i.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",t.drawBuffers&&i.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(t.shaderTextureLOD||e.envMap)&&i.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(ae).join("\n")}function re(t){var e=[];for(var i in t){var r=t[i];!1!==r&&e.push("#define "+i+" "+r)}return e.join("\n")}function ne(t,e){for(var i={},r=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES),n=0;n<r;n++){var a=t.getActiveAttrib(e,n),o=a.name;i[o]=t.getAttribLocation(e,o)}return i}function ae(t){return""!==t}function oe(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights)}function se(t){function e(t,e){var i=Rs[e];if(void 0===i)throw new Error("Can not resolve #include <"+e+">");return se(i)}var i=/^[ \t]*#include +<([\w\d.]+)>/gm;return t.replace(i,e)}function ce(t){function e(t,e,i,r){for(var n="",a=parseInt(e);a<parseInt(i);a++)n+=r.replace(/\[ i \]/g,"[ "+a+" ]");return n}var i=/for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;return t.replace(i,e)}function he(t,e,i,r,n,a){var o=t.context,s=r.defines,c=n.vertexShader,h=n.fragmentShader,l="SHADOWMAP_TYPE_BASIC";a.shadowMapType===ya?l="SHADOWMAP_TYPE_PCF":a.shadowMapType===xa&&(l="SHADOWMAP_TYPE_PCF_SOFT");var u="ENVMAP_TYPE_CUBE",p="ENVMAP_MODE_REFLECTION",d="ENVMAP_BLENDING_MULTIPLY";if(a.envMap){switch(r.envMap.mapping){case lo:case uo:u="ENVMAP_TYPE_CUBE";break;case go:case vo:u="ENVMAP_TYPE_CUBE_UV";break;case po:case fo:u="ENVMAP_TYPE_EQUIREC";break;case mo:u="ENVMAP_TYPE_SPHERE"}switch(r.envMap.mapping){case uo:case fo:p="ENVMAP_MODE_REFRACTION"}switch(r.combine){case io:d="ENVMAP_BLENDING_MULTIPLY";break;case ro:d="ENVMAP_BLENDING_MIX";break;case no:d="ENVMAP_BLENDING_ADD"}}var f,m,g=t.gammaFactor>0?t.gammaFactor:1,v=ie(r.extensions,a,e),y=re(s),x=o.createProgram();r.isRawShaderMaterial?(f=[y].filter(ae).join("\n"),f.length>0&&(f+="\n"),m=[v,y].filter(ae).join("\n"),m.length>0&&(m+="\n")):(f=["precision "+a.precision+" float;","precision "+a.precision+" int;","#define SHADER_NAME "+n.name,y,a.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+g,"#define MAX_BONES "+a.maxBones,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+p:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.displacementMap&&a.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.vertexColors?"#define USE_COLOR":"",a.flatShading?"#define FLAT_SHADED":"",a.skinning?"#define USE_SKINNING":"",a.useVertexTexture?"#define BONE_TEXTURE":"",a.morphTargets?"#define USE_MORPHTARGETS":"",a.morphNormals&&!1===a.flatShading?"#define USE_MORPHNORMALS":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+a.numClippingPlanes,a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+l:"",a.sizeAttenuation?"#define USE_SIZEATTENUATION":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&e.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(ae).join("\n"),m=[v,"precision "+a.precision+" float;","precision "+a.precision+" int;","#define SHADER_NAME "+n.name,y,a.alphaTest?"#define ALPHATEST "+a.alphaTest:"","#define GAMMA_FACTOR "+g,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+u:"",a.envMap?"#define "+p:"",a.envMap?"#define "+d:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.vertexColors?"#define USE_COLOR":"",a.gradientMap?"#define USE_GRADIENTMAP":"",a.flatShading?"#define FLAT_SHADED":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+a.numClippingPlanes,"#define UNION_CLIPPING_PLANES "+(a.numClippingPlanes-a.numClipIntersection),a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+l:"",a.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",a.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&e.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"",a.envMap&&e.get("EXT_shader_texture_lod")?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",a.toneMapping!==ao?"#define TONE_MAPPING":"",a.toneMapping!==ao?Rs.tonemapping_pars_fragment:"",a.toneMapping!==ao?ee("toneMapping",a.toneMapping):"",a.dithering?"#define DITHERING":"",a.outputEncoding||a.mapEncoding||a.envMapEncoding||a.emissiveMapEncoding?Rs.encodings_pars_fragment:"",a.mapEncoding?$t("mapTexelToLinear",a.mapEncoding):"",a.envMapEncoding?$t("envMapTexelToLinear",a.envMapEncoding):"",a.emissiveMapEncoding?$t("emissiveMapTexelToLinear",a.emissiveMapEncoding):"",a.outputEncoding?te("linearToOutputTexel",a.outputEncoding):"",a.depthPacking?"#define DEPTH_PACKING "+r.depthPacking:"","\n"].filter(ae).join("\n")),c=se(c),c=oe(c,a),h=se(h),h=oe(h,a),r.isShaderMaterial||(c=ce(c),h=ce(h));var b=f+c,_=m+h,w=Jt(o,o.VERTEX_SHADER,b),E=Jt(o,o.FRAGMENT_SHADER,_);o.attachShader(x,w),o.attachShader(x,E),void 0!==r.index0AttributeName?o.bindAttribLocation(x,0,r.index0AttributeName):!0===a.morphTargets&&o.bindAttribLocation(x,0,"position"),o.linkProgram(x);var M=o.getProgramInfoLog(x),T=o.getShaderInfoLog(w),S=o.getShaderInfoLog(E),A=!0,R=!0;!1===o.getProgramParameter(x,o.LINK_STATUS)?(A=!1,console.error("THREE.WebGLProgram: shader error: ",o.getError(),"gl.VALIDATE_STATUS",o.getProgramParameter(x,o.VALIDATE_STATUS),"gl.getProgramInfoLog",M,T,S)):""!==M?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",M):""!==T&&""!==S||(R=!1),R&&(this.diagnostics={runnable:A,material:r,programLog:M,vertexShader:{log:T,prefix:f},fragmentShader:{log:S,prefix:m}}),o.deleteShader(w),o.deleteShader(E);var C;this.getUniforms=function(){return void 0===C&&(C=new X(o,x,t)),C};var P;return this.getAttributes=function(){return void 0===P&&(P=ne(o,x)),P},this.destroy=function(){o.deleteProgram(x),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),this.getUniforms()}},attributes:{get:function(){return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),this.getAttributes()}}}),this.id=Os++,this.code=i,this.usedTimes=1,this.program=x,this.vertexShader=w,this.fragmentShader=E,this}function le(t,e,i){function r(t){var e=t.skeleton,r=e.bones;if(i.floatVertexTextures)return 1024
;var n=i.maxVertexUniforms,a=Math.floor((n-20)/4),o=Math.min(a,r.length);return o<r.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+r.length+" bones. This GPU supports "+o+"."),0):o}function n(t,e){var i;return t?t.isTexture?i=t.encoding:t.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),i=t.texture.encoding):i=ss,i===ss&&e&&(i=hs),i}var a=[],o={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow"},s=["precision","supportsVertexTextures","map","mapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering"];this.getParameters=function(e,a,s,c,h,l,u){var p=o[e.type],d=u.isSkinnedMesh?r(u):0,f=i.precision;null!==e.precision&&(f=i.getMaxPrecision(e.precision))!==e.precision&&console.warn("THREE.WebGLProgram.getParameters:",e.precision,"not supported, using",f,"instead.");var m=t.getRenderTarget();return{shaderID:p,precision:f,supportsVertexTextures:i.vertexTextures,outputEncoding:n(m?m.texture:null,t.gammaOutput),map:!!e.map,mapEncoding:n(e.map,t.gammaInput),envMap:!!e.envMap,envMapMode:e.envMap&&e.envMap.mapping,envMapEncoding:n(e.envMap,t.gammaInput),envMapCubeUV:!!e.envMap&&(e.envMap.mapping===go||e.envMap.mapping===vo),lightMap:!!e.lightMap,aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,emissiveMapEncoding:n(e.emissiveMap,t.gammaInput),bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,gradientMap:!!e.gradientMap,combine:e.combine,vertexColors:e.vertexColors,fog:!!c,useFog:e.fog,fogExp:c&&c.isFogExp2,flatShading:e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:i.logarithmicDepthBuffer,skinning:e.skinning&&d>0,maxBones:d,useVertexTexture:i.floatVertexTextures,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:a.directional.length,numPointLights:a.point.length,numSpotLights:a.spot.length,numRectAreaLights:a.rectArea.length,numHemiLights:a.hemi.length,numClippingPlanes:h,numClipIntersection:l,dithering:e.dithering,shadowMapEnabled:t.shadowMap.enabled&&u.receiveShadow&&s.length>0,shadowMapType:t.shadowMap.type,toneMapping:t.toneMapping,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,alphaTest:e.alphaTest,doubleSided:e.side===wa,flipSided:e.side===_a,depthPacking:void 0!==e.depthPacking&&e.depthPacking}},this.getProgramCode=function(e,i){var r=[];if(i.shaderID?r.push(i.shaderID):(r.push(e.fragmentShader),r.push(e.vertexShader)),void 0!==e.defines)for(var n in e.defines)r.push(n),r.push(e.defines[n]);for(var a=0;a<s.length;a++)r.push(i[s[a]]);return r.push(e.onBeforeCompile.toString()),r.push(t.gammaOutput),r.join()},this.acquireProgram=function(i,r,n,o){for(var s,c=0,h=a.length;c<h;c++){var l=a[c];if(l.code===o){s=l,++s.usedTimes;break}}return void 0===s&&(s=new he(t,e,o,i,r,n),a.push(s)),s},this.releaseProgram=function(t){if(0==--t.usedTimes){var e=a.indexOf(t);a[e]=a[a.length-1],a.pop(),t.destroy()}},this.programs=a}function ue(t,e,i,r,n,a,o){function s(t,e){if(t.width>e||t.height>e){var i=e/Math.max(t.width,t.height),r=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");r.width=Math.floor(t.width*i),r.height=Math.floor(t.height*i);return r.getContext("2d").drawImage(t,0,0,t.width,t.height,0,0,r.width,r.height),console.warn("THREE.WebGLRenderer: image is too big ("+t.width+"x"+t.height+"). Resized to "+r.width+"x"+r.height,t),r}return t}function c(t){return gs.isPowerOfTwo(t.width)&&gs.isPowerOfTwo(t.height)}function h(t){if(t instanceof HTMLImageElement||t instanceof HTMLCanvasElement||t instanceof ImageBitmap){var e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");e.width=gs.floorPowerOfTwo(t.width),e.height=gs.floorPowerOfTwo(t.height);return e.getContext("2d").drawImage(t,0,0,e.width,e.height),e}return t}function l(t){return t.wrapS!==xo||t.wrapT!==xo||t.minFilter!==_o&&t.minFilter!==Mo}function u(t,e){return t.generateMipmaps&&e&&t.minFilter!==_o&&t.minFilter!==Mo}function p(e){return e===_o||e===wo||e===Eo?t.NEAREST:t.LINEAR}function d(t){var e=t.target;e.removeEventListener("dispose",d),m(e),o.textures--}function f(t){var e=t.target;e.removeEventListener("dispose",f),g(e),o.textures--}function m(e){var i=r.get(e);if(e.image&&i.__image__webglTextureCube)t.deleteTexture(i.__image__webglTextureCube);else{if(void 0===i.__webglInit)return;t.deleteTexture(i.__webglTexture)}r.remove(e)}function g(e){var i=r.get(e),n=r.get(e.texture);if(e){if(void 0!==n.__webglTexture&&t.deleteTexture(n.__webglTexture),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLRenderTargetCube)for(var a=0;a<6;a++)t.deleteFramebuffer(i.__webglFramebuffer[a]),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer[a]);else t.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer);r.remove(e.texture),r.remove(e)}}function v(e,n){var a=r.get(e);if(e.version>0&&a.__version!==e.version){var o=e.image;if(void 0===o)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined",e);else{if(!1!==o.complete)return void _(a,e,n);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete",e)}}i.activeTexture(t.TEXTURE0+n),i.bindTexture(t.TEXTURE_2D,a.__webglTexture)}function y(e,h){var l=r.get(e);if(6===e.image.length)if(e.version>0&&l.__version!==e.version){l.__image__webglTextureCube||(e.addEventListener("dispose",d),l.__image__webglTextureCube=t.createTexture(),o.textures++),i.activeTexture(t.TEXTURE0+h),i.bindTexture(t.TEXTURE_CUBE_MAP,l.__image__webglTextureCube),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,e.flipY);for(var p=e&&e.isCompressedTexture,f=e.image[0]&&e.image[0].isDataTexture,m=[],g=0;g<6;g++)m[g]=p||f?f?e.image[g].image:e.image[g]:s(e.image[g],n.maxCubemapSize);var v=m[0],y=c(v),x=a.convert(e.format),_=a.convert(e.type);b(t.TEXTURE_CUBE_MAP,e,y);for(var g=0;g<6;g++)if(p)for(var w,E=m[g].mipmaps,M=0,T=E.length;M<T;M++)w=E[M],e.format!==Ho&&e.format!==zo?i.getCompressedTextureFormats().indexOf(x)>-1?i.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+g,M,x,w.width,w.height,0,w.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+g,M,x,w.width,w.height,0,x,_,w.data);else f?i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+g,0,x,m[g].width,m[g].height,0,x,_,m[g].data):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+g,0,x,x,_,m[g]);u(e,y)&&t.generateMipmap(t.TEXTURE_CUBE_MAP),l.__version=e.version,e.onUpdate&&e.onUpdate(e)}else i.activeTexture(t.TEXTURE0+h),i.bindTexture(t.TEXTURE_CUBE_MAP,l.__image__webglTextureCube)}function x(e,n){i.activeTexture(t.TEXTURE0+n),i.bindTexture(t.TEXTURE_CUBE_MAP,r.get(e).__webglTexture)}function b(i,o,s){var c;if(s?(t.texParameteri(i,t.TEXTURE_WRAP_S,a.convert(o.wrapS)),t.texParameteri(i,t.TEXTURE_WRAP_T,a.convert(o.wrapT)),t.texParameteri(i,t.TEXTURE_MAG_FILTER,a.convert(o.magFilter)),t.texParameteri(i,t.TEXTURE_MIN_FILTER,a.convert(o.minFilter))):(t.texParameteri(i,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(i,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),o.wrapS===xo&&o.wrapT===xo||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",o),t.texParameteri(i,t.TEXTURE_MAG_FILTER,p(o.magFilter)),t.texParameteri(i,t.TEXTURE_MIN_FILTER,p(o.minFilter)),o.minFilter!==_o&&o.minFilter!==Mo&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",o)),c=e.get("EXT_texture_filter_anisotropic")){if(o.type===ko&&null===e.get("OES_texture_float_linear"))return;if(o.type===Oo&&null===e.get("OES_texture_half_float_linear"))return;(o.anisotropy>1||r.get(o).__currentAnisotropy)&&(t.texParameterf(i,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(o.anisotropy,n.getMaxAnisotropy())),r.get(o).__currentAnisotropy=o.anisotropy)}}function _(e,r,p){void 0===e.__webglInit&&(e.__webglInit=!0,r.addEventListener("dispose",d),e.__webglTexture=t.createTexture(),o.textures++),i.activeTexture(t.TEXTURE0+p),i.bindTexture(t.TEXTURE_2D,e.__webglTexture),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,r.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,r.unpackAlignment);var f=s(r.image,n.maxTextureSize);l(r)&&!1===c(f)&&(f=h(f));var m=c(f),g=a.convert(r.format),v=a.convert(r.type);b(t.TEXTURE_2D,r,m);var y,x=r.mipmaps;if(r.isDepthTexture){var _=t.DEPTH_COMPONENT;if(r.type===ko){if(!R)throw new Error("Float Depth Texture only supported in WebGL2.0");_=t.DEPTH_COMPONENT32F}else R&&(_=t.DEPTH_COMPONENT16);r.format===Wo&&_===t.DEPTH_COMPONENT&&r.type!==Po&&r.type!==Io&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=Po,v=a.convert(r.type)),r.format===Xo&&(_=t.DEPTH_STENCIL,r.type!==Fo&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=Fo,v=a.convert(r.type))),i.texImage2D(t.TEXTURE_2D,0,_,f.width,f.height,0,g,v,null)}else if(r.isDataTexture)if(x.length>0&&m){for(var w=0,E=x.length;w<E;w++)y=x[w],i.texImage2D(t.TEXTURE_2D,w,g,y.width,y.height,0,g,v,y.data);r.generateMipmaps=!1}else i.texImage2D(t.TEXTURE_2D,0,g,f.width,f.height,0,g,v,f.data);else if(r.isCompressedTexture)for(var w=0,E=x.length;w<E;w++)y=x[w],r.format!==Ho&&r.format!==zo?i.getCompressedTextureFormats().indexOf(g)>-1?i.compressedTexImage2D(t.TEXTURE_2D,w,g,y.width,y.height,0,y.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):i.texImage2D(t.TEXTURE_2D,w,g,y.width,y.height,0,g,v,y.data);else if(x.length>0&&m){for(var w=0,E=x.length;w<E;w++)y=x[w],i.texImage2D(t.TEXTURE_2D,w,g,g,v,y);r.generateMipmaps=!1}else i.texImage2D(t.TEXTURE_2D,0,g,g,v,f);u(r,m)&&t.generateMipmap(t.TEXTURE_2D),e.__version=r.version,r.onUpdate&&r.onUpdate(r)}function w(e,n,o,s){var c=a.convert(n.texture.format),h=a.convert(n.texture.type);i.texImage2D(s,0,c,n.width,n.height,0,c,h,null),t.bindFramebuffer(t.FRAMEBUFFER,e),t.framebufferTexture2D(t.FRAMEBUFFER,o,s,r.get(n.texture).__webglTexture,0),t.bindFramebuffer(t.FRAMEBUFFER,null)}function E(e,i){t.bindRenderbuffer(t.RENDERBUFFER,e),i.depthBuffer&&!i.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,i.width,i.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,e)):i.depthBuffer&&i.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,i.width,i.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,e)):t.renderbufferStorage(t.RENDERBUFFER,t.RGBA4,i.width,i.height),t.bindRenderbuffer(t.RENDERBUFFER,null)}function M(e,i){if(i&&i.isWebGLRenderTargetCube)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(t.FRAMEBUFFER,e),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),v(i.depthTexture,0);var n=r.get(i.depthTexture).__webglTexture;if(i.depthTexture.format===Wo)t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,n,0);else{if(i.depthTexture.format!==Xo)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,n,0)}}function T(e){var i=r.get(e),n=!0===e.isWebGLRenderTargetCube;if(e.depthTexture){if(n)throw new Error("target.depthTexture not supported in Cube render targets");M(i.__webglFramebuffer,e)}else if(n){i.__webglDepthbuffer=[];for(var a=0;a<6;a++)t.bindFramebuffer(t.FRAMEBUFFER,i.__webglFramebuffer[a]),i.__webglDepthbuffer[a]=t.createRenderbuffer(),E(i.__webglDepthbuffer[a],e)}else t.bindFramebuffer(t.FRAMEBUFFER,i.__webglFramebuffer),i.__webglDepthbuffer=t.createRenderbuffer(),E(i.__webglDepthbuffer,e);t.bindFramebuffer(t.FRAMEBUFFER,null)}function S(e){var n=r.get(e),a=r.get(e.texture);e.addEventListener("dispose",f),a.__webglTexture=t.createTexture(),o.textures++;var s=!0===e.isWebGLRenderTargetCube,h=c(e);if(s){n.__webglFramebuffer=[];for(var l=0;l<6;l++)n.__webglFramebuffer[l]=t.createFramebuffer()}else n.__webglFramebuffer=t.createFramebuffer();if(s){i.bindTexture(t.TEXTURE_CUBE_MAP,a.__webglTexture),b(t.TEXTURE_CUBE_MAP,e.texture,h);for(var l=0;l<6;l++)w(n.__webglFramebuffer[l],e,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+l);u(e.texture,h)&&t.generateMipmap(t.TEXTURE_CUBE_MAP),i.bindTexture(t.TEXTURE_CUBE_MAP,null)}else i.bindTexture(t.TEXTURE_2D,a.__webglTexture),b(t.TEXTURE_2D,e.texture,h),w(n.__webglFramebuffer,e,t.COLOR_ATTACHMENT0,t.TEXTURE_2D),u(e.texture,h)&&t.generateMipmap(t.TEXTURE_2D),i.bindTexture(t.TEXTURE_2D,null);e.depthBuffer&&T(e)}function A(e){var n=e.texture;if(u(n,c(e))){var a=e.isWebGLRenderTargetCube?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D,o=r.get(n).__webglTexture;i.bindTexture(a,o),t.generateMipmap(a),i.bindTexture(a,null)}}var R="undefined"!=typeof WebGL2RenderingContext&&t instanceof window.WebGL2RenderingContext;this.setTexture2D=v,this.setTextureCube=y,this.setTextureCubeDynamic=x,this.setupRenderTarget=S,this.updateRenderTargetMipmap=A}function pe(){function t(t){var e=t.uuid,i=r[e];return void 0===i&&(i={},r[e]=i),i}function e(t){delete r[t.uuid]}function i(){r={}}var r={};return{get:t,remove:e,clear:i}}function de(t,e,i){function r(){var e=!1,i=new c,r=null,n=new c(0,0,0,0);return{setMask:function(i){r===i||e||(t.colorMask(i,i,i,i),r=i)},setLocked:function(t){e=t},setClear:function(e,r,a,o,s){!0===s&&(e*=o,r*=o,a*=o),i.set(e,r,a,o),!1===n.equals(i)&&(t.clearColor(e,r,a,o),n.copy(i))},reset:function(){e=!1,r=null,n.set(-1,0,0,0)}}}function n(){var e=!1,i=null,r=null,n=null;return{setTest:function(e){e?p(t.DEPTH_TEST):d(t.DEPTH_TEST)},setMask:function(r){i===r||e||(t.depthMask(r),i=r)},setFunc:function(e){if(r!==e){if(e)switch(e){case Ya:t.depthFunc(t.NEVER);break;case Ka:t.depthFunc(t.ALWAYS);break;case Za:t.depthFunc(t.LESS);break;case Ja:t.depthFunc(t.LEQUAL);break;case Qa:t.depthFunc(t.EQUAL);break;case $a:t.depthFunc(t.GEQUAL);break;case to:t.depthFunc(t.GREATER);break;case eo:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}else t.depthFunc(t.LEQUAL);r=e}},setLocked:function(t){e=t},setClear:function(e){n!==e&&(t.clearDepth(e),n=e)},reset:function(){e=!1,i=null,r=null,n=null}}}function a(){var e=!1,i=null,r=null,n=null,a=null,o=null,s=null,c=null,h=null;return{setTest:function(e){e?p(t.STENCIL_TEST):d(t.STENCIL_TEST)},setMask:function(r){i===r||e||(t.stencilMask(r),i=r)},setFunc:function(e,i,o){r===e&&n===i&&a===o||(t.stencilFunc(e,i,o),r=e,n=i,a=o)},setOp:function(e,i,r){o===e&&s===i&&c===r||(t.stencilOp(e,i,r),o=e,s=i,c=r)},setLocked:function(t){e=t},setClear:function(e){h!==e&&(t.clearStencil(e),h=e)},reset:function(){e=!1,i=null,r=null,n=null,a=null,o=null,s=null,c=null,h=null}}}function o(e,i,r){var n=new Uint8Array(4),a=t.createTexture();t.bindTexture(e,a),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST);for(var o=0;o<r;o++)t.texImage2D(i+o,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,n);return a}function s(){for(var t=0,e=O.length;t<e;t++)O[t]=0}function h(i){if(O[i]=1,0===D[i]&&(t.enableVertexAttribArray(i),D[i]=1),0!==U[i]){e.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(i,0),U[i]=0}}function l(i,r){if(O[i]=1,0===D[i]&&(t.enableVertexAttribArray(i),D[i]=1),U[i]!==r){e.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(i,r),U[i]=r}}function u(){for(var e=0,i=D.length;e!==i;++e)D[e]!==O[e]&&(t.disableVertexAttribArray(e),D[e]=0)}function p(e){!0!==B[e]&&(t.enable(e),B[e]=!0)}function d(e){!1!==B[e]&&(t.disable(e),B[e]=!1)}function f(){if(null===F&&(F=[],e.get("WEBGL_compressed_texture_pvrtc")||e.get("WEBGL_compressed_texture_s3tc")||e.get("WEBGL_compressed_texture_etc1")))for(var i=t.getParameter(t.COMPRESSED_TEXTURE_FORMATS),r=0;r<i.length;r++)F.push(i[r]);return F}function m(e){return N!==e&&(t.useProgram(e),N=e,!0)}function g(e,r,n,a,o,s,c,h){if(e!==Sa?p(t.BLEND):d(t.BLEND),e!==La){if(e!==z||h!==q)switch(e){case Ra:h?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ONE,t.ONE,t.ONE,t.ONE)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.SRC_ALPHA,t.ONE));break;case Ca:h?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ZERO,t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ONE_MINUS_SRC_ALPHA)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ZERO,t.ONE_MINUS_SRC_COLOR));break;case Pa:h?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ZERO,t.SRC_COLOR));break;default:h?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA)):(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA))}H=null,G=null,V=null,j=null,W=null,X=null}else o=o||r,s=s||n,c=c||a,r===H&&o===j||(t.blendEquationSeparate(i.convert(r),i.convert(o)),H=r,j=o),n===G&&a===V&&s===W&&c===X||(t.blendFuncSeparate(i.convert(n),i.convert(a),i.convert(s),i.convert(c)),G=n,V=a,W=s,X=c);z=e,q=h}function v(e){e.side===wa?d(t.CULL_FACE):p(t.CULL_FACE),y(e.side===_a),!0===e.transparent?g(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha):g(Sa),L.setFunc(e.depthFunc),L.setTest(e.depthTest),L.setMask(e.depthWrite),P.setMask(e.colorWrite),_(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)}function y(e){Y!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),Y=e)}function x(e){e!==fa?(p(t.CULL_FACE),e!==K&&(e===ma?t.cullFace(t.BACK):e===ga?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):d(t.CULL_FACE),K=e}function b(e){e!==Z&&(et&&t.lineWidth(e),Z=e)}function _(e,i,r){e?(p(t.POLYGON_OFFSET_FILL),J===i&&Q===r||(t.polygonOffset(i,r),J=i,Q=r)):d(t.POLYGON_OFFSET_FILL)}function w(e){e?p(t.SCISSOR_TEST):d(t.SCISSOR_TEST)}function E(e){void 0===e&&(e=t.TEXTURE0+$-1),it!==e&&(t.activeTexture(e),it=e)}function M(e,i){null===it&&E();var r=rt[it];void 0===r&&(r={type:void 0,texture:void 0},rt[it]=r),r.type===e&&r.texture===i||(t.bindTexture(e,i||ot[e]),r.type=e,r.texture=i)}function T(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}}function S(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}}function A(e){!1===nt.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),nt.copy(e))}function R(e){!1===at.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),at.copy(e))}function C(){for(var e=0;e<D.length;e++)1===D[e]&&(t.disableVertexAttribArray(e),D[e]=0);B={},F=null,it=null,rt={},N=null,z=null,Y=null,K=null,P.reset(),L.reset(),I.reset()}var P=new r,L=new n,I=new a,k=t.getParameter(t.MAX_VERTEX_ATTRIBS),O=new Uint8Array(k),D=new Uint8Array(k),U=new Uint8Array(k),B={},F=null,N=null,z=null,H=null,G=null,V=null,j=null,W=null,X=null,q=!1,Y=null,K=null,Z=null,J=null,Q=null,$=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS),tt=parseFloat(/^WebGL\ ([0-9])/.exec(t.getParameter(t.VERSION))[1]),et=parseFloat(tt)>=1,it=null,rt={},nt=new c,at=new c,ot={};return ot[t.TEXTURE_2D]=o(t.TEXTURE_2D,t.TEXTURE_2D,1),ot[t.TEXTURE_CUBE_MAP]=o(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),P.setClear(0,0,0,1),L.setClear(1),I.setClear(0),p(t.DEPTH_TEST),L.setFunc(Ja),y(!1),x(ma),p(t.CULL_FACE),p(t.BLEND),g(Aa),{buffers:{color:P,depth:L,stencil:I},initAttributes:s,enableAttribute:h,enableAttributeAndDivisor:l,disableUnusedAttributes:u,enable:p,disable:d,getCompressedTextureFormats:f,useProgram:m,setBlending:g,setMaterial:v,setFlipSided:y,setCullFace:x,setLineWidth:b,setPolygonOffset:_,setScissorTest:w,activeTexture:E,bindTexture:M,compressedTexImage2D:T,texImage2D:S,scissor:A,viewport:R,reset:C}}function fe(t,e,i){function r(){if(void 0!==a)return a;var i=e.get("EXT_texture_filter_anisotropic");return a=null!==i?t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}function n(e){if("highp"===e){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}var a,o=void 0!==i.precision?i.precision:"highp",s=n(o);s!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",s,"instead."),o=s);var c=!0===i.logarithmicDepthBuffer,h=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),l=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),u=t.getParameter(t.MAX_TEXTURE_SIZE),p=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),d=t.getParameter(t.MAX_VERTEX_ATTRIBS),f=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),m=t.getParameter(t.MAX_VARYING_VECTORS),g=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),v=l>0,y=!!e.get("OES_texture_float");return{getMaxAnisotropy:r,getMaxPrecision:n,precision:o,logarithmicDepthBuffer:c,maxTextures:h,maxVertexTextures:l,maxTextureSize:u,maxCubemapSize:p,maxAttributes:d,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:v,floatFragmentTextures:y,floatVertexTextures:v&&y}}function me(t,e,i,r){lt.call(this),this.type="PerspectiveCamera",this.fov=void 0!==t?t:50,this.zoom=1,this.near=void 0!==i?i:.1,this.far=void 0!==r?r:2e3,this.focus=10,this.aspect=void 0!==e?e:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}function ge(t){me.call(this),this.cameras=t||[]}function ve(t){function e(){if(null!==n&&n.isPresenting){var e=n.getEyeParameters("left"),r=e.renderWidth,a=e.renderHeight;f=t.getPixelRatio(),d=t.getSize(),t.setDrawingBufferSize(2*r,a,1)}else i.enabled&&t.setDrawingBufferSize(d.width,d.height,f)}var i=this,n=null,a=null;"undefined"!=typeof window&&"VRFrameData"in window&&(a=new window.VRFrameData);var o=new r,s=new r,h=new r,l=new me;l.bounds=new c(0,0,.5,1),l.layers.enable(1);var u=new me;u.bounds=new c(.5,0,.5,1),u.layers.enable(2);var p=new ge([l,u]);p.layers.enable(1),p.layers.enable(2);var d,f;"undefined"!=typeof window&&window.addEventListener("vrdisplaypresentchange",e,!1),this.enabled=!1,this.standing=!1,this.getDevice=function(){return n},this.setDevice=function(t){void 0!==t&&(n=t)},this.getCamera=function(t){if(null===n)return t;n.depthNear=t.near,n.depthFar=t.far,n.getFrameData(a);var e=a.pose;null!==e.position?t.position.fromArray(e.position):t.position.set(0,0,0),null!==e.orientation&&t.quaternion.fromArray(e.orientation),t.updateMatrixWorld();var i=n.stageParameters;if(this.standing&&i&&(s.fromArray(i.sittingToStandingTransform),h.getInverse(s),t.matrixWorld.multiply(s),t.matrixWorldInverse.multiply(h)),!1===n.isPresenting)return t;l.near=t.near,u.near=t.near,l.far=t.far,u.far=t.far,p.matrixWorld.copy(t.matrixWorld),p.matrixWorldInverse.copy(t.matrixWorldInverse),l.matrixWorldInverse.fromArray(a.leftViewMatrix),u.matrixWorldInverse.fromArray(a.rightViewMatrix),this.standing&&i&&(l.matrixWorldInverse.multiply(h),u.matrixWorldInverse.multiply(h));var r=t.parent;null!==r&&(o.getInverse(r.matrixWorld),l.matrixWorldInverse.multiply(o),u.matrixWorldInverse.multiply(o)),l.matrixWorld.getInverse(l.matrixWorldInverse),u.matrixWorld.getInverse(u.matrixWorldInverse),l.projectionMatrix.fromArray(a.leftProjectionMatrix),u.projectionMatrix.fromArray(a.rightProjectionMatrix),p.projectionMatrix.copy(l.projectionMatrix);var c=n.getLayers();if(c.length){var d=c[0];null!==d.leftBounds&&4===d.leftBounds.length&&l.bounds.fromArray(d.leftBounds),null!==d.rightBounds&&4===d.rightBounds.length&&u.bounds.fromArray(d.rightBounds)}return p},this.getStandingMatrix=function(){return s},this.submitFrame=function(){n&&n.isPresenting&&n.submitFrame()},this.dispose=function(){"undefined"!=typeof window&&window.removeEventListener("vrdisplaypresentchange",e)}}function ye(t){var e={};return{get:function(i){if(void 0!==e[i])return e[i];var r;switch(i){case"WEBGL_depth_texture":r=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;case"WEBGL_compressed_texture_etc1":r=t.getExtension("WEBGL_compressed_texture_etc1");break;default:r=t.getExtension(i)}return null===r&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),e[i]=r,r}}}function xe(){function t(){l.value!==r&&(l.value=r,l.needsUpdate=n>0),i.numPlanes=n,i.numIntersection=0}function e(t,e,r,n){var a=null!==t?t.length:0,o=null;if(0!==a){if(o=l.value,!0!==n||null===o){var s=r+4*a,u=e.matrixWorldInverse;h.getNormalMatrix(u),(null===o||o.length<s)&&(o=new Float32Array(s));for(var p=0,d=r;p!==a;++p,d+=4)c.copy(t[p]).applyMatrix4(u,h),c.normal.toArray(o,d),o[d+3]=c.constant}l.value=o,l.needsUpdate=!0}return i.numPlanes=a,o}var i=this,r=null,n=0,a=!1,s=!1,c=new rt,h=new o,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,i,o){var s=0!==t.length||i||0!==n||a;return a=i,r=e(t,o,0),n=t.length,s},this.beginShadows=function(){s=!0,e(null)},this.endShadows=function(){s=!1,t()},this.setState=function(i,o,c,h,u,p){if(!a||null===i||0===i.length||s&&!c)s?e(null):t();else{var d=s?0:n,f=4*d,m=u.clippingState||null;l.value=m,m=e(i,h,f,p);for(var g=0;g!==f;++g)m[g]=r[g];u.clippingState=m,this.numIntersection=o?this.numPlanes:0,this.numPlanes+=d}}}function be(t,e){function i(i){var r;if(i===yo)return t.REPEAT;if(i===xo)return t.CLAMP_TO_EDGE;if(i===bo)return t.MIRRORED_REPEAT;if(i===_o)return t.NEAREST;if(i===wo)return t.NEAREST_MIPMAP_NEAREST;if(i===Eo)return t.NEAREST_MIPMAP_LINEAR;if(i===Mo)return t.LINEAR;if(i===To)return t.LINEAR_MIPMAP_NEAREST;if(i===So)return t.LINEAR_MIPMAP_LINEAR;if(i===Ao)return t.UNSIGNED_BYTE;if(i===Do)return t.UNSIGNED_SHORT_4_4_4_4;if(i===Uo)return t.UNSIGNED_SHORT_5_5_5_1;if(i===Bo)return t.UNSIGNED_SHORT_5_6_5;if(i===Ro)return t.BYTE;if(i===Co)return t.SHORT;if(i===Po)return t.UNSIGNED_SHORT;if(i===Lo)return t.INT;if(i===Io)return t.UNSIGNED_INT;if(i===ko)return t.FLOAT;if(i===Oo&&null!==(r=e.get("OES_texture_half_float")))return r.HALF_FLOAT_OES;if(i===No)return t.ALPHA;if(i===zo)return t.RGB;if(i===Ho)return t.RGBA;if(i===Go)return t.LUMINANCE;if(i===Vo)return t.LUMINANCE_ALPHA;if(i===Wo)return t.DEPTH_COMPONENT;if(i===Xo)return t.DEPTH_STENCIL;if(i===Ia)return t.FUNC_ADD;if(i===ka)return t.FUNC_SUBTRACT;if(i===Oa)return t.FUNC_REVERSE_SUBTRACT;if(i===Ba)return t.ZERO;if(i===Fa)return t.ONE;if(i===Na)return t.SRC_COLOR;if(i===za)return t.ONE_MINUS_SRC_COLOR;if(i===Ha)return t.SRC_ALPHA;if(i===Ga)return t.ONE_MINUS_SRC_ALPHA;if(i===Va)return t.DST_ALPHA;if(i===ja)return t.ONE_MINUS_DST_ALPHA;if(i===Wa)return t.DST_COLOR;if(i===Xa)return t.ONE_MINUS_DST_COLOR;if(i===qa)return t.SRC_ALPHA_SATURATE;if((i===qo||i===Yo||i===Ko||i===Zo)&&null!==(r=e.get("WEBGL_compressed_texture_s3tc"))){if(i===qo)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===Yo)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===Ko)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===Zo)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((i===Jo||i===Qo||i===$o||i===ts)&&null!==(r=e.get("WEBGL_compressed_texture_pvrtc"))){if(i===Jo)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===Qo)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===$o)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===ts)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(i===es&&null!==(r=e.get("WEBGL_compressed_texture_etc1")))return r.COMPRESSED_RGB_ETC1_WEBGL;if((i===Da||i===Ua)&&null!==(r=e.get("EXT_blend_minmax"))){if(i===Da)return r.MIN_EXT;if(i===Ua)return r.MAX_EXT}return i===Fo&&null!==(r=e.get("WEBGL_depth_texture"))?r.UNSIGNED_INT_24_8_WEBGL:0}return{convert:i}}function _e(t){function e(){return null===tt?mt:1}function i(){Ct=new ye(At),Ct.get("WEBGL_depth_texture"),Ct.get("OES_texture_float"),Ct.get("OES_texture_float_linear"),Ct.get("OES_texture_half_float"),Ct.get("OES_texture_half_float_linear"),Ct.get("OES_standard_derivatives"),Ct.get("OES_element_index_uint"),Ct.get("ANGLE_instanced_arrays"),te=new be(At,Ct),Pt=new fe(At,Ct,t),Lt=new de(At,Ct,te),Lt.scissor(lt.copy(vt).multiplyScalar(mt)),Lt.viewport(ht.copy(gt).multiplyScalar(mt)),It=new pe,kt=new ue(At,Ct,Lt,It,Pt,te,Tt),Ot=new ot(At),Dt=new Xt(At,Ot,Tt),Ut=new Kt(Dt,St),qt=new Vt(At),Nt=new le(Q,Ct,Pt),Ft=new Yt,zt=new Ht,Gt=new Bt(Q,Lt,Dt,G),Zt=new Wt(At,Ct,St),Jt=new jt(At,Ct,St),Qt=new K(Q,At,Lt,kt,Pt),$t=new J(Q,At,Lt,kt,Pt),Q.info.programs=Nt.programs,Q.context=At,Q.capabilities=Pt,Q.extensions=Ct,Q.properties=It,Q.renderLists=zt,Q.state=Lt}function n(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),$=!0}function o(){console.log("THREE.WebGLRenderer: Context Restored."),$=!1,i()}function s(t){var e=t.target;e.removeEventListener("dispose",s),h(e)}function h(t){l(t),It.remove(t)}function l(t){var e=It.get(t).program;t.program=void 0,void 0!==e&&Nt.releaseProgram(e)}function p(t,e,i){t.render(function(t){Q.renderBufferImmediate(t,e,i)})}function d(t,e,i,r){if(i&&i.isInstancedBufferGeometry&&null===Ct.get("ANGLE_instanced_arrays"))return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");void 0===r&&(r=0),Lt.initAttributes();var n=i.attributes,a=e.getAttributes(),o=t.defaultAttributeValues;for(var s in a){var c=a[s];if(c>=0){var h=n[s];if(void 0!==h){var l=h.normalized,u=h.itemSize,p=Ot.get(h);if(void 0===p)continue;var d=p.buffer,f=p.type,m=p.bytesPerElement;if(h.isInterleavedBufferAttribute){var g=h.data,v=g.stride,y=h.offset;g&&g.isInstancedInterleavedBuffer?(Lt.enableAttributeAndDivisor(c,g.meshPerAttribute),void 0===i.maxInstancedCount&&(i.maxInstancedCount=g.meshPerAttribute*g.count)):Lt.enableAttribute(c),At.bindBuffer(At.ARRAY_BUFFER,d),At.vertexAttribPointer(c,u,f,l,v*m,(r*v+y)*m)}else h.isInstancedBufferAttribute?(Lt.enableAttributeAndDivisor(c,h.meshPerAttribute),
void 0===i.maxInstancedCount&&(i.maxInstancedCount=h.meshPerAttribute*h.count)):Lt.enableAttribute(c),At.bindBuffer(At.ARRAY_BUFFER,d),At.vertexAttribPointer(c,u,f,l,0,r*u*m)}else if(void 0!==o){var x=o[s];if(void 0!==x)switch(x.length){case 2:At.vertexAttrib2fv(c,x);break;case 3:At.vertexAttrib3fv(c,x);break;case 4:At.vertexAttrib4fv(c,x);break;default:At.vertexAttrib1fv(c,x)}}}}Lt.disableUnusedAttributes()}function f(){if(!re){var t=ee.getDevice();t&&t.isPresenting?t.requestAnimationFrame(m):window.requestAnimationFrame(m),re=!0}}function m(t){null!==ne&&ne(t);var e=ee.getDevice();e&&e.isPresenting?e.requestAnimationFrame(m):window.requestAnimationFrame(m)}function g(t,e,i){if(!1!==t.visible){if(t.layers.test(e.layers))if(t.isLight)j.push(t),t.castShadow&&W.push(t);else if(t.isSprite)t.frustumCulled&&!xt.intersectsSprite(t)||Y.push(t);else if(t.isLensFlare)Z.push(t);else if(t.isImmediateRenderObject)i&&Mt.setFromMatrixPosition(t.matrixWorld).applyMatrix4(Et),q.push(t,null,t.material,Mt.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.update(),!t.frustumCulled||xt.intersectsObject(t))){i&&Mt.setFromMatrixPosition(t.matrixWorld).applyMatrix4(Et);var r=Ut.update(t),n=t.material;if(Array.isArray(n))for(var a=r.groups,o=0,s=a.length;o<s;o++){var c=a[o],h=n[c.materialIndex];h&&h.visible&&q.push(t,r,h,Mt.z,c)}else n.visible&&q.push(t,r,n,Mt.z,null)}for(var l=t.children,o=0,s=l.length;o<s;o++)g(l[o],e,i)}}function v(t,e,i,r){for(var n=0,a=t.length;n<a;n++){var o=t[n],s=o.object,c=o.geometry,h=void 0===r?o.material:r,l=o.group;if(i.isArrayCamera){ct=i;for(var u=i.cameras,p=0,d=u.length;p<d;p++){var f=u[p];if(s.layers.test(f.layers)){var m=f.bounds,g=m.x*dt,v=m.y*ft,x=m.z*dt,b=m.w*ft;Lt.viewport(ht.set(g,v,x,b).multiplyScalar(mt)),y(s,e,f,c,h,l)}}}else ct=null,y(s,e,i,c,h,l)}}function y(t,e,i,r,n,a){if(t.onBeforeRender(Q,e,i,r,n,a),t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){Lt.setMaterial(n);var o=b(i,e.fog,n,t);rt="",p(t,o,n)}else Q.renderBufferDirect(i,e.fog,r,n,t,a);t.onAfterRender(Q,e,i,r,n,a)}function x(t,e,i){var r=It.get(t),n=Nt.getParameters(t,Ft.state,W,e,bt.numPlanes,bt.numIntersection,i),a=Nt.getProgramCode(t,n),o=r.program,c=!0;if(void 0===o)t.addEventListener("dispose",s);else if(o.code!==a)l(t);else{if(void 0!==n.shaderID)return;c=!1}if(c){if(n.shaderID){var h=Cs[n.shaderID];r.shader={name:t.type,uniforms:As.clone(h.uniforms),vertexShader:h.vertexShader,fragmentShader:h.fragmentShader}}else r.shader={name:t.type,uniforms:t.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader};t.onBeforeCompile(r.shader),o=Nt.acquireProgram(t,r.shader,n,a),r.program=o,t.program=o}var u=o.getAttributes();if(t.morphTargets){t.numSupportedMorphTargets=0;for(var p=0;p<Q.maxMorphTargets;p++)u["morphTarget"+p]>=0&&t.numSupportedMorphTargets++}if(t.morphNormals){t.numSupportedMorphNormals=0;for(var p=0;p<Q.maxMorphNormals;p++)u["morphNormal"+p]>=0&&t.numSupportedMorphNormals++}var d=r.shader.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(r.numClippingPlanes=bt.numPlanes,r.numIntersection=bt.numIntersection,d.clippingPlanes=bt.uniform),r.fog=e,r.lightsHash=Ft.state.hash,t.lights&&(d.ambientLightColor.value=Ft.state.ambient,d.directionalLights.value=Ft.state.directional,d.spotLights.value=Ft.state.spot,d.rectAreaLights.value=Ft.state.rectArea,d.pointLights.value=Ft.state.point,d.hemisphereLights.value=Ft.state.hemi,d.directionalShadowMap.value=Ft.state.directionalShadowMap,d.directionalShadowMatrix.value=Ft.state.directionalShadowMatrix,d.spotShadowMap.value=Ft.state.spotShadowMap,d.spotShadowMatrix.value=Ft.state.spotShadowMatrix,d.pointShadowMap.value=Ft.state.pointShadowMap,d.pointShadowMatrix.value=Ft.state.pointShadowMatrix);var f=r.program.getUniforms(),m=X.seqWithValue(f.seq,d);r.uniformsList=m}function b(t,e,i,r){pt=0;var n=It.get(i);if(_t&&(wt||t!==st)){var a=t===st&&i.id===it;bt.setState(i.clippingPlanes,i.clipIntersection,i.clipShadows,t,n,a)}!1===i.needsUpdate&&(void 0===n.program?i.needsUpdate=!0:i.fog&&n.fog!==e?i.needsUpdate=!0:i.lights&&n.lightsHash!==Ft.state.hash?i.needsUpdate=!0:void 0===n.numClippingPlanes||n.numClippingPlanes===bt.numPlanes&&n.numIntersection===bt.numIntersection||(i.needsUpdate=!0)),i.needsUpdate&&(x(i,e,r),i.needsUpdate=!1);var o=!1,s=!1,c=!1,h=n.program,l=h.getUniforms(),p=n.shader.uniforms;if(Lt.useProgram(h.program)&&(o=!0,s=!0,c=!0),i.id!==it&&(it=i.id,s=!0),o||t!==st){if(l.setValue(At,"projectionMatrix",t.projectionMatrix),Pt.logarithmicDepthBuffer&&l.setValue(At,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),st!==(ct||t)&&(st=ct||t,s=!0,c=!0),i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshStandardMaterial||i.envMap){var d=l.map.cameraPosition;void 0!==d&&d.setValue(At,Mt.setFromMatrixPosition(t.matrixWorld))}(i.isMeshPhongMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.skinning)&&l.setValue(At,"viewMatrix",t.matrixWorldInverse)}if(i.skinning){l.setOptional(At,r,"bindMatrix"),l.setOptional(At,r,"bindMatrixInverse");var f=r.skeleton;if(f){var m=f.bones;if(Pt.floatVertexTextures){if(void 0===f.boneTexture){var g=Math.sqrt(4*m.length);g=gs.ceilPowerOfTwo(g),g=Math.max(g,4);var v=new Float32Array(g*g*4);v.set(f.boneMatrices);var y=new u(v,g,g,Ho,ko);f.boneMatrices=v,f.boneTexture=y,f.boneTextureSize=g}l.setValue(At,"boneTexture",f.boneTexture),l.setValue(At,"boneTextureSize",f.boneTextureSize)}else l.setOptional(At,f,"boneMatrices")}}return s&&(l.setValue(At,"toneMappingExposure",Q.toneMappingExposure),l.setValue(At,"toneMappingWhitePoint",Q.toneMappingWhitePoint),i.lights&&O(p,c),e&&i.fog&&T(p,e),i.isMeshBasicMaterial?_(p,i):i.isMeshLambertMaterial?(_(p,i),S(p,i)):i.isMeshPhongMaterial?(_(p,i),i.isMeshToonMaterial?R(p,i):A(p,i)):i.isMeshStandardMaterial?(_(p,i),i.isMeshPhysicalMaterial?P(p,i):C(p,i)):i.isMeshDepthMaterial?(_(p,i),L(p,i)):i.isMeshDistanceMaterial?(_(p,i),I(p,i)):i.isMeshNormalMaterial?(_(p,i),k(p,i)):i.isLineBasicMaterial?(w(p,i),i.isLineDashedMaterial&&E(p,i)):i.isPointsMaterial?M(p,i):i.isShadowMaterial&&(p.color.value=i.color,p.opacity.value=i.opacity),void 0!==p.ltcMat&&(p.ltcMat.value=Ss.LTC_MAT_TEXTURE),void 0!==p.ltcMag&&(p.ltcMag.value=Ss.LTC_MAG_TEXTURE),X.upload(At,n.uniformsList,p,Q)),l.setValue(At,"modelViewMatrix",r.modelViewMatrix),l.setValue(At,"normalMatrix",r.normalMatrix),l.setValue(At,"modelMatrix",r.matrixWorld),h}function _(t,e){t.opacity.value=e.opacity,e.color&&(t.diffuse.value=e.color),e.emissive&&t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.specularMap&&(t.specularMap.value=e.specularMap),e.envMap&&(t.envMap.value=e.envMap,t.flipEnvMap.value=e.envMap&&e.envMap.isCubeTexture?-1:1,t.reflectivity.value=e.reflectivity,t.refractionRatio.value=e.refractionRatio),e.lightMap&&(t.lightMap.value=e.lightMap,t.lightMapIntensity.value=e.lightMapIntensity),e.aoMap&&(t.aoMap.value=e.aoMap,t.aoMapIntensity.value=e.aoMapIntensity);var i;if(e.map?i=e.map:e.specularMap?i=e.specularMap:e.displacementMap?i=e.displacementMap:e.normalMap?i=e.normalMap:e.bumpMap?i=e.bumpMap:e.roughnessMap?i=e.roughnessMap:e.metalnessMap?i=e.metalnessMap:e.alphaMap?i=e.alphaMap:e.emissiveMap&&(i=e.emissiveMap),void 0!==i){if(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate){var r=i.offset,n=i.repeat,a=i.rotation,o=i.center;i.matrix.setUvTransform(r.x,r.y,n.x,n.y,a,o.x,o.y)}t.uvTransform.value.copy(i.matrix)}}function w(t,e){t.diffuse.value=e.color,t.opacity.value=e.opacity}function E(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}function M(t,e){if(t.diffuse.value=e.color,t.opacity.value=e.opacity,t.size.value=e.size*mt,t.scale.value=.5*ft,t.map.value=e.map,null!==e.map){if(!0===e.map.matrixAutoUpdate){var i=e.map.offset,r=e.map.repeat,n=e.map.rotation,a=e.map.center;e.map.matrix.setUvTransform(i.x,i.y,r.x,r.y,n,a.x,a.y)}t.uvTransform.value.copy(e.map.matrix)}}function T(t,e){t.fogColor.value=e.color,e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)}function S(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}function A(t,e){t.specular.value=e.specular,t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale)),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}function R(t,e){A(t,e),e.gradientMap&&(t.gradientMap.value=e.gradientMap)}function C(t,e){t.roughness.value=e.roughness,t.metalness.value=e.metalness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap),e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale)),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),e.envMap&&(t.envMapIntensity.value=e.envMapIntensity)}function P(t,e){t.clearCoat.value=e.clearCoat,t.clearCoatRoughness.value=e.clearCoatRoughness,C(t,e)}function L(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}function I(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}function k(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale)),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}function O(t,e){t.ambientLightColor.needsUpdate=e,t.directionalLights.needsUpdate=e,t.pointLights.needsUpdate=e,t.spotLights.needsUpdate=e,t.rectAreaLights.needsUpdate=e,t.hemisphereLights.needsUpdate=e}function D(){var t=pt;return t>=Pt.maxTextures&&console.warn("THREE.WebGLRenderer: Trying to use "+t+" texture units while this GPU supports only "+Pt.maxTextures),pt+=1,t}console.log("THREE.WebGLRenderer",pa),t=t||{};var U=void 0!==t.canvas?t.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),B=void 0!==t.context?t.context:null,F=void 0!==t.alpha&&t.alpha,N=void 0===t.depth||t.depth,z=void 0===t.stencil||t.stencil,H=void 0!==t.antialias&&t.antialias,G=void 0===t.premultipliedAlpha||t.premultipliedAlpha,V=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,j=[],W=[],q=null,Y=[],Z=[];this.domElement=U,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=oo,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var Q=this,$=!1,tt=null,et=null,it=-1,rt="",st=null,ct=null,ht=new c,lt=new c,ut=null,pt=0,dt=U.width,ft=U.height,mt=1,gt=new c(0,0,dt,ft),vt=new c(0,0,dt,ft),yt=!1,xt=new nt,bt=new xe,_t=!1,wt=!1,Et=new r,Mt=new a,Tt={geometries:0,textures:0},St={frame:0,calls:0,vertices:0,faces:0,points:0};this.info={render:St,memory:Tt,programs:null};var At;try{var Rt={alpha:F,depth:N,stencil:z,antialias:H,premultipliedAlpha:G,preserveDrawingBuffer:V};if(null===(At=B||U.getContext("webgl",Rt)||U.getContext("experimental-webgl",Rt)))throw null!==U.getContext("webgl")?"Error creating WebGL context with your selected attributes.":"Error creating WebGL context.";void 0===At.getShaderPrecisionFormat&&(At.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),U.addEventListener("webglcontextlost",n,!1),U.addEventListener("webglcontextrestored",o,!1)}catch(t){console.error("THREE.WebGLRenderer: "+t)}var Ct,Pt,Lt,It,kt,Ot,Dt,Ut,Ft,Nt,zt,Gt,qt,Zt,Jt,Qt,$t,te;i();var ee=new ve(Q);this.vr=ee;var ie=new at(Q,Ut,Pt.maxTextureSize);this.shadowMap=ie,this.getContext=function(){return At},this.getContextAttributes=function(){return At.getContextAttributes()},this.forceContextLoss=function(){var t=Ct.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){var t=Ct.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return mt},this.setPixelRatio=function(t){void 0!==t&&(mt=t,this.setSize(dt,ft,!1))},this.getSize=function(){return{width:dt,height:ft}},this.setSize=function(t,e,i){var r=ee.getDevice();if(r&&r.isPresenting)return void console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");dt=t,ft=e,U.width=t*mt,U.height=e*mt,!1!==i&&(U.style.width=t+"px",U.style.height=e+"px"),this.setViewport(0,0,t,e)},this.getDrawingBufferSize=function(){return{width:dt*mt,height:ft*mt}},this.setDrawingBufferSize=function(t,e,i){dt=t,ft=e,mt=i,U.width=t*i,U.height=e*i,this.setViewport(0,0,t,e)},this.setViewport=function(t,e,i,r){gt.set(t,ft-e-r,i,r),Lt.viewport(ht.copy(gt).multiplyScalar(mt))},this.setScissor=function(t,e,i,r){vt.set(t,ft-e-r,i,r),Lt.scissor(lt.copy(vt).multiplyScalar(mt))},this.setScissorTest=function(t){Lt.setScissorTest(yt=t)},this.getClearColor=function(){return Gt.getClearColor()},this.setClearColor=function(){Gt.setClearColor.apply(Gt,arguments)},this.getClearAlpha=function(){return Gt.getClearAlpha()},this.setClearAlpha=function(){Gt.setClearAlpha.apply(Gt,arguments)},this.clear=function(t,e,i){var r=0;(void 0===t||t)&&(r|=At.COLOR_BUFFER_BIT),(void 0===e||e)&&(r|=At.DEPTH_BUFFER_BIT),(void 0===i||i)&&(r|=At.STENCIL_BUFFER_BIT),At.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.clearTarget=function(t,e,i,r){this.setRenderTarget(t),this.clear(e,i,r)},this.dispose=function(){U.removeEventListener("webglcontextlost",n,!1),U.removeEventListener("webglcontextrestored",o,!1),zt.dispose(),ee.dispose()},this.renderBufferImmediate=function(t,e,i){Lt.initAttributes();var r=It.get(t);t.hasPositions&&!r.position&&(r.position=At.createBuffer()),t.hasNormals&&!r.normal&&(r.normal=At.createBuffer()),t.hasUvs&&!r.uv&&(r.uv=At.createBuffer()),t.hasColors&&!r.color&&(r.color=At.createBuffer());var n=e.getAttributes();if(t.hasPositions&&(At.bindBuffer(At.ARRAY_BUFFER,r.position),At.bufferData(At.ARRAY_BUFFER,t.positionArray,At.DYNAMIC_DRAW),Lt.enableAttribute(n.position),At.vertexAttribPointer(n.position,3,At.FLOAT,!1,0,0)),t.hasNormals){if(At.bindBuffer(At.ARRAY_BUFFER,r.normal),!i.isMeshPhongMaterial&&!i.isMeshStandardMaterial&&!i.isMeshNormalMaterial&&!0===i.flatShading)for(var a=0,o=3*t.count;a<o;a+=9){var s=t.normalArray,c=(s[a+0]+s[a+3]+s[a+6])/3,h=(s[a+1]+s[a+4]+s[a+7])/3,l=(s[a+2]+s[a+5]+s[a+8])/3;s[a+0]=c,s[a+1]=h,s[a+2]=l,s[a+3]=c,s[a+4]=h,s[a+5]=l,s[a+6]=c,s[a+7]=h,s[a+8]=l}At.bufferData(At.ARRAY_BUFFER,t.normalArray,At.DYNAMIC_DRAW),Lt.enableAttribute(n.normal),At.vertexAttribPointer(n.normal,3,At.FLOAT,!1,0,0)}t.hasUvs&&i.map&&(At.bindBuffer(At.ARRAY_BUFFER,r.uv),At.bufferData(At.ARRAY_BUFFER,t.uvArray,At.DYNAMIC_DRAW),Lt.enableAttribute(n.uv),At.vertexAttribPointer(n.uv,2,At.FLOAT,!1,0,0)),t.hasColors&&i.vertexColors!==Ea&&(At.bindBuffer(At.ARRAY_BUFFER,r.color),At.bufferData(At.ARRAY_BUFFER,t.colorArray,At.DYNAMIC_DRAW),Lt.enableAttribute(n.color),At.vertexAttribPointer(n.color,3,At.FLOAT,!1,0,0)),Lt.disableUnusedAttributes(),At.drawArrays(At.TRIANGLES,0,t.count),t.count=0},this.renderBufferDirect=function(t,i,r,n,a,o){Lt.setMaterial(n);var s=b(t,i,n,a),c=r.id+"_"+s.id+"_"+(!0===n.wireframe),h=!1;c!==rt&&(rt=c,h=!0),a.morphTargetInfluences&&(qt.update(a,r,n,s),h=!0);var l=r.index,u=r.attributes.position,p=1;!0===n.wireframe&&(l=Dt.getWireframeAttribute(r),p=2);var f,m=Zt;null!==l&&(f=Ot.get(l),m=Jt,m.setIndex(f)),h&&(d(n,s,r),null!==l&&At.bindBuffer(At.ELEMENT_ARRAY_BUFFER,f.buffer));var g=0;null!==l?g=l.count:void 0!==u&&(g=u.count);var v=r.drawRange.start*p,y=r.drawRange.count*p,x=null!==o?o.start*p:0,_=null!==o?o.count*p:1/0,w=Math.max(v,x),E=Math.min(g,v+y,x+_)-1,M=Math.max(0,E-w+1);if(0!==M){if(a.isMesh)if(!0===n.wireframe)Lt.setLineWidth(n.wireframeLinewidth*e()),m.setMode(At.LINES);else switch(a.drawMode){case ns:m.setMode(At.TRIANGLES);break;case as:m.setMode(At.TRIANGLE_STRIP);break;case os:m.setMode(At.TRIANGLE_FAN)}else if(a.isLine){var T=n.linewidth;void 0===T&&(T=1),Lt.setLineWidth(T*e()),a.isLineSegments?m.setMode(At.LINES):a.isLineLoop?m.setMode(At.LINE_LOOP):m.setMode(At.LINE_STRIP)}else a.isPoints&&m.setMode(At.POINTS);r&&r.isInstancedBufferGeometry?r.maxInstancedCount>0&&m.renderInstances(r,w,M):m.render(w,M)}},this.compile=function(t,e){j.length=0,W.length=0,t.traverse(function(t){t.isLight&&(j.push(t),t.castShadow&&W.push(t))}),Ft.setup(j,W,e),t.traverse(function(e){if(e.material)if(Array.isArray(e.material))for(var i=0;i<e.material.length;i++)x(e.material[i],t.fog,e);else x(e.material,t.fog,e)})};var re=!1,ne=null;this.animate=function(t){ne=t,f()},this.render=function(t,e,i,r){if(!e||!e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!$){rt="",it=-1,st=null,!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),ee.enabled&&(e=ee.getCamera(e)),Et.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),xt.setFromMatrix(Et),j.length=0,W.length=0,Y.length=0,Z.length=0,wt=this.localClippingEnabled,_t=bt.init(this.clippingPlanes,wt,e),q=zt.get(t,e),q.init(),g(t,e,Q.sortObjects),!0===Q.sortObjects&&q.sort(),_t&&bt.beginShadows(),ie.render(W,t,e),Ft.setup(j,W,e),_t&&bt.endShadows(),St.frame++,St.calls=0,St.vertices=0,St.faces=0,St.points=0,void 0===i&&(i=null),this.setRenderTarget(i),Gt.render(q,t,e,r);var n=q.opaque,a=q.transparent;if(t.overrideMaterial){var o=t.overrideMaterial;n.length&&v(n,t,e,o),a.length&&v(a,t,e,o)}else n.length&&v(n,t,e),a.length&&v(a,t,e);$t.render(Y,t,e),Qt.render(Z,t,e,ht),i&&kt.updateRenderTargetMipmap(i),Lt.buffers.depth.setTest(!0),Lt.buffers.depth.setMask(!0),Lt.buffers.color.setMask(!0),Lt.setPolygonOffset(!1),ee.enabled&&ee.submitFrame()}},this.setFaceCulling=function(t,e){Lt.setCullFace(t),Lt.setFlipSided(e===va)},this.allocTextureUnit=D,this.setTexture2D=function(){var t=!1;return function(e,i){e&&e.isWebGLRenderTarget&&(t||(console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."),t=!0),e=e.texture),kt.setTexture2D(e,i)}}(),this.setTexture=function(){var t=!1;return function(e,i){t||(console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),t=!0),kt.setTexture2D(e,i)}}(),this.setTextureCube=function(){var t=!1;return function(e,i){e&&e.isWebGLRenderTargetCube&&(t||(console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),t=!0),e=e.texture),e&&e.isCubeTexture||Array.isArray(e.image)&&6===e.image.length?kt.setTextureCube(e,i):kt.setTextureCubeDynamic(e,i)}}(),this.getRenderTarget=function(){return tt},this.setRenderTarget=function(t){tt=t,t&&void 0===It.get(t).__webglFramebuffer&&kt.setupRenderTarget(t);var e=null,i=!1;if(t){var r=It.get(t).__webglFramebuffer;t.isWebGLRenderTargetCube?(e=r[t.activeCubeFace],i=!0):e=r,ht.copy(t.viewport),lt.copy(t.scissor),ut=t.scissorTest}else ht.copy(gt).multiplyScalar(mt),lt.copy(vt).multiplyScalar(mt),ut=yt;if(et!==e&&(At.bindFramebuffer(At.FRAMEBUFFER,e),et=e),Lt.viewport(ht),Lt.scissor(lt),Lt.setScissorTest(ut),i){var n=It.get(t.texture);At.framebufferTexture2D(At.FRAMEBUFFER,At.COLOR_ATTACHMENT0,At.TEXTURE_CUBE_MAP_POSITIVE_X+t.activeCubeFace,n.__webglTexture,t.activeMipMapLevel)}},this.readRenderTargetPixels=function(t,e,i,r,n,a){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");var o=It.get(t).__webglFramebuffer;if(o){var s=!1;o!==et&&(At.bindFramebuffer(At.FRAMEBUFFER,o),s=!0);try{var c=t.texture,h=c.format,l=c.type;if(h!==Ho&&te.convert(h)!==At.getParameter(At.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(l===Ao||te.convert(l)===At.getParameter(At.IMPLEMENTATION_COLOR_READ_TYPE)||l===ko&&(Ct.get("OES_texture_float")||Ct.get("WEBGL_color_buffer_float"))||l===Oo&&Ct.get("EXT_color_buffer_half_float")))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");At.checkFramebufferStatus(At.FRAMEBUFFER)===At.FRAMEBUFFER_COMPLETE?e>=0&&e<=t.width-r&&i>=0&&i<=t.height-n&&At.readPixels(e,i,r,n,te.convert(h),te.convert(l),a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{s&&At.bindFramebuffer(At.FRAMEBUFFER,et)}}}}function we(t,e){this.name="",this.color=new q(t),this.density=void 0!==e?e:25e-5}function Ee(t,e,i){this.name="",this.color=new q(t),this.near=void 0!==e?e:1,this.far=void 0!==i?i:1e3}function Me(){ht.call(this),this.type="Scene",this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0}function Te(t,e,i,r,n){ht.call(this),this.lensFlares=[],this.positionScreen=new a,this.customUpdateCallback=void 0,void 0!==t&&this.add(t,e,i,r,n)}function Se(t){Q.call(this),this.type="SpriteMaterial",this.color=new q(16777215),this.map=null,this.rotation=0,this.fog=!1,this.lights=!1,this.setValues(t)}function Ae(t){ht.call(this),this.type="Sprite",this.material=void 0!==t?t:new Se}function Re(){ht.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})}function Ce(t,e){if(t=t||[],this.bones=t.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),void 0===e)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(var i=0,n=this.bones.length;i<n;i++)this.boneInverses.push(new r)}}function Pe(){ht.call(this),this.type="Bone"}function Le(t,e){Ut.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new r,this.bindMatrixInverse=new r;var i=this.initBones(),n=new Ce(i);this.bind(n,this.matrixWorld),this.normalizeSkinWeights()}function Ie(t){Q.call(this),this.type="LineBasicMaterial",this.color=new q(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.lights=!1,this.setValues(t)}function ke(t,e,i){if(1===i)return console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),new Oe(t,e);ht.call(this),this.type="Line",this.geometry=void 0!==t?t:new St,this.material=void 0!==e?e:new Ie({color:16777215*Math.random()})}function Oe(t,e){ke.call(this,t,e),this.type="LineSegments"}function De(t,e){ke.call(this,t,e),this.type="LineLoop"}function Ue(t){Q.call(this),this.type="PointsMaterial",this.color=new q(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.lights=!1,this.setValues(t)}function Be(t,e){ht.call(this),this.type="Points",this.geometry=void 0!==t?t:new St,this.material=void 0!==e?e:new Ue({color:16777215*Math.random()})}function Fe(){ht.call(this),this.type="Group"}function Ne(t,e,i,r,n,a,o,c,h){function l(){var t=u.image;t.readyState>=t.HAVE_CURRENT_DATA&&(u.needsUpdate=!0),requestAnimationFrame(l)}s.call(this,t,e,i,r,n,a,o,c,h),this.generateMipmaps=!1;var u=this;requestAnimationFrame(l)}function ze(t,e,i,r,n,a,o,c,h,l,u,p){s.call(this,null,a,o,c,h,l,r,n,u,p),this.image={width:e,height:i},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}function He(t,e,i,r,n,a,o,c,h,l){if((l=void 0!==l?l:Wo)!==Wo&&l!==Xo)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&l===Wo&&(i=Po),void 0===i&&l===Xo&&(i=Fo),s.call(this,null,r,n,a,o,c,l,i,h),this.image={width:t,height:e},this.magFilter=void 0!==o?o:_o,this.minFilter=void 0!==c?c:_o,this.flipY=!1,this.generateMipmaps=!1}function Ge(t){St.call(this),this.type="WireframeGeometry";var e,i,r,n,o,s,c,h,l,u,p=[],d=[0,0],f={},m=["a","b","c"];if(t&&t.isGeometry){var g=t.faces;for(e=0,r=g.length;e<r;e++){var v=g[e];for(i=0;i<3;i++)c=v[m[i]],h=v[m[(i+1)%3]],d[0]=Math.min(c,h),d[1]=Math.max(c,h),l=d[0]+","+d[1],void 0===f[l]&&(f[l]={index1:d[0],index2:d[1]})}for(l in f)s=f[l],u=t.vertices[s.index1],p.push(u.x,u.y,u.z),u=t.vertices[s.index2],p.push(u.x,u.y,u.z)}else if(t&&t.isBufferGeometry){var y,x,b,_,w,E,M,T;if(u=new a,null!==t.index){for(y=t.attributes.position,x=t.index,b=t.groups,0===b.length&&(b=[{start:0,count:x.count,materialIndex:0}]),n=0,o=b.length;n<o;++n)for(_=b[n],w=_.start,E=_.count,e=w,r=w+E;e<r;e+=3)for(i=0;i<3;i++)c=x.getX(e+i),h=x.getX(e+(i+1)%3),d[0]=Math.min(c,h),d[1]=Math.max(c,h),l=d[0]+","+d[1],void 0===f[l]&&(f[l]={index1:d[0],index2:d[1]});for(l in f)s=f[l],u.fromBufferAttribute(y,s.index1),p.push(u.x,u.y,u.z),u.fromBufferAttribute(y,s.index2),p.push(u.x,u.y,u.z)}else for(y=t.attributes.position,e=0,r=y.count/3;e<r;e++)for(i=0;i<3;i++)M=3*e+i,u.fromBufferAttribute(y,M),p.push(u.x,u.y,u.z),T=3*e+(i+1)%3,u.fromBufferAttribute(y,T),p.push(u.x,u.y,u.z)}this.addAttribute("position",new wt(p,3))}function Ve(t,e,i){dt.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:i},this.fromBufferGeometry(new je(t,e,i)),this.mergeVertices()}function je(t,e,i){St.call(this),this.type="ParametricBufferGeometry",this.parameters={func:t,slices:e,stacks:i};var r,n,o=[],s=[],c=[],h=[],l=new a,u=new a,p=new a,d=new a,f=new a,m=e+1;for(r=0;r<=i;r++){var g=r/i;for(n=0;n<=e;n++){var v=n/e;u=t(v,g,u),s.push(u.x,u.y,u.z),v-1e-5>=0?(p=t(v-1e-5,g,p),d.subVectors(u,p)):(p=t(v+1e-5,g,p),d.subVectors(p,u)),g-1e-5>=0?(p=t(v,g-1e-5,p),f.subVectors(u,p)):(p=t(v,g+1e-5,p),f.subVectors(p,u)),l.crossVectors(d,f).normalize(),c.push(l.x,l.y,l.z),h.push(v,g)}}for(r=0;r<i;r++)for(n=0;n<e;n++){var y=r*m+n,x=r*m+n+1,b=(r+1)*m+n+1,_=(r+1)*m+n;o.push(y,x,_),o.push(x,b,_)}this.setIndex(o),this.addAttribute("position",new wt(s,3)),this.addAttribute("normal",new wt(c,3)),this.addAttribute("uv",new wt(h,2))}function We(t,e,i,r){dt.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:i,detail:r},this.fromBufferGeometry(new Xe(t,e,i,r)),this.mergeVertices()}function Xe(t,e,r,n){function o(t,e,i,r){var n,a,o=Math.pow(2,r),s=[];for(n=0;n<=o;n++){s[n]=[];var h=t.clone().lerp(i,n/o),l=e.clone().lerp(i,n/o),u=o-n;for(a=0;a<=u;a++)s[n][a]=0===a&&n===o?h:h.clone().lerp(l,a/u)}for(n=0;n<o;n++)for(a=0;a<2*(o-n)-1;a++){var p=Math.floor(a/2);a%2==0?(c(s[n][p+1]),c(s[n+1][p]),c(s[n][p])):(c(s[n][p+1]),c(s[n+1][p+1]),c(s[n+1][p]))}}function s(){for(var t=0;t<m.length;t+=6){var e=m[t+0],i=m[t+2],r=m[t+4],n=Math.max(e,i,r),a=Math.min(e,i,r);n>.9&&a<.1&&(e<.2&&(m[t+0]+=1),i<.2&&(m[t+2]+=1),r<.2&&(m[t+4]+=1))}}function c(t){f.push(t.x,t.y,t.z)}function h(e,i){var r=3*e;i.x=t[r+0],i.y=t[r+1],i.z=t[r+2]}function l(){for(var t=new a,e=new a,r=new a,n=new a,o=new i,s=new i,c=new i,h=0,l=0;h<f.length;h+=9,l+=6){t.set(f[h+0],f[h+1],f[h+2]),e.set(f[h+3],f[h+4],f[h+5]),r.set(f[h+6],f[h+7],f[h+8]),o.set(m[l+0],m[l+1]),s.set(m[l+2],m[l+3]),c.set(m[l+4],m[l+5]),n.copy(t).add(e).add(r).divideScalar(3);var d=p(n);u(o,l+0,t,d),u(s,l+2,e,d),u(c,l+4,r,d)}}function u(t,e,i,r){r<0&&1===t.x&&(m[e]=t.x-1),0===i.x&&0===i.z&&(m[e]=r/2/Math.PI+.5)}function p(t){return Math.atan2(t.z,-t.x)}function d(t){return Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))}St.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:t,indices:e,radius:r,detail:n},r=r||1,n=n||0;var f=[],m=[];!function(t){for(var i=new a,r=new a,n=new a,s=0;s<e.length;s+=3)h(e[s+0],i),h(e[s+1],r),h(e[s+2],n),o(i,r,n,t)}(n),function(t){for(var e=new a,i=0;i<f.length;i+=3)e.x=f[i+0],e.y=f[i+1],e.z=f[i+2],e.normalize().multiplyScalar(t),f[i+0]=e.x,f[i+1]=e.y,f[i+2]=e.z}(r),function(){for(var t=new a,e=0;e<f.length;e+=3){t.x=f[e+0],t.y=f[e+1],t.z=f[e+2];var i=p(t)/2/Math.PI+.5,r=d(t)/Math.PI+.5;m.push(i,1-r)}l(),s()}(),this.addAttribute("position",new wt(f,3)),this.addAttribute("normal",new wt(f.slice(),3)),this.addAttribute("uv",new wt(m,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}function qe(t,e){dt.call(this),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Ye(t,e)),this.mergeVertices()}function Ye(t,e){var i=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],r=[2,1,0,0,3,2,1,3,0,2,3,1];Xe.call(this,i,r,t,e),this.type="TetrahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Ke(t,e){dt.call(this),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Ze(t,e)),this.mergeVertices()}function Ze(t,e){var i=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];Xe.call(this,i,r,t,e),this.type="OctahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Je(t,e){dt.call(this),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Qe(t,e)),this.mergeVertices()}function Qe(t,e){var i=(1+Math.sqrt(5))/2,r=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],n=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];Xe.call(this,r,n,t,e),this.type="IcosahedronBufferGeometry",this.parameters={radius:t,detail:e}}function $e(t,e){dt.call(this),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new ti(t,e)),this.mergeVertices()}function ti(t,e){var i=(1+Math.sqrt(5))/2,r=1/i,n=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-i,0,-r,i,0,r,-i,0,r,i,-r,-i,0,-r,i,0,r,-i,0,r,i,0,-i,0,-r,i,0,-r,-i,0,r,i,0,r],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];Xe.call(this,n,a,t,e),this.type="DodecahedronBufferGeometry",this.parameters={radius:t,detail:e}}function ei(t,e,i,r,n,a){dt.call(this),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:i,radialSegments:r,closed:n},void 0!==a&&console.warn("THREE.TubeGeometry: taper has been removed.");var o=new ii(t,e,i,r,n);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,this.fromBufferGeometry(o),this.mergeVertices()}function ii(t,e,r,n,o){function s(i){g=t.getPointAt(i/e,g);var a=l.normals[i],o=l.binormals[i];for(p=0;p<=n;p++){var s=p/n*Math.PI*2,c=Math.sin(s),h=-Math.cos(s);f.x=h*a.x+c*o.x,f.y=h*a.y+c*o.y,f.z=h*a.z+c*o.z,f.normalize(),y.push(f.x,f.y,f.z),d.x=g.x+r*f.x,d.y=g.y+r*f.y,d.z=g.z+r*f.z,v.push(d.x,d.y,d.z)}}function c(){for(p=1;p<=e;p++)for(u=1;u<=n;u++){var t=(n+1)*(p-1)+(u-1),i=(n+1)*p+(u-1),r=(n+1)*p+u,a=(n+1)*(p-1)+u;b.push(t,i,a),b.push(i,r,a)}}function h(){for(u=0;u<=e;u++)for(p=0;p<=n;p++)m.x=u/e,m.y=p/n,x.push(m.x,m.y)}St.call(this),this.type="TubeBufferGeometry",this.parameters={path:t,tubularSegments:e,radius:r,radialSegments:n,closed:o},e=e||64,r=r||1,n=n||8,o=o||!1;var l=t.computeFrenetFrames(e,o)
;this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;var u,p,d=new a,f=new a,m=new i,g=new a,v=[],y=[],x=[],b=[];!function(){for(u=0;u<e;u++)s(u);s(!1===o?e:0),h(),c()}(),this.setIndex(b),this.addAttribute("position",new wt(v,3)),this.addAttribute("normal",new wt(y,3)),this.addAttribute("uv",new wt(x,2))}function ri(t,e,i,r,n,a,o){dt.call(this),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:i,radialSegments:r,p:n,q:a},void 0!==o&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new ni(t,e,i,r,n,a)),this.mergeVertices()}function ni(t,e,i,r,n,o){function s(t,e,i,r,n){var a=Math.cos(t),o=Math.sin(t),s=i/e*t,c=Math.cos(s);n.x=r*(2+c)*.5*a,n.y=r*(2+c)*o*.5,n.z=r*Math.sin(s)*.5}St.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:t,tube:e,tubularSegments:i,radialSegments:r,p:n,q:o},t=t||1,e=e||.4,i=Math.floor(i)||64,r=Math.floor(r)||8,n=n||2,o=o||3;var c,h,l=[],u=[],p=[],d=[],f=new a,m=new a,g=new a,v=new a,y=new a,x=new a,b=new a;for(c=0;c<=i;++c){var _=c/i*n*Math.PI*2;for(s(_,n,o,t,g),s(_+.01,n,o,t,v),x.subVectors(v,g),b.addVectors(v,g),y.crossVectors(x,b),b.crossVectors(y,x),y.normalize(),b.normalize(),h=0;h<=r;++h){var w=h/r*Math.PI*2,E=-e*Math.cos(w),M=e*Math.sin(w);f.x=g.x+(E*b.x+M*y.x),f.y=g.y+(E*b.y+M*y.y),f.z=g.z+(E*b.z+M*y.z),u.push(f.x,f.y,f.z),m.subVectors(f,g).normalize(),p.push(m.x,m.y,m.z),d.push(c/i),d.push(h/r)}}for(h=1;h<=i;h++)for(c=1;c<=r;c++){var T=(r+1)*(h-1)+(c-1),S=(r+1)*h+(c-1),A=(r+1)*h+c,R=(r+1)*(h-1)+c;l.push(T,S,R),l.push(S,A,R)}this.setIndex(l),this.addAttribute("position",new wt(u,3)),this.addAttribute("normal",new wt(p,3)),this.addAttribute("uv",new wt(d,2))}function ai(t,e,i,r,n){dt.call(this),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:i,tubularSegments:r,arc:n},this.fromBufferGeometry(new oi(t,e,i,r,n)),this.mergeVertices()}function oi(t,e,i,r,n){St.call(this),this.type="TorusBufferGeometry",this.parameters={radius:t,tube:e,radialSegments:i,tubularSegments:r,arc:n},t=t||1,e=e||.4,i=Math.floor(i)||8,r=Math.floor(r)||6,n=n||2*Math.PI;var o,s,c=[],h=[],l=[],u=[],p=new a,d=new a,f=new a;for(o=0;o<=i;o++)for(s=0;s<=r;s++){var m=s/r*n,g=o/i*Math.PI*2;d.x=(t+e*Math.cos(g))*Math.cos(m),d.y=(t+e*Math.cos(g))*Math.sin(m),d.z=e*Math.sin(g),h.push(d.x,d.y,d.z),p.x=t*Math.cos(m),p.y=t*Math.sin(m),f.subVectors(d,p).normalize(),l.push(f.x,f.y,f.z),u.push(s/r),u.push(o/i)}for(o=1;o<=i;o++)for(s=1;s<=r;s++){var v=(r+1)*o+s-1,y=(r+1)*(o-1)+s-1,x=(r+1)*(o-1)+s,b=(r+1)*o+s;c.push(v,y,b),c.push(y,x,b)}this.setIndex(c),this.addAttribute("position",new wt(h,3)),this.addAttribute("normal",new wt(l,3)),this.addAttribute("uv",new wt(u,2))}function si(t,e){dt.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},this.fromBufferGeometry(new ci(t,e)),this.mergeVertices()}function ci(t,e){void 0!==t&&(St.call(this),this.type="ExtrudeBufferGeometry",t=Array.isArray(t)?t:[t],this.addShapeList(t,e),this.computeVertexNormals())}function hi(t,e){dt.call(this),this.type="TextGeometry",this.parameters={text:t,parameters:e},this.fromBufferGeometry(new li(t,e)),this.mergeVertices()}function li(t,e){e=e||{};var i=e.font;if(!i||!i.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new dt;var r=i.generateShapes(t,e.size,e.curveSegments);e.amount=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),ci.call(this,r,e),this.type="TextBufferGeometry"}function ui(t,e,i,r,n,a,o){dt.call(this),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:r,phiLength:n,thetaStart:a,thetaLength:o},this.fromBufferGeometry(new pi(t,e,i,r,n,a,o)),this.mergeVertices()}function pi(t,e,i,r,n,o,s){St.call(this),this.type="SphereBufferGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:r,phiLength:n,thetaStart:o,thetaLength:s},t=t||1,e=Math.max(3,Math.floor(e)||8),i=Math.max(2,Math.floor(i)||6),r=void 0!==r?r:0,n=void 0!==n?n:2*Math.PI,o=void 0!==o?o:0,s=void 0!==s?s:Math.PI;var c,h,l=o+s,u=0,p=[],d=new a,f=new a,m=[],g=[],v=[],y=[];for(h=0;h<=i;h++){var x=[],b=h/i;for(c=0;c<=e;c++){var _=c/e;d.x=-t*Math.cos(r+_*n)*Math.sin(o+b*s),d.y=t*Math.cos(o+b*s),d.z=t*Math.sin(r+_*n)*Math.sin(o+b*s),g.push(d.x,d.y,d.z),f.set(d.x,d.y,d.z).normalize(),v.push(f.x,f.y,f.z),y.push(_,1-b),x.push(u++)}p.push(x)}for(h=0;h<i;h++)for(c=0;c<e;c++){var w=p[h][c+1],E=p[h][c],M=p[h+1][c],T=p[h+1][c+1];(0!==h||o>0)&&m.push(w,E,T),(h!==i-1||l<Math.PI)&&m.push(E,M,T)}this.setIndex(m),this.addAttribute("position",new wt(g,3)),this.addAttribute("normal",new wt(v,3)),this.addAttribute("uv",new wt(y,2))}function di(t,e,i,r,n,a){dt.call(this),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:i,phiSegments:r,thetaStart:n,thetaLength:a},this.fromBufferGeometry(new fi(t,e,i,r,n,a)),this.mergeVertices()}function fi(t,e,r,n,o,s){St.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:r,phiSegments:n,thetaStart:o,thetaLength:s},t=t||.5,e=e||1,o=void 0!==o?o:0,s=void 0!==s?s:2*Math.PI,r=void 0!==r?Math.max(3,r):8,n=void 0!==n?Math.max(1,n):1;var c,h,l,u=[],p=[],d=[],f=[],m=t,g=(e-t)/n,v=new a,y=new i;for(h=0;h<=n;h++){for(l=0;l<=r;l++)c=o+l/r*s,v.x=m*Math.cos(c),v.y=m*Math.sin(c),p.push(v.x,v.y,v.z),d.push(0,0,1),y.x=(v.x/e+1)/2,y.y=(v.y/e+1)/2,f.push(y.x,y.y);m+=g}for(h=0;h<n;h++){var x=h*(r+1);for(l=0;l<r;l++){c=l+x;var b=c,_=c+r+1,w=c+r+2,E=c+1;u.push(b,_,E),u.push(_,w,E)}}this.setIndex(u),this.addAttribute("position",new wt(p,3)),this.addAttribute("normal",new wt(d,3)),this.addAttribute("uv",new wt(f,2))}function mi(t,e,i,r){dt.call(this),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:i,phiLength:r},this.fromBufferGeometry(new gi(t,e,i,r)),this.mergeVertices()}function gi(t,e,r,n){St.call(this),this.type="LatheBufferGeometry",this.parameters={points:t,segments:e,phiStart:r,phiLength:n},e=Math.floor(e)||12,r=r||0,n=n||2*Math.PI,n=gs.clamp(n,0,2*Math.PI);var o,s,c,h=[],l=[],u=[],p=1/e,d=new a,f=new i;for(s=0;s<=e;s++){var m=r+s*p*n,g=Math.sin(m),v=Math.cos(m);for(c=0;c<=t.length-1;c++)d.x=t[c].x*g,d.y=t[c].y,d.z=t[c].x*v,l.push(d.x,d.y,d.z),f.x=s/e,f.y=c/(t.length-1),u.push(f.x,f.y)}for(s=0;s<e;s++)for(c=0;c<t.length-1;c++){o=c+s*t.length;var y=o,x=o+t.length,b=o+t.length+1,_=o+1;h.push(y,x,_),h.push(x,b,_)}if(this.setIndex(h),this.addAttribute("position",new wt(l,3)),this.addAttribute("uv",new wt(u,2)),this.computeVertexNormals(),n===2*Math.PI){var w=this.attributes.normal.array,E=new a,M=new a,T=new a;for(o=e*t.length*3,s=0,c=0;s<t.length;s++,c+=3)E.x=w[c+0],E.y=w[c+1],E.z=w[c+2],M.x=w[o+c+0],M.y=w[o+c+1],M.z=w[o+c+2],T.addVectors(E,M).normalize(),w[c+0]=w[o+c+0]=T.x,w[c+1]=w[o+c+1]=T.y,w[c+2]=w[o+c+2]=T.z}}function vi(t,e){dt.call(this),this.type="ShapeGeometry","object"==typeof e&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),e=e.curveSegments),this.parameters={shapes:t,curveSegments:e},this.fromBufferGeometry(new yi(t,e)),this.mergeVertices()}function yi(t,e){function i(t){var i,s,h,l=n.length/3,u=t.extractPoints(e),p=u.shape,d=u.holes;if(!1===Ds.isClockWise(p))for(p=p.reverse(),i=0,s=d.length;i<s;i++)h=d[i],!0===Ds.isClockWise(h)&&(d[i]=h.reverse());var f=Ds.triangulateShape(p,d);for(i=0,s=d.length;i<s;i++)h=d[i],p=p.concat(h);for(i=0,s=p.length;i<s;i++){var m=p[i];n.push(m.x,m.y,0),a.push(0,0,1),o.push(m.x,m.y)}for(i=0,s=f.length;i<s;i++){var g=f[i],v=g[0]+l,y=g[1]+l,x=g[2]+l;r.push(v,y,x),c+=3}}St.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:t,curveSegments:e},e=e||12;var r=[],n=[],a=[],o=[],s=0,c=0;if(!1===Array.isArray(t))i(t);else for(var h=0;h<t.length;h++)i(t[h]),this.addGroup(s,c,h),s+=c,c=0;this.setIndex(r),this.addAttribute("position",new wt(n,3)),this.addAttribute("normal",new wt(a,3)),this.addAttribute("uv",new wt(o,2))}function xi(t,e){St.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:e},e=void 0!==e?e:1;var i,r,n,a,o=[],s=Math.cos(gs.DEG2RAD*e),c=[0,0],h={},l=["a","b","c"];t.isBufferGeometry?(a=new dt,a.fromBufferGeometry(t)):a=t.clone(),a.mergeVertices(),a.computeFaceNormals();for(var u=a.vertices,p=a.faces,d=0,f=p.length;d<f;d++)for(var m=p[d],g=0;g<3;g++)i=m[l[g]],r=m[l[(g+1)%3]],c[0]=Math.min(i,r),c[1]=Math.max(i,r),n=c[0]+","+c[1],void 0===h[n]?h[n]={index1:c[0],index2:c[1],face1:d,face2:void 0}:h[n].face2=d;for(n in h){var v=h[n];if(void 0===v.face2||p[v.face1].normal.dot(p[v.face2].normal)<=s){var y=u[v.index1];o.push(y.x,y.y,y.z),y=u[v.index2],o.push(y.x,y.y,y.z)}}this.addAttribute("position",new wt(o,3))}function bi(t,e,i,r,n,a,o,s){dt.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:i,radialSegments:r,heightSegments:n,openEnded:a,thetaStart:o,thetaLength:s},this.fromBufferGeometry(new _i(t,e,i,r,n,a,o,s)),this.mergeVertices()}function _i(t,e,r,n,o,s,c,h){function l(r){var o,s,l,v=new i,b=new a,_=0,w=!0===r?t:e,E=!0===r?1:-1;for(s=g,o=1;o<=n;o++)d.push(0,y*E,0),f.push(0,E,0),m.push(.5,.5),g++;for(l=g,o=0;o<=n;o++){var M=o/n,T=M*h+c,S=Math.cos(T),A=Math.sin(T);b.x=w*A,b.y=y*E,b.z=w*S,d.push(b.x,b.y,b.z),f.push(0,E,0),v.x=.5*S+.5,v.y=.5*A*E+.5,m.push(v.x,v.y),g++}for(o=0;o<n;o++){var R=s+o,C=l+o;!0===r?p.push(C,C+1,R):p.push(C+1,C,R),_+=3}u.addGroup(x,_,!0===r?1:2),x+=_}St.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:r,radialSegments:n,heightSegments:o,openEnded:s,thetaStart:c,thetaLength:h};var u=this;t=void 0!==t?t:1,e=void 0!==e?e:1,r=r||1,n=Math.floor(n)||8,o=Math.floor(o)||1,s=void 0!==s&&s,c=void 0!==c?c:0,h=void 0!==h?h:2*Math.PI;var p=[],d=[],f=[],m=[],g=0,v=[],y=r/2,x=0;!function(){var i,s,l=new a,b=new a,_=0,w=(e-t)/r;for(s=0;s<=o;s++){var E=[],M=s/o,T=M*(e-t)+t;for(i=0;i<=n;i++){var S=i/n,A=S*h+c,R=Math.sin(A),C=Math.cos(A);b.x=T*R,b.y=-M*r+y,b.z=T*C,d.push(b.x,b.y,b.z),l.set(R,w,C).normalize(),f.push(l.x,l.y,l.z),m.push(S,1-M),E.push(g++)}v.push(E)}for(i=0;i<n;i++)for(s=0;s<o;s++){var P=v[s][i],L=v[s+1][i],I=v[s+1][i+1],k=v[s][i+1];p.push(P,L,k),p.push(L,I,k),_+=6}u.addGroup(x,_,0),x+=_}(),!1===s&&(t>0&&l(!0),e>0&&l(!1)),this.setIndex(p),this.addAttribute("position",new wt(d,3)),this.addAttribute("normal",new wt(f,3)),this.addAttribute("uv",new wt(m,2))}function wi(t,e,i,r,n,a,o){bi.call(this,0,t,e,i,r,n,a,o),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:i,heightSegments:r,openEnded:n,thetaStart:a,thetaLength:o}}function Ei(t,e,i,r,n,a,o){_i.call(this,0,t,e,i,r,n,a,o),this.type="ConeBufferGeometry",this.parameters={radius:t,height:e,radialSegments:i,heightSegments:r,openEnded:n,thetaStart:a,thetaLength:o}}function Mi(t,e,i,r){dt.call(this),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:i,thetaLength:r},this.fromBufferGeometry(new Ti(t,e,i,r)),this.mergeVertices()}function Ti(t,e,r,n){St.call(this),this.type="CircleBufferGeometry",this.parameters={radius:t,segments:e,thetaStart:r,thetaLength:n},t=t||1,e=void 0!==e?Math.max(3,e):8,r=void 0!==r?r:0,n=void 0!==n?n:2*Math.PI;var o,s,c=[],h=[],l=[],u=[],p=new a,d=new i;for(h.push(0,0,0),l.push(0,0,1),u.push(.5,.5),s=0,o=3;s<=e;s++,o+=3){var f=r+s/e*n;p.x=t*Math.cos(f),p.y=t*Math.sin(f),h.push(p.x,p.y,p.z),l.push(0,0,1),d.x=(h[o]/t+1)/2,d.y=(h[o+1]/t+1)/2,u.push(d.x,d.y)}for(o=1;o<=e;o++)c.push(o,o+1,0);this.setIndex(c),this.addAttribute("position",new wt(h,3)),this.addAttribute("normal",new wt(l,3)),this.addAttribute("uv",new wt(u,2))}function Si(t){Q.call(this),this.type="ShadowMaterial",this.color=new q(0),this.opacity=1,this.lights=!0,this.transparent=!0,this.setValues(t)}function Ai(t){It.call(this,t),this.type="RawShaderMaterial"}function Ri(t){Q.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new q(16777215),this.roughness=.5,this.metalness=.5,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new q(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new i(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Ci(t){Ri.call(this),this.defines={PHYSICAL:""},this.type="MeshPhysicalMaterial",this.reflectivity=.5,this.clearCoat=0,this.clearCoatRoughness=0,this.setValues(t)}function Pi(t){Q.call(this),this.type="MeshPhongMaterial",this.color=new q(16777215),this.specular=new q(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new q(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new i(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=io,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Li(t){Pi.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.gradientMap=null,this.setValues(t)}function Ii(t){Q.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new i(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function ki(t){Q.call(this),this.type="MeshLambertMaterial",this.color=new q(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new q(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=io,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Oi(t){Ie.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}function Di(t,e,i){var r=this,n=!1,a=0,o=0,s=void 0;this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=i,this.itemStart=function(t){o++,!1===n&&void 0!==r.onStart&&r.onStart(t,a,o),n=!0},this.itemEnd=function(t){a++,void 0!==r.onProgress&&r.onProgress(t,a,o),a===o&&(n=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(t){void 0!==r.onError&&r.onError(t)},this.resolveURL=function(t){return s?s(t):t},this.setURLModifier=function(t){s=t}}function Ui(t){this.manager=void 0!==t?t:Ns}function Bi(t){this.manager=void 0!==t?t:Ns,this._parser=null}function Fi(t){this.manager=void 0!==t?t:Ns,this._parser=null}function Ni(t){this.manager=void 0!==t?t:Ns}function zi(t){this.manager=void 0!==t?t:Ns}function Hi(t){this.manager=void 0!==t?t:Ns}function Gi(t,e){ht.call(this),this.type="Light",this.color=new q(t),this.intensity=void 0!==e?e:1,this.receiveShadow=void 0}function Vi(t,e,i){Gi.call(this,t,i),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(ht.DefaultUp),this.updateMatrix(),this.groundColor=new q(e)}function ji(t){this.camera=t,this.bias=0,this.radius=1,this.mapSize=new i(512,512),this.map=null,this.matrix=new r}function Wi(){ji.call(this,new me(50,1,.5,500))}function Xi(t,e,i,r,n,a){Gi.call(this,t,e),this.type="SpotLight",this.position.copy(ht.DefaultUp),this.updateMatrix(),this.target=new ht,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(t){this.intensity=t/Math.PI}}),this.distance=void 0!==i?i:0,this.angle=void 0!==r?r:Math.PI/3,this.penumbra=void 0!==n?n:0,this.decay=void 0!==a?a:1,this.shadow=new Wi}function qi(t,e,i,r){Gi.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(t){this.intensity=t/(4*Math.PI)}}),this.distance=void 0!==i?i:0,this.decay=void 0!==r?r:1,this.shadow=new ji(new me(90,1,.5,500))}function Yi(){ji.call(this,new ut(-5,5,5,-5,.5,500))}function Ki(t,e){Gi.call(this,t,e),this.type="DirectionalLight",this.position.copy(ht.DefaultUp),this.updateMatrix(),this.target=new ht,this.shadow=new Yi}function Zi(t,e){Gi.call(this,t,e),this.type="AmbientLight",this.castShadow=void 0}function Ji(t,e,i,r){Gi.call(this,t,e),this.type="RectAreaLight",this.position.set(0,1,0),this.updateMatrix(),this.width=void 0!==i?i:10,this.height=void 0!==r?r:10}function Qi(t,e,i,r){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new e.constructor(i),this.sampleValues=e,this.valueSize=i}function $i(t,e,i,r){Qi.call(this,t,e,i,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function tr(t,e,i,r){Qi.call(this,t,e,i,r)}function er(t,e,i,r){Qi.call(this,t,e,i,r)}function ir(t,e,i,r){if(void 0===t)throw new Error("track name is undefined");if(void 0===e||0===e.length)throw new Error("no keyframes in track named "+t);this.name=t,this.times=Hs.convertArray(e,this.TimeBufferType),this.values=Hs.convertArray(i,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation),this.validate(),this.optimize()}function rr(t,e,i,r){ir.call(this,t,e,i,r)}function nr(t,e,i,r){Qi.call(this,t,e,i,r)}function ar(t,e,i,r){ir.call(this,t,e,i,r)}function or(t,e,i,r){ir.call(this,t,e,i,r)}function sr(t,e,i,r){ir.call(this,t,e,i,r)}function cr(t,e,i){ir.call(this,t,e,i)}function hr(t,e,i,r){ir.call(this,t,e,i,r)}function lr(t,e,i,r){ir.apply(this,t,e,i,r)}function ur(t,e,i){this.name=t,this.tracks=i,this.duration=void 0!==e?e:-1,this.uuid=gs.generateUUID(),this.duration<0&&this.resetDuration(),this.optimize()}function pr(t){this.manager=void 0!==t?t:Ns,this.textures={}}function dr(t){this.manager=void 0!==t?t:Ns}function fr(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}}function mr(t){"boolean"==typeof t&&(console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),t=void 0),this.manager=void 0!==t?t:Ns,this.withCredentials=!1}function gr(t){this.manager=void 0!==t?t:Ns,this.texturePath=""}function vr(t,e,i,r,n){var a=.5*(r-e),o=.5*(n-i),s=t*t;return(2*i-2*r+a+o)*(t*s)+(-3*i+3*r-2*a-o)*s+a*t+i}function yr(t,e){var i=1-t;return i*i*e}function xr(t,e){return 2*(1-t)*t*e}function br(t,e){return t*t*e}function _r(t,e,i,r){return yr(t,e)+xr(t,i)+br(t,r)}function wr(t,e){var i=1-t;return i*i*i*e}function Er(t,e){var i=1-t;return 3*i*i*t*e}function Mr(t,e){return 3*(1-t)*t*t*e}function Tr(t,e){return t*t*t*e}function Sr(t,e,i,r,n){return wr(t,e)+Er(t,i)+Mr(t,r)+Tr(t,n)}function Ar(){this.type="Curve",this.arcLengthDivisions=200}function Rr(t,e){Ar.call(this),this.type="LineCurve",this.v1=t||new i,this.v2=e||new i}function Cr(){Ar.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function Pr(t,e,i,r,n,a,o,s){Ar.call(this),this.type="EllipseCurve",this.aX=t||0,this.aY=e||0,this.xRadius=i||1,this.yRadius=r||1,this.aStartAngle=n||0,this.aEndAngle=a||2*Math.PI,this.aClockwise=o||!1,this.aRotation=s||0}function Lr(t){Ar.call(this),this.type="SplineCurve",this.points=t||[]}function Ir(t,e,r,n){Ar.call(this),this.type="CubicBezierCurve",this.v0=t||new i,this.v1=e||new i,this.v2=r||new i,this.v3=n||new i}function kr(t,e,r){Ar.call(this),this.type="QuadraticBezierCurve",this.v0=t||new i,this.v1=e||new i,this.v2=r||new i}function Or(t){Cr.call(this),this.type="Path",this.currentPoint=new i,t&&this.setFromPoints(t)}function Dr(t){Or.call(this,t),this.type="Shape",this.holes=[]}function Ur(){this.type="ShapePath",this.subPaths=[],this.currentPath=null}function Br(t){this.type="Font",this.data=t}function Fr(t){this.manager=void 0!==t?t:Ns}function Nr(t){this.manager=void 0!==t?t:Ns}function zr(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new me,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new me,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1}function Hr(t,e,i){ht.call(this),this.type="CubeCamera";var r=new me(90,1,t,e);r.up.set(0,-1,0),r.lookAt(new a(1,0,0)),this.add(r);var n=new me(90,1,t,e);n.up.set(0,-1,0),n.lookAt(new a(-1,0,0)),this.add(n);var o=new me(90,1,t,e);o.up.set(0,0,1),o.lookAt(new a(0,1,0)),this.add(o);var s=new me(90,1,t,e);s.up.set(0,0,-1),s.lookAt(new a(0,-1,0)),this.add(s);var c=new me(90,1,t,e);c.up.set(0,-1,0),c.lookAt(new a(0,0,1)),this.add(c);var h=new me(90,1,t,e);h.up.set(0,-1,0),h.lookAt(new a(0,0,-1)),this.add(h);var u={format:zo,magFilter:Mo,minFilter:Mo};this.renderTarget=new l(i,i,u),this.renderTarget.texture.name="CubeCamera",this.update=function(t,e){null===this.parent&&this.updateMatrixWorld();var i=this.renderTarget,a=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,i.activeCubeFace=0,t.render(e,r,i),i.activeCubeFace=1,t.render(e,n,i),i.activeCubeFace=2,t.render(e,o,i),i.activeCubeFace=3,t.render(e,s,i),i.activeCubeFace=4,t.render(e,c,i),i.texture.generateMipmaps=a,i.activeCubeFace=5,t.render(e,h,i),t.setRenderTarget(null)},this.clear=function(t,e,i,r){for(var n=this.renderTarget,a=0;a<6;a++)n.activeCubeFace=a,t.setRenderTarget(n),t.clear(e,i,r);t.setRenderTarget(null)}}function Gr(){ht.call(this),this.type="AudioListener",this.context=Ks.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null}function Vr(t){ht.call(this),this.type="Audio",this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.loop=!1,this.startTime=0,this.offset=0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this.filters=[]}function jr(t){Vr.call(this,t),this.panner=this.context.createPanner(),this.panner.connect(this.gain)}function Wr(t,e){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=void 0!==e?e:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}function Xr(t,e,i){this.binding=t,this.valueSize=i;var r,n=Float64Array;switch(e){case"quaternion":r=this._slerp;break;case"string":case"bool":n=Array,r=this._select;break;default:r=this._lerp}this.buffer=new n(4*i),this._mixBufferRegion=r,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}function qr(t,e,i){var r=i||Yr.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,r)}function Yr(t,e,i){this.path=e,this.parsedPath=i||Yr.parseTrackName(e),this.node=Yr.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}function Kr(){this.uuid=gs.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var t={};this._indicesByUUID=t;for(var e=0,i=arguments.length;e!==i;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var r=this;this.stats={objects:{get total(){return r._objects.length},get inUse(){return this.total-r.nCachedObjects_}},get bindingsPerObject(){return r._bindings.length}}}function Zr(t,e,i){this._mixer=t,this._clip=e,this._localRoot=i||null;for(var r=e.tracks,n=r.length,a=new Array(n),o={endingStart:rs,endingEnd:rs},s=0;s!==n;++s){var c=r[s].createInterpolant(null);a[s]=c,c.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(n),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=is,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}function Jr(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}function Qr(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}function $r(){St.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0}function tn(t,e,i,r){this.uuid=gs.generateUUID(),this.data=t,this.itemSize=e,this.offset=i,this.normalized=!0===r}function en(t,e){this.uuid=gs.generateUUID(),this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.onUploadCallback=function(){},this.version=0}function rn(t,e,i){en.call(this,t,e),this.meshPerAttribute=i||1}function nn(t,e,i){ft.call(this,t,e),this.meshPerAttribute=i||1}function an(t,e,i,r){this.ray=new kt(t,e),this.near=i||0,this.far=r||1/0,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function on(t,e){return t.distance-e.distance}function sn(t,e,i,r){if(!1!==t.visible&&(t.raycast(e,i),!0===r))for(var n=t.children,a=0,o=n.length;a<o;a++)sn(n[a],e,i,!0)}function cn(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}function hn(t,e,i){return this.radius=void 0!==t?t:1,this.phi=void 0!==e?e:0,this.theta=void 0!==i?i:0,this}function ln(t,e,i){return this.radius=void 0!==t?t:1,this.theta=void 0!==e?e:0,this.y=void 0!==i?i:0,this}function un(t){ht.call(this),this.material=t,this.render=function(){}}function pn(t,e,i,r){this.object=t,this.size=void 0!==e?e:1;var n=void 0!==i?i:16711680,a=void 0!==r?r:1,o=0,s=this.object.geometry;s&&s.isGeometry?o=3*s.faces.length:s&&s.isBufferGeometry&&(o=s.attributes.normal.count);var c=new St,h=new wt(2*o*3,3);c.addAttribute("position",h),Oe.call(this,c,new Ie({color:n,linewidth:a})),this.matrixAutoUpdate=!1,this.update()}function dn(t,e){ht.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;for(var i=new St,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],n=0,a=1;n<32;n++,a++){var o=n/32*Math.PI*2,s=a/32*Math.PI*2;r.push(Math.cos(o),Math.sin(o),1,Math.cos(s),Math.sin(s),1)}i.addAttribute("position",new wt(r,3));var c=new Ie({fog:!1});this.cone=new Oe(i,c),this.add(this.cone),this.update()}function fn(t){var e=[];t&&t.isBone&&e.push(t);for(var i=0;i<t.children.length;i++)e.push.apply(e,fn(t.children[i]));return e}function mn(t){for(var e=fn(t),i=new St,r=[],n=[],a=new q(0,0,1),o=new q(0,1,0),s=0;s<e.length;s++){var c=e[s];c.parent&&c.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),n.push(a.r,a.g,a.b),n.push(o.r,o.g,o.b))}i.addAttribute("position",new wt(r,3)),i.addAttribute("color",new wt(n,3));var h=new Ie({vertexColors:Ta,depthTest:!1,depthWrite:!1,transparent:!0});Oe.call(this,i,h),this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}function gn(t,e,i){this.light=t,this.light.updateMatrixWorld(),this.color=i;var r=new pi(e,4,2),n=new Lt({wireframe:!0,fog:!1});Ut.call(this,r,n),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}function vn(t,e){ht.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;var i=new Ie({fog:!1}),r=new St;r.addAttribute("position",new ft(new Float32Array(15),3)),this.line=new ke(r,i),this.add(this.line),this.update()}function yn(t,e,i){ht.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;var r=new Ze(e);r.rotateY(.5*Math.PI),this.material=new Lt({wireframe:!0,fog:!1}),void 0===this.color&&(this.material.vertexColors=Ta);var n=r.getAttribute("position"),a=new Float32Array(3*n.count);r.addAttribute("color",new ft(a,3)),this.add(new Ut(r,this.material)),this.update()}function xn(t,e,i,r){t=t||10,e=e||10,i=new q(void 0!==i?i:4473924),r=new q(void 0!==r?r:8947848);for(var n=e/2,a=t/e,o=t/2,s=[],c=[],h=0,l=0,u=-o;h<=e;h++,u+=a){s.push(-o,0,u,o,0,u),s.push(u,0,-o,u,0,o);var p=h===n?i:r;p.toArray(c,l),l+=3,p.toArray(c,l),l+=3,p.toArray(c,l),l+=3,p.toArray(c,l),l+=3}var d=new St;d.addAttribute("position",new wt(s,3)),d.addAttribute("color",new wt(c,3));var f=new Ie({vertexColors:Ta});Oe.call(this,d,f)}function bn(t,e,i,r,n,a){t=t||10,e=e||16,i=i||8,r=r||64,n=new q(void 0!==n?n:4473924),a=new q(void 0!==a?a:8947848);var o,s,c,h,l,u,p,d=[],f=[];for(h=0;h<=e;h++)c=h/e*(2*Math.PI),o=Math.sin(c)*t,s=Math.cos(c)*t,d.push(0,0,0),d.push(o,0,s),p=1&h?n:a,f.push(p.r,p.g,p.b),f.push(p.r,p.g,p.b);for(h=0;h<=i;h++)for(p=1&h?n:a,u=t-t/i*h,l=0;l<r;l++)c=l/r*(2*Math.PI),o=Math.sin(c)*u,s=Math.cos(c)*u,d.push(o,0,s),f.push(p.r,p.g,p.b),c=(l+1)/r*(2*Math.PI),o=Math.sin(c)*u,s=Math.cos(c)*u,d.push(o,0,s),f.push(p.r,p.g,p.b);var m=new St;m.addAttribute("position",new wt(d,3)),m.addAttribute("color",new wt(f,3));var g=new Ie({vertexColors:Ta});Oe.call(this,m,g)}function _n(t,e,i,r){this.object=t,this.size=void 0!==e?e:1;var n=void 0!==i?i:16776960,a=void 0!==r?r:1,o=0,s=this.object.geometry;s&&s.isGeometry?o=s.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");var c=new St,h=new wt(2*o*3,3);c.addAttribute("position",h),Oe.call(this,c,new Ie({color:n,linewidth:a})),this.matrixAutoUpdate=!1,this.update()}function wn(t,e,i){ht.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,void 0===e&&(e=1);var r=new St;r.addAttribute("position",new wt([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));var n=new Ie({fog:!1});this.lightPlane=new ke(r,n),this.add(this.lightPlane),r=new St,r.addAttribute("position",new wt([0,0,0,0,0,1],3)),this.targetLine=new ke(r,n),this.add(this.targetLine),this.update()}function En(t){function e(t,e,r){i(t,r),i(e,r)}function i(t,e){a.push(0,0,0),o.push(e.r,e.g,e.b),void 0===s[t]&&(s[t]=[]),s[t].push(a.length/3-1)}var r=new St,n=new Ie({color:16777215,vertexColors:Ma}),a=[],o=[],s={},c=new q(16755200),h=new q(16711680),l=new q(43775),u=new q(16777215),p=new q(3355443);e("n1","n2",c),e("n2","n4",c),e("n4","n3",c),e("n3","n1",c),e("f1","f2",c),e("f2","f4",c),e("f4","f3",c),e("f3","f1",c),e("n1","f1",c),e("n2","f2",c),e("n3","f3",c),e("n4","f4",c),e("p","n1",h),e("p","n2",h),e("p","n3",h),e("p","n4",h),e("u1","u2",l),e("u2","u3",l),e("u3","u1",l),e("c","t",u),e("p","c",p),e("cn1","cn2",p),e("cn3","cn4",p),e("cf1","cf2",p),e("cf3","cf4",p),r.addAttribute("position",new wt(a,3)),r.addAttribute("color",new wt(o,3)),Oe.call(this,r,n),this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update()}function Mn(t,e){this.object=t,void 0===e&&(e=16776960);var i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),n=new St;n.setIndex(new ft(i,1)),n.addAttribute("position",new ft(r,3)),Oe.call(this,n,new Ie({color:e})),this.matrixAutoUpdate=!1,this.update()}function Tn(t,e){this.type="Box3Helper",this.box=t;var i=void 0!==e?e:16776960,r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],a=new St;a.setIndex(new ft(r,1)),a.addAttribute("position",new wt(n,3)),Oe.call(this,a,new Ie({color:i})),this.geometry.computeBoundingSphere()}function Sn(t,e,i){this.type="PlaneHelper",this.plane=t,
this.size=void 0===e?1:e;var r=void 0!==i?i:16776960,n=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],a=new St;a.addAttribute("position",new wt(n,3)),a.computeBoundingSphere(),ke.call(this,a,new Ie({color:r}));var o=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],s=new St;s.addAttribute("position",new wt(o,3)),s.computeBoundingSphere(),this.add(new Ut(s,new Lt({color:r,opacity:.2,transparent:!0,depthWrite:!1})))}function An(t,e,i,r,n,a){ht.call(this),void 0===r&&(r=16776960),void 0===i&&(i=1),void 0===n&&(n=.2*i),void 0===a&&(a=.2*n),void 0===Zs&&(Zs=new St,Zs.addAttribute("position",new wt([0,0,0,0,1,0],3)),Js=new _i(0,.5,1,5,1),Js.translate(0,-.5,0)),this.position.copy(e),this.line=new ke(Zs,new Ie({color:r})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Ut(Js,new Lt({color:r})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(i,n,a)}function Rn(t){t=t||1;var e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],i=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],r=new St;r.addAttribute("position",new wt(e,3)),r.addAttribute("color",new wt(i,3));var n=new Ie({vertexColors:Ta});Oe.call(this,r,n)}function Cn(){function t(t,a,o,s){e=t,i=o,r=-3*t+3*a-2*o-s,n=2*t-2*a+o+s}var e=0,i=0,r=0,n=0;return{initCatmullRom:function(e,i,r,n,a){t(i,r,a*(r-e),a*(n-i))},initNonuniformCatmullRom:function(e,i,r,n,a,o,s){var c=(i-e)/a-(r-e)/(a+o)+(r-i)/o,h=(r-i)/o-(n-i)/(o+s)+(n-r)/s;c*=o,h*=o,t(i,r,c,h)},calc:function(t){var a=t*t;return e+i*t+r*a+n*(a*t)}}}function Pn(t,e,i,r){Ar.call(this),this.type="CatmullRomCurve3",this.points=t||[],this.closed=e||!1,this.curveType=i||"centripetal",this.tension=r||.5}function Ln(t,e,i,r){Ar.call(this),this.type="CubicBezierCurve3",this.v0=t||new a,this.v1=e||new a,this.v2=i||new a,this.v3=r||new a}function In(t,e,i){Ar.call(this),this.type="QuadraticBezierCurve3",this.v0=t||new a,this.v1=e||new a,this.v2=i||new a}function kn(t,e){Ar.call(this),this.type="LineCurve3",this.v1=t||new a,this.v2=e||new a}function On(t,e,i,r,n,a){Pr.call(this,t,e,i,i,r,n,a),this.type="ArcCurve"}function Dn(t,e,i,r,n,a,o){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new pt(t,e,i,n,a,o)}function Un(t){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),t}function Bn(t){return void 0===t&&(t=[]),console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),t.isMultiMaterial=!0,t.materials=t,t.clone=function(){return t.slice()},t}function Fn(t,e){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new Be(t,e)}function Nn(t){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new Ae(t)}function zn(t,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new Be(t,e)}function Hn(t){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new Ue(t)}function Gn(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new Ue(t)}function Vn(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new Ue(t)}function jn(t,e,i){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new a(t,e,i)}function Wn(t,e){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."),new ft(t,e).setDynamic(!0)}function Xn(t,e){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new mt(t,e)}function qn(t,e){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new gt(t,e)}function Yn(t,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new vt(t,e)}function Kn(t,e){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new yt(t,e)}function Zn(t,e){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new xt(t,e)}function Jn(t,e){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new bt(t,e)}function Qn(t,e){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new _t(t,e)}function $n(t,e){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new wt(t,e)}function ta(t,e){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Et(t,e)}function ea(t){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),Pn.call(this,t),this.type="catmullrom",this.closed=!0}function ia(t){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),Pn.call(this,t),this.type="catmullrom"}function ra(t){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),Pn.call(this,t),this.type="catmullrom"}function na(t){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new Rn(t)}function aa(t,e){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new Mn(t,e)}function oa(t,e){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new Oe(new xi(t.geometry),new Ie({color:void 0!==e?e:16777215}))}function sa(t,e){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new Oe(new Ge(t.geometry),new Ie({color:void 0!==e?e:16777215}))}function ca(t){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new Ui(t)}function ha(t){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new Fi(t)}function la(){console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),this.projectVector=function(t,e){console.warn("THREE.Projector: .projectVector() is now vector.project()."),t.project(e)},this.unprojectVector=function(t,e){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),t.unproject(e)},this.pickingRay=function(){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}}function ua(){console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"),this.domElement=document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),this.clear=function(){},this.render=function(){},this.setClearColor=function(){},this.setSize=function(){}}void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Number.isInteger&&(Number.isInteger=function(t){return"number"==typeof t&&isFinite(t)&&Math.floor(t)===t}),void 0===Math.sign&&(Math.sign=function(t){return t<0?-1:t>0?1:+t}),"name"in Function.prototype==!1&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),void 0===Object.assign&&function(){Object.assign=function(t){if(void 0===t||null===t)throw new TypeError("Cannot convert undefined or null to object");for(var e=Object(t),i=1;i<arguments.length;i++){var r=arguments[i];if(void 0!==r&&null!==r)for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}}(),Object.assign(e.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});var i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;var i=this._listeners;return void 0!==i[t]&&-1!==i[t].indexOf(e)},removeEventListener:function(t,e){if(void 0!==this._listeners){var i=this._listeners,r=i[t];if(void 0!==r){var n=r.indexOf(e);-1!==n&&r.splice(n,1)}}},dispatchEvent:function(t){if(void 0!==this._listeners){var e=this._listeners,i=e[t.type];if(void 0!==i){t.target=this;for(var r=i.slice(0),n=0,a=r.length;n<a;n++)r[n].call(this,t)}}}});var pa="88",da={LEFT:0,MIDDLE:1,RIGHT:2},fa=0,ma=1,ga=2,va=0,ya=1,xa=2,ba=0,_a=1,wa=2,Ea=0,Ma=1,Ta=2,Sa=0,Aa=1,Ra=2,Ca=3,Pa=4,La=5,Ia=100,ka=101,Oa=102,Da=103,Ua=104,Ba=200,Fa=201,Na=202,za=203,Ha=204,Ga=205,Va=206,ja=207,Wa=208,Xa=209,qa=210,Ya=0,Ka=1,Za=2,Ja=3,Qa=4,$a=5,to=6,eo=7,io=0,ro=1,no=2,ao=0,oo=1,so=2,co=3,ho=4,lo=301,uo=302,po=303,fo=304,mo=305,go=306,vo=307,yo=1e3,xo=1001,bo=1002,_o=1003,wo=1004,Eo=1005,Mo=1006,To=1007,So=1008,Ao=1009,Ro=1010,Co=1011,Po=1012,Lo=1013,Io=1014,ko=1015,Oo=1016,Do=1017,Uo=1018,Bo=1019,Fo=1020,No=1021,zo=1022,Ho=1023,Go=1024,Vo=1025,jo=Ho,Wo=1026,Xo=1027,qo=2001,Yo=2002,Ko=2003,Zo=2004,Jo=2100,Qo=2101,$o=2102,ts=2103,es=2151,is=2201,rs=2400,ns=0,as=1,os=2,ss=3e3,cs=3001,hs=3007,ls=3002,us=3004,ps=3005,ds=3006,fs=3200,ms=3201,gs={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var t,e="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),i=0;return function(){for(var r="",n=0;n<36;n++)8===n||13===n||18===n||23===n?r+="-":14===n?r+="4":(i<=2&&(i=33554432+16777216*Math.random()|0),t=15&i,i>>=4,r+=e[19===n?3&t|8:t]);return r}}(),clamp:function(t,e,i){return Math.max(e,Math.min(i,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,i,r,n){return r+(t-e)*(n-r)/(i-e)},lerp:function(t,e,i){return(1-i)*t+i*e},smoothstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*(3-2*t)},smootherstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},degToRad:function(t){return t*gs.DEG2RAD},radToDeg:function(t){return t*gs.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}};Object.defineProperties(i.prototype,{width:{get:function(){return this.x},set:function(t){this.x=t}},height:{get:function(){return this.y},set:function(t){this.y=t}}}),Object.assign(i.prototype,{isVector2:!0,set:function(t,e){return this.x=t,this.y=e,this},setScalar:function(t){return this.x=t,this.y=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addScalar:function(t){return this.x+=t,this.y+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subScalar:function(t){return this.x-=t,this.y-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){return this.multiplyScalar(1/t)},applyMatrix3:function(t){var e=this.x,i=this.y,r=t.elements;return this.x=r[0]*e+r[3]*i+r[6],this.y=r[1]*e+r[4]*i+r[7],this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this},clampScalar:function(){var t=new i,e=new i;return function(i,r){return t.set(i,i),e.set(r,r),this.clamp(t,e)}}(),clampLength:function(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var t=Math.atan2(this.y,this.x);return t<0&&(t+=2*Math.PI),t},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,i=this.y-t.y;return e*e+i*i},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t},fromBufferAttribute:function(t,e,i){return void 0!==i&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this},rotateAround:function(t,e){var i=Math.cos(e),r=Math.sin(e),n=this.x-t.x,a=this.y-t.y;return this.x=n*i-a*r+t.x,this.y=n*r+a*i+t.y,this}}),Object.assign(r.prototype,{isMatrix4:!0,set:function(t,e,i,r,n,a,o,s,c,h,l,u,p,d,f,m){var g=this.elements;return g[0]=t,g[4]=e,g[8]=i,g[12]=r,g[1]=n,g[5]=a,g[9]=o,g[13]=s,g[2]=c,g[6]=h,g[10]=l,g[14]=u,g[3]=p,g[7]=d,g[11]=f,g[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new r).fromArray(this.elements)},copy:function(t){var e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this},copyPosition:function(t){var e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this},extractBasis:function(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this},makeBasis:function(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this},extractRotation:function(){var t=new a;return function(e){var i=this.elements,r=e.elements,n=1/t.setFromMatrixColumn(e,0).length(),a=1/t.setFromMatrixColumn(e,1).length(),o=1/t.setFromMatrixColumn(e,2).length();return i[0]=r[0]*n,i[1]=r[1]*n,i[2]=r[2]*n,i[4]=r[4]*a,i[5]=r[5]*a,i[6]=r[6]*a,i[8]=r[8]*o,i[9]=r[9]*o,i[10]=r[10]*o,this}}(),makeRotationFromEuler:function(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var e=this.elements,i=t.x,r=t.y,n=t.z,a=Math.cos(i),o=Math.sin(i),s=Math.cos(r),c=Math.sin(r),h=Math.cos(n),l=Math.sin(n);if("XYZ"===t.order){var u=a*h,p=a*l,d=o*h,f=o*l;e[0]=s*h,e[4]=-s*l,e[8]=c,e[1]=p+d*c,e[5]=u-f*c,e[9]=-o*s,e[2]=f-u*c,e[6]=d+p*c,e[10]=a*s}else if("YXZ"===t.order){var m=s*h,g=s*l,v=c*h,y=c*l;e[0]=m+y*o,e[4]=v*o-g,e[8]=a*c,e[1]=a*l,e[5]=a*h,e[9]=-o,e[2]=g*o-v,e[6]=y+m*o,e[10]=a*s}else if("ZXY"===t.order){var m=s*h,g=s*l,v=c*h,y=c*l;e[0]=m-y*o,e[4]=-a*l,e[8]=v+g*o,e[1]=g+v*o,e[5]=a*h,e[9]=y-m*o,e[2]=-a*c,e[6]=o,e[10]=a*s}else if("ZYX"===t.order){var u=a*h,p=a*l,d=o*h,f=o*l;e[0]=s*h,e[4]=d*c-p,e[8]=u*c+f,e[1]=s*l,e[5]=f*c+u,e[9]=p*c-d,e[2]=-c,e[6]=o*s,e[10]=a*s}else if("YZX"===t.order){var x=a*s,b=a*c,_=o*s,w=o*c;e[0]=s*h,e[4]=w-x*l,e[8]=_*l+b,e[1]=l,e[5]=a*h,e[9]=-o*h,e[2]=-c*h,e[6]=b*l+_,e[10]=x-w*l}else if("XZY"===t.order){var x=a*s,b=a*c,_=o*s,w=o*c;e[0]=s*h,e[4]=-l,e[8]=c*h,e[1]=x*l+w,e[5]=a*h,e[9]=b*l-_,e[2]=_*l-b,e[6]=o*h,e[10]=w*l+x}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromQuaternion:function(t){var e=this.elements,i=t._x,r=t._y,n=t._z,a=t._w,o=i+i,s=r+r,c=n+n,h=i*o,l=i*s,u=i*c,p=r*s,d=r*c,f=n*c,m=a*o,g=a*s,v=a*c;return e[0]=1-(p+f),e[4]=l-v,e[8]=u+g,e[1]=l+v,e[5]=1-(h+f),e[9]=d-m,e[2]=u-g,e[6]=d+m,e[10]=1-(h+p),e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},lookAt:function(){var t=new a,e=new a,i=new a;return function(r,n,a){var o=this.elements;return i.subVectors(r,n),0===i.lengthSq()&&(i.z=1),i.normalize(),t.crossVectors(a,i),0===t.lengthSq()&&(1===Math.abs(a.z)?i.x+=1e-4:i.z+=1e-4,i.normalize(),t.crossVectors(a,i)),t.normalize(),e.crossVectors(i,t),o[0]=t.x,o[4]=e.x,o[8]=i.x,o[1]=t.y,o[5]=e.y,o[9]=i.y,o[2]=t.z,o[6]=e.z,o[10]=i.z,this}}(),multiply:function(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var i=t.elements,r=e.elements,n=this.elements,a=i[0],o=i[4],s=i[8],c=i[12],h=i[1],l=i[5],u=i[9],p=i[13],d=i[2],f=i[6],m=i[10],g=i[14],v=i[3],y=i[7],x=i[11],b=i[15],_=r[0],w=r[4],E=r[8],M=r[12],T=r[1],S=r[5],A=r[9],R=r[13],C=r[2],P=r[6],L=r[10],I=r[14],k=r[3],O=r[7],D=r[11],U=r[15];return n[0]=a*_+o*T+s*C+c*k,n[4]=a*w+o*S+s*P+c*O,n[8]=a*E+o*A+s*L+c*D,n[12]=a*M+o*R+s*I+c*U,n[1]=h*_+l*T+u*C+p*k,n[5]=h*w+l*S+u*P+p*O,n[9]=h*E+l*A+u*L+p*D,n[13]=h*M+l*R+u*I+p*U,n[2]=d*_+f*T+m*C+g*k,n[6]=d*w+f*S+m*P+g*O,n[10]=d*E+f*A+m*L+g*D,n[14]=d*M+f*R+m*I+g*U,n[3]=v*_+y*T+x*C+b*k,n[7]=v*w+y*S+x*P+b*O,n[11]=v*E+y*A+x*L+b*D,n[15]=v*M+y*R+x*I+b*U,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},applyToBufferAttribute:function(){var t=new a;return function(e){for(var i=0,r=e.count;i<r;i++)t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.applyMatrix4(this),e.setXYZ(i,t.x,t.y,t.z);return e}}(),determinant:function(){var t=this.elements,e=t[0],i=t[4],r=t[8],n=t[12],a=t[1],o=t[5],s=t[9],c=t[13],h=t[2],l=t[6],u=t[10],p=t[14];return t[3]*(+n*s*l-r*c*l-n*o*u+i*c*u+r*o*p-i*s*p)+t[7]*(+e*s*p-e*c*u+n*a*u-r*a*p+r*c*h-n*s*h)+t[11]*(+e*c*l-e*o*p-n*a*l+i*a*p+n*o*h-i*c*h)+t[15]*(-r*o*h-e*s*l+e*o*u+r*a*l-i*a*u+i*s*h)},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},setPosition:function(t){var e=this.elements;return e[12]=t.x,e[13]=t.y,e[14]=t.z,this},getInverse:function(t,e){var i=this.elements,r=t.elements,n=r[0],a=r[1],o=r[2],s=r[3],c=r[4],h=r[5],l=r[6],u=r[7],p=r[8],d=r[9],f=r[10],m=r[11],g=r[12],v=r[13],y=r[14],x=r[15],b=d*y*u-v*f*u+v*l*m-h*y*m-d*l*x+h*f*x,_=g*f*u-p*y*u-g*l*m+c*y*m+p*l*x-c*f*x,w=p*v*u-g*d*u+g*h*m-c*v*m-p*h*x+c*d*x,E=g*d*l-p*v*l-g*h*f+c*v*f+p*h*y-c*d*y,M=n*b+a*_+o*w+s*E;if(0===M){var T="THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";if(!0===e)throw new Error(T);return console.warn(T),this.identity()}var S=1/M;return i[0]=b*S,i[1]=(v*f*s-d*y*s-v*o*m+a*y*m+d*o*x-a*f*x)*S,i[2]=(h*y*s-v*l*s+v*o*u-a*y*u-h*o*x+a*l*x)*S,i[3]=(d*l*s-h*f*s-d*o*u+a*f*u+h*o*m-a*l*m)*S,i[4]=_*S,i[5]=(p*y*s-g*f*s+g*o*m-n*y*m-p*o*x+n*f*x)*S,i[6]=(g*l*s-c*y*s-g*o*u+n*y*u+c*o*x-n*l*x)*S,i[7]=(c*f*s-p*l*s+p*o*u-n*f*u-c*o*m+n*l*m)*S,i[8]=w*S,i[9]=(g*d*s-p*v*s-g*a*m+n*v*m+p*a*x-n*d*x)*S,i[10]=(c*v*s-g*h*s+g*a*u-n*v*u-c*a*x+n*h*x)*S,i[11]=(p*h*s-c*d*s-p*a*u+n*d*u+c*a*m-n*h*m)*S,i[12]=E*S,i[13]=(p*v*o-g*d*o+g*a*f-n*v*f-p*a*y+n*d*y)*S,i[14]=(g*h*o-c*v*o-g*a*l+n*v*l+c*a*y-n*h*y)*S,i[15]=(c*d*o-p*h*o+p*a*l-n*d*l-c*a*f+n*h*f)*S,this},scale:function(t){var e=this.elements,i=t.x,r=t.y,n=t.z;return e[0]*=i,e[4]*=r,e[8]*=n,e[1]*=i,e[5]*=r,e[9]*=n,e[2]*=i,e[6]*=r,e[10]*=n,e[3]*=i,e[7]*=r,e[11]*=n,this},getMaxScaleOnAxis:function(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,r))},makeTranslation:function(t,e,i){return this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var i=Math.cos(e),r=Math.sin(e),n=1-i,a=t.x,o=t.y,s=t.z,c=n*a,h=n*o;return this.set(c*a+i,c*o-r*s,c*s+r*o,0,c*o+r*s,h*o+i,h*s-r*a,0,c*s-r*o,h*s+r*a,n*s*s+i,0,0,0,0,1),this},makeScale:function(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this},makeShear:function(t,e,i){return this.set(1,e,i,0,t,1,i,0,t,e,1,0,0,0,0,1),this},compose:function(t,e,i){return this.makeRotationFromQuaternion(e),this.scale(i),this.setPosition(t),this},decompose:function(){var t=new a,e=new r;return function(i,r,n){var a=this.elements,o=t.set(a[0],a[1],a[2]).length(),s=t.set(a[4],a[5],a[6]).length(),c=t.set(a[8],a[9],a[10]).length();this.determinant()<0&&(o=-o),i.x=a[12],i.y=a[13],i.z=a[14],e.copy(this);var h=1/o,l=1/s,u=1/c;return e.elements[0]*=h,e.elements[1]*=h,e.elements[2]*=h,e.elements[4]*=l,e.elements[5]*=l,e.elements[6]*=l,e.elements[8]*=u,e.elements[9]*=u,e.elements[10]*=u,r.setFromRotationMatrix(e),n.x=o,n.y=s,n.z=c,this}}(),makePerspective:function(t,e,i,r,n,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var o=this.elements,s=2*n/(e-t),c=2*n/(i-r),h=(e+t)/(e-t),l=(i+r)/(i-r),u=-(a+n)/(a-n),p=-2*a*n/(a-n);return o[0]=s,o[4]=0,o[8]=h,o[12]=0,o[1]=0,o[5]=c,o[9]=l,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makeOrthographic:function(t,e,i,r,n,a){var o=this.elements,s=1/(e-t),c=1/(i-r),h=1/(a-n),l=(e+t)*s,u=(i+r)*c,p=(a+n)*h;return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-l,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2*h,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(t){for(var e=this.elements,i=t.elements,r=0;r<16;r++)if(e[r]!==i[r])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var i=0;i<16;i++)this.elements[i]=t[i+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}),Object.assign(n,{slerp:function(t,e,i,r){return i.copy(t).slerp(e,r)},slerpFlat:function(t,e,i,r,n,a,o){var s=i[r+0],c=i[r+1],h=i[r+2],l=i[r+3],u=n[a+0],p=n[a+1],d=n[a+2],f=n[a+3];if(l!==f||s!==u||c!==p||h!==d){var m=1-o,g=s*u+c*p+h*d+l*f,v=g>=0?1:-1,y=1-g*g;if(y>Number.EPSILON){var x=Math.sqrt(y),b=Math.atan2(x,g*v);m=Math.sin(m*b)/x,o=Math.sin(o*b)/x}var _=o*v;if(s=s*m+u*_,c=c*m+p*_,h=h*m+d*_,l=l*m+f*_,m===1-o){var w=1/Math.sqrt(s*s+c*c+h*h+l*l);s*=w,c*=w,h*=w,l*=w}}t[e]=s,t[e+1]=c,t[e+2]=h,t[e+3]=l}}),Object.defineProperties(n.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this.onChangeCallback()}},w:{get:function(){return this._w},set:function(t){this._w=t,this.onChangeCallback()}}}),Object.assign(n.prototype,{set:function(t,e,i,r){return this._x=t,this._y=e,this._z=i,this._w=r,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this.onChangeCallback(),this},setFromEuler:function(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var i=t._x,r=t._y,n=t._z,a=t.order,o=Math.cos,s=Math.sin,c=o(i/2),h=o(r/2),l=o(n/2),u=s(i/2),p=s(r/2),d=s(n/2);return"XYZ"===a?(this._x=u*h*l+c*p*d,this._y=c*p*l-u*h*d,this._z=c*h*d+u*p*l,this._w=c*h*l-u*p*d):"YXZ"===a?(this._x=u*h*l+c*p*d,this._y=c*p*l-u*h*d,this._z=c*h*d-u*p*l,this._w=c*h*l+u*p*d):"ZXY"===a?(this._x=u*h*l-c*p*d,this._y=c*p*l+u*h*d,this._z=c*h*d+u*p*l,this._w=c*h*l-u*p*d):"ZYX"===a?(this._x=u*h*l-c*p*d,this._y=c*p*l+u*h*d,this._z=c*h*d-u*p*l,this._w=c*h*l+u*p*d):"YZX"===a?(this._x=u*h*l+c*p*d,this._y=c*p*l+u*h*d,this._z=c*h*d-u*p*l,this._w=c*h*l-u*p*d):"XZY"===a&&(this._x=u*h*l-c*p*d,this._y=c*p*l-u*h*d,this._z=c*h*d+u*p*l,this._w=c*h*l+u*p*d),!1!==e&&this.onChangeCallback(),this},setFromAxisAngle:function(t,e){var i=e/2,r=Math.sin(i);return this._x=t.x*r,this._y=t.y*r,this._z=t.z*r,this._w=Math.cos(i),this.onChangeCallback(),this},setFromRotationMatrix:function(t){var e,i=t.elements,r=i[0],n=i[4],a=i[8],o=i[1],s=i[5],c=i[9],h=i[2],l=i[6],u=i[10],p=r+s+u;return p>0?(e=.5/Math.sqrt(p+1),this._w=.25/e,this._x=(l-c)*e,this._y=(a-h)*e,this._z=(o-n)*e):r>s&&r>u?(e=2*Math.sqrt(1+r-s-u),this._w=(l-c)/e,this._x=.25*e,this._y=(n+o)/e,this._z=(a+h)/e):s>u?(e=2*Math.sqrt(1+s-r-u),this._w=(a-h)/e,this._x=(n+o)/e,this._y=.25*e,this._z=(c+l)/e):(e=2*Math.sqrt(1+u-r-s),this._w=(o-n)/e,this._x=(a+h)/e,this._y=(c+l)/e,this._z=.25*e),this.onChangeCallback(),this},setFromUnitVectors:function(){var t,e=new a;return function(i,r){return void 0===e&&(e=new a),t=i.dot(r)+1,t<1e-6?(t=0,Math.abs(i.x)>Math.abs(i.z)?e.set(-i.y,i.x,0):e.set(0,-i.z,i.y)):e.crossVectors(i,r),this._x=e.x,this._y=e.y,this._z=e.z,this._w=t,this.normalize()}}(),inverse:function(){return this.conjugate().normalize()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this.onChangeCallback(),this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},premultiply:function(t){return this.multiplyQuaternions(t,this)},multiplyQuaternions:function(t,e){var i=t._x,r=t._y,n=t._z,a=t._w,o=e._x,s=e._y,c=e._z,h=e._w;return this._x=i*h+a*o+r*c-n*s,this._y=r*h+a*s+n*o-i*c,this._z=n*h+a*c+i*s-r*o,this._w=a*h-i*o-r*s-n*c,this.onChangeCallback(),this},slerp:function(t,e){if(0===e)return this;if(1===e)return this.copy(t);var i=this._x,r=this._y,n=this._z,a=this._w,o=a*t._w+i*t._x+r*t._y+n*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=a,this._x=i,this._y=r,this._z=n,this;var s=Math.sqrt(1-o*o);if(Math.abs(s)<.001)return this._w=.5*(a+this._w),this._x=.5*(i+this._x),this._y=.5*(r+this._y),this._z=.5*(n+this._z),this;var c=Math.atan2(s,o),h=Math.sin((1-e)*c)/s,l=Math.sin(e*c)/s;return this._w=a*h+this._w*l,this._x=i*h+this._x*l,this._y=r*h+this._y*l,this._z=n*h+this._z*l,this.onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t,e){return void 0===e&&(e=0),this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this.onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}}),Object.assign(a.prototype,{isVector3:!0,set:function(t,e,i){return this.x=t,this.y=e,this.z=i,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(){var t=new n;return function(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(t.setFromEuler(e))}}(),applyAxisAngle:function(){var t=new n;return function(e,i){return this.applyQuaternion(t.setFromAxisAngle(e,i))}}(),applyMatrix3:function(t){var e=this.x,i=this.y,r=this.z,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6]*r,this.y=n[1]*e+n[4]*i+n[7]*r,this.z=n[2]*e+n[5]*i+n[8]*r,this},applyMatrix4:function(t){var e=this.x,i=this.y,r=this.z,n=t.elements,a=1/(n[3]*e+n[7]*i+n[11]*r+n[15]);return this.x=(n[0]*e+n[4]*i+n[8]*r+n[12])*a,this.y=(n[1]*e+n[5]*i+n[9]*r+n[13])*a,this.z=(n[2]*e+n[6]*i+n[10]*r+n[14])*a,this},applyQuaternion:function(t){var e=this.x,i=this.y,r=this.z,n=t.x,a=t.y,o=t.z,s=t.w,c=s*e+a*r-o*i,h=s*i+o*e-n*r,l=s*r+n*i-a*e,u=-n*e-a*i-o*r;return this.x=c*s+u*-n+h*-o-l*-a,this.y=h*s+u*-a+l*-n-c*-o,this.z=l*s+u*-o+c*-a-h*-n,this},project:function(){var t=new r;return function(e){return t.multiplyMatrices(e.projectionMatrix,t.getInverse(e.matrixWorld)),this.applyMatrix4(t)}}(),unproject:function(){var t=new r;return function(e){return t.multiplyMatrices(e.matrixWorld,t.getInverse(e.projectionMatrix)),this.applyMatrix4(t)}}(),transformDirection:function(t){var e=this.x,i=this.y,r=this.z,n=t.elements;return this.x=n[0]*e+n[4]*i+n[8]*r,this.y=n[1]*e+n[5]*i+n[9]*r,this.z=n[2]*e+n[6]*i+n[10]*r,this.normalize()},
divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this},clampScalar:function(){var t=new a,e=new a;return function(i,r){return t.set(i,i,i),e.set(r,r,r),this.clamp(t,e)}}(),clampLength:function(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},cross:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)},crossVectors:function(t,e){var i=t.x,r=t.y,n=t.z,a=e.x,o=e.y,s=e.z;return this.x=r*s-n*o,this.y=n*a-i*s,this.z=i*o-r*a,this},projectOnVector:function(t){var e=t.dot(this)/t.lengthSq();return this.copy(t).multiplyScalar(e)},projectOnPlane:function(){var t=new a;return function(e){return t.copy(this).projectOnVector(e),this.sub(t)}}(),reflect:function(){var t=new a;return function(e){return this.sub(t.copy(e).multiplyScalar(2*this.dot(e)))}}(),angleTo:function(t){var e=this.dot(t)/Math.sqrt(this.lengthSq()*t.lengthSq());return Math.acos(gs.clamp(e,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,i=this.y-t.y,r=this.z-t.z;return e*e+i*i+r*r},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)},setFromSpherical:function(t){var e=Math.sin(t.phi)*t.radius;return this.x=e*Math.sin(t.theta),this.y=Math.cos(t.phi)*t.radius,this.z=e*Math.cos(t.theta),this},setFromCylindrical:function(t){return this.x=t.radius*Math.sin(t.theta),this.y=t.y,this.z=t.radius*Math.cos(t.theta),this},setFromMatrixPosition:function(t){var e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this},setFromMatrixScale:function(t){var e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),r=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=r,this},setFromMatrixColumn:function(t,e){return this.fromArray(t.elements,4*e)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t},fromBufferAttribute:function(t,e,i){return void 0!==i&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}}),Object.assign(o.prototype,{isMatrix3:!0,set:function(t,e,i,r,n,a,o,s,c){var h=this.elements;return h[0]=t,h[1]=r,h[2]=o,h[3]=e,h[4]=n,h[5]=s,h[6]=i,h[7]=a,h[8]=c,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(t){var e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this},setFromMatrix4:function(t){var e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this},applyToBufferAttribute:function(){var t=new a;return function(e){for(var i=0,r=e.count;i<r;i++)t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.applyMatrix3(this),e.setXYZ(i,t.x,t.y,t.z);return e}}(),multiply:function(t){return this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var i=t.elements,r=e.elements,n=this.elements,a=i[0],o=i[3],s=i[6],c=i[1],h=i[4],l=i[7],u=i[2],p=i[5],d=i[8],f=r[0],m=r[3],g=r[6],v=r[1],y=r[4],x=r[7],b=r[2],_=r[5],w=r[8];return n[0]=a*f+o*v+s*b,n[3]=a*m+o*y+s*_,n[6]=a*g+o*x+s*w,n[1]=c*f+h*v+l*b,n[4]=c*m+h*y+l*_,n[7]=c*g+h*x+l*w,n[2]=u*f+p*v+d*b,n[5]=u*m+p*y+d*_,n[8]=u*g+p*x+d*w,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t=this.elements,e=t[0],i=t[1],r=t[2],n=t[3],a=t[4],o=t[5],s=t[6],c=t[7],h=t[8];return e*a*h-e*o*c-i*n*h+i*o*s+r*n*c-r*a*s},getInverse:function(t,e){t&&t.isMatrix4&&console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");var i=t.elements,r=this.elements,n=i[0],a=i[1],o=i[2],s=i[3],c=i[4],h=i[5],l=i[6],u=i[7],p=i[8],d=p*c-h*u,f=h*l-p*s,m=u*s-c*l,g=n*d+a*f+o*m;if(0===g){var v="THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";if(!0===e)throw new Error(v);return console.warn(v),this.identity()}var y=1/g;return r[0]=d*y,r[1]=(o*u-p*a)*y,r[2]=(h*a-o*c)*y,r[3]=f*y,r[4]=(p*n-o*l)*y,r[5]=(o*s-h*n)*y,r[6]=m*y,r[7]=(a*l-u*n)*y,r[8]=(c*n-a*s)*y,this},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},getNormalMatrix:function(t){return this.setFromMatrix4(t).getInverse(this).transpose()},transposeIntoArray:function(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},setUvTransform:function(t,e,i,r,n,a,o){var s=Math.cos(n),c=Math.sin(n);this.set(i*s,i*c,-i*(s*a+c*o)+a+t,-r*c,r*s,-r*(-c*a+s*o)+o+e,0,0,1)},scale:function(t,e){var i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=e,i[4]*=e,i[7]*=e,this},rotate:function(t){var e=Math.cos(t),i=Math.sin(t),r=this.elements,n=r[0],a=r[3],o=r[6],s=r[1],c=r[4],h=r[7];return r[0]=e*n+i*s,r[3]=e*a+i*c,r[6]=e*o+i*h,r[1]=-i*n+e*s,r[4]=-i*a+e*c,r[7]=-i*o+e*h,this},translate:function(t,e){var i=this.elements;return i[0]+=t*i[2],i[3]+=t*i[5],i[6]+=t*i[8],i[1]+=e*i[2],i[4]+=e*i[5],i[7]+=e*i[8],this},equals:function(t){for(var e=this.elements,i=t.elements,r=0;r<9;r++)if(e[r]!==i[r])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var i=0;i<9;i++)this.elements[i]=t[i+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}});var vs=0;s.DEFAULT_IMAGE=void 0,s.DEFAULT_MAPPING=300,Object.defineProperty(s.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(s.prototype,e.prototype,{constructor:s,isTexture:!0,clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){var e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];var i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY};if(void 0!==this.image){var r=this.image;void 0===r.uuid&&(r.uuid=gs.generateUUID()),e||void 0!==t.images[r.uuid]||(t.images[r.uuid]={uuid:r.uuid,url:function(t){var e;if(t instanceof HTMLCanvasElement)e=t;else{e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),e.width=t.width,e.height=t.height;var i=e.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height)}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}(r)}),i.image=r.uuid}return e||(t.textures[this.uuid]=i),i},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(300===this.mapping){if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case yo:t.x=t.x-Math.floor(t.x);break;case xo:t.x=t.x<0?0:1;break;case bo:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case yo:t.y=t.y-Math.floor(t.y);break;case xo:t.y=t.y<0?0:1;break;case bo:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}this.flipY&&(t.y=1-t.y)}}}),Object.assign(c.prototype,{isVector4:!0,set:function(t,e,i,r){return this.x=t,this.y=e,this.z=i,this.w=r,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this.w=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},applyMatrix4:function(t){var e=this.x,i=this.y,r=this.z,n=this.w,a=t.elements;return this.x=a[0]*e+a[4]*i+a[8]*r+a[12]*n,this.y=a[1]*e+a[5]*i+a[9]*r+a[13]*n,this.z=a[2]*e+a[6]*i+a[10]*r+a[14]*n,this.w=a[3]*e+a[7]*i+a[11]*r+a[15]*n,this},divideScalar:function(t){return this.multiplyScalar(1/t)},setAxisAngleFromQuaternion:function(t){this.w=2*Math.acos(t.w);var e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){var e,i,r,n,a=t.elements,o=a[0],s=a[4],c=a[8],h=a[1],l=a[5],u=a[9],p=a[2],d=a[6],f=a[10];if(Math.abs(s-h)<.01&&Math.abs(c-p)<.01&&Math.abs(u-d)<.01){if(Math.abs(s+h)<.1&&Math.abs(c+p)<.1&&Math.abs(u+d)<.1&&Math.abs(o+l+f-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;var m=(o+1)/2,g=(l+1)/2,v=(f+1)/2,y=(s+h)/4,x=(c+p)/4,b=(u+d)/4;return m>g&&m>v?m<.01?(i=0,r=.707106781,n=.707106781):(i=Math.sqrt(m),r=y/i,n=x/i):g>v?g<.01?(i=.707106781,r=0,n=.707106781):(r=Math.sqrt(g),i=y/r,n=b/r):v<.01?(i=.707106781,r=.707106781,n=0):(n=Math.sqrt(v),i=x/n,r=b/n),this.set(i,r,n,e),this}var _=Math.sqrt((d-u)*(d-u)+(c-p)*(c-p)+(h-s)*(h-s));return Math.abs(_)<.001&&(_=1),this.x=(d-u)/_,this.y=(c-p)/_,this.z=(h-s)/_,this.w=Math.acos((o+l+f-1)/2),this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this},clampScalar:function(){var t,e;return function(i,r){return void 0===t&&(t=new c,e=new c),t.set(i,i,i,i),e.set(r,r,r,r),this.clamp(t,e)}}(),clampLength:function(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t},fromBufferAttribute:function(t,e,i){return void 0!==i&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}}),Object.assign(h.prototype,e.prototype,{isWebGLRenderTarget:!0,setSize:function(t,e){this.width===t&&this.height===e||(this.width=t,this.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),l.prototype=Object.create(h.prototype),l.prototype.constructor=l,l.prototype.isWebGLRenderTargetCube=!0,u.prototype=Object.create(s.prototype),u.prototype.constructor=u,u.prototype.isDataTexture=!0,p.prototype=Object.create(s.prototype),p.prototype.constructor=p,p.prototype.isCubeTexture=!0,Object.defineProperty(p.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}});var ys=new s,xs=new p,bs=[],_s=[],ws=new Float32Array(16),Es=new Float32Array(9);V.prototype.setValue=function(t,e){for(var i=this.seq,r=0,n=i.length;r!==n;++r){var a=i[r];a.setValue(t,e[a.id])}};var Ms=/([\w\d_]+)(\])?(\[|\.)?/g;X.prototype.setValue=function(t,e,i){var r=this.map[e];void 0!==r&&r.setValue(t,i,this.renderer)},X.prototype.setOptional=function(t,e,i){var r=e[i];void 0!==r&&this.setValue(t,i,r)},X.upload=function(t,e,i,r){for(var n=0,a=e.length;n!==a;++n){var o=e[n],s=i[o.id];!1!==s.needsUpdate&&o.setValue(t,s.value,r)}},X.seqWithValue=function(t,e){for(var i=[],r=0,n=t.length;r!==n;++r){var a=t[r];a.id in e&&i.push(a)}return i};var Ts={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Object.assign(q.prototype,{isColor:!0,r:1,g:1,b:1,set:function(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this},setScalar:function(t){return this.r=t,this.g=t,this.b=t,this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this},setRGB:function(t,e,i){return this.r=t,this.g=e,this.b=i,this},setHSL:function(){function t(t,e,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+6*(e-t)*(2/3-i):t}return function(e,i,r){if(e=gs.euclideanModulo(e,1),i=gs.clamp(i,0,1),r=gs.clamp(r,0,1),0===i)this.r=this.g=this.b=r;else{var n=r<=.5?r*(1+i):r+i-r*i,a=2*r-n;this.r=t(a,n,e+1/3),this.g=t(a,n,e),this.b=t(a,n,e-1/3)}return this}}(),setStyle:function(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}var i;if(i=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){var r,n=i[1],a=i[2];switch(n){case"rgb":case"rgba":if(r=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,e(r[5]),this;if(r=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,e(r[5]),this;break;case"hsl":case"hsla":if(r=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)){var o=parseFloat(r[1])/360,s=parseInt(r[2],10)/100,c=parseInt(r[3],10)/100;return e(r[5]),this.setHSL(o,s,c)}}}else if(i=/^\#([A-Fa-f0-9]+)$/.exec(t)){var h=i[1],l=h.length;if(3===l)return this.r=parseInt(h.charAt(0)+h.charAt(0),16)/255,this.g=parseInt(h.charAt(1)+h.charAt(1),16)/255,this.b=parseInt(h.charAt(2)+h.charAt(2),16)/255,this;if(6===l)return this.r=parseInt(h.charAt(0)+h.charAt(1),16)/255,this.g=parseInt(h.charAt(2)+h.charAt(3),16)/255,this.b=parseInt(h.charAt(4)+h.charAt(5),16)/255,this}if(t&&t.length>0){var h=Ts[t];void 0!==h?this.setHex(h):console.warn("THREE.Color: Unknown color "+t)}return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t,e){return void 0===e&&(e=2),this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this},copyLinearToGamma:function(t,e){void 0===e&&(e=2);var i=e>0?1/e:1;return this.r=Math.pow(t.r,i),this.g=Math.pow(t.g,i),this.b=Math.pow(t.b,i),this},convertGammaToLinear:function(){var t=this.r,e=this.g,i=this.b;return this.r=t*t,this.g=e*e,this.b=i*i,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){var e,i,r=t||{h:0,s:0,l:0},n=this.r,a=this.g,o=this.b,s=Math.max(n,a,o),c=Math.min(n,a,o),h=(c+s)/2;if(c===s)e=0,i=0;else{var l=s-c;switch(i=h<=.5?l/(s+c):l/(2-s-c),s){case n:e=(a-o)/l+(a<o?6:0);break;case a:e=(o-n)/l+2;break;case o:e=(n-a)/l+4}e/=6}return r.h=e,r.s=i,r.l=h,r},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(t,e,i){var r=this.getHSL();return r.h+=t,r.s+=e,r.l+=i,this.setHSL(r.h,r.s,r.l),this},add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},sub:function(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t,e){return void 0===e&&(e=0),this.r=t[e],this.g=t[e+1],this.b=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t},toJSON:function(){return this.getHex()}});var Ss={common:{diffuse:{value:new q(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new o},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new i(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new q(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new q(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},uvTransform:{value:new o}}},As={merge:function(t){for(var e={},i=0;i<t.length;i++){var r=this.clone(t[i]);for(var n in r)e[n]=r[n]}return e},clone:function(t){var e={};for(var i in t){e[i]={};for(var r in t[i]){var n=t[i][r];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture)?e[i][r]=n.clone():Array.isArray(n)?e[i][r]=n.slice():e[i][r]=n}}return e}},Rs={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"\nvec3 transformed = vec3( position );\n",beginnormal_vertex:"\nvec3 objectNormal = vec3( normal );\n",
bsdfs:"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t}\n\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat theta = acos( dot( N, V ) );\n\tvec2 uv = vec2(\n\t\tsqrt( saturate( roughness ) ),\n\t\tsaturate( theta / ( 0.5 * PI ) ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\n\tfloat b = 3.45068 + (4.18814 + y) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\n\treturn result;\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\n\t\tvec4 plane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t\t\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\n\t\t\tvec4 plane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t\n\t#endif\n#endif\n",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n",color_pars_vertex:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",common:"#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\n",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n",defaultnormal_vertex:"vec3 transformedNormal = normalMatrix * objectNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n",encodings_fragment:"  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n",envmap_fragment:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n",envmap_pars_fragment:"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n",envmap_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n",fog_vertex:"\n#ifdef USE_FOG\nfogDepth = -mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n  varying float fogDepth;\n#endif\n",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif\n",gradientmap_pars_fragment:"#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif\n",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n",
lights_pars:"uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltcMat;\tuniform sampler2D ltcMag;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tfloat norm = texture2D( ltcMag, uv ).a;\n\t\tvec4 t = texture2D( ltcMat, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3(   1,   0, t.y ),\n\t\t\tvec3(   0, t.z,   0 ),\n\t\t\tvec3( t.w,   0, t.x )\n\t\t);\n\t\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",lights_template:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\t#ifndef STANDARD\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n\t#else\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\n\t#endif\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\tgl_Position.z *= gl_Position.w;\n\t#endif\n#endif\n",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n",map_particle_fragment:"#ifdef USE_MAP\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",map_particle_pars_fragment:"#ifdef USE_MAP\n\tuniform mat3 uvTransform;\n\tuniform sampler2D map;\n#endif\n",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif\n",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n",normal_fragment:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",project_vertex:"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n",dithering_fragment:"#if defined( DITHERING )\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif\n",dithering_pars_fragment:"#if defined( DITHERING )\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif\n",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif\n",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n",
shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif\n",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",tonemapping_pars_fragment:"#ifndef saturate\n\t#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",uv_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\n",uv_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n#endif\n",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n",cube_vert:"varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}\n",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}\n",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}\n",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n",equirect_vert:"varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}\n",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}\n",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",meshphysical_frag:"#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshphysical_vert:"#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}\n",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}\n",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <fog_fragment>\n}\n",shadow_vert:"#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n"},Cs={basic:{uniforms:As.merge([Ss.common,Ss.specularmap,Ss.envmap,Ss.aomap,Ss.lightmap,Ss.fog]),vertexShader:Rs.meshbasic_vert,fragmentShader:Rs.meshbasic_frag},lambert:{uniforms:As.merge([Ss.common,Ss.specularmap,Ss.envmap,Ss.aomap,Ss.lightmap,Ss.emissivemap,Ss.fog,Ss.lights,{emissive:{value:new q(0)}}]),vertexShader:Rs.meshlambert_vert,fragmentShader:Rs.meshlambert_frag},phong:{uniforms:As.merge([Ss.common,Ss.specularmap,Ss.envmap,Ss.aomap,Ss.lightmap,Ss.emissivemap,Ss.bumpmap,Ss.normalmap,Ss.displacementmap,Ss.gradientmap,Ss.fog,Ss.lights,{emissive:{value:new q(0)},specular:{value:new q(1118481)},shininess:{value:30}}]),vertexShader:Rs.meshphong_vert,fragmentShader:Rs.meshphong_frag},standard:{uniforms:As.merge([Ss.common,Ss.envmap,Ss.aomap,Ss.lightmap,Ss.emissivemap,Ss.bumpmap,Ss.normalmap,Ss.displacementmap,Ss.roughnessmap,Ss.metalnessmap,Ss.fog,Ss.lights,{emissive:{value:new q(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:Rs.meshphysical_vert,fragmentShader:Rs.meshphysical_frag},points:{uniforms:As.merge([Ss.points,Ss.fog]),vertexShader:Rs.points_vert,fragmentShader:Rs.points_frag},dashed:{uniforms:As.merge([Ss.common,Ss.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Rs.linedashed_vert,fragmentShader:Rs.linedashed_frag},depth:{uniforms:As.merge([Ss.common,Ss.displacementmap]),vertexShader:Rs.depth_vert,fragmentShader:Rs.depth_frag},normal:{uniforms:As.merge([Ss.common,Ss.bumpmap,Ss.normalmap,Ss.displacementmap,{opacity:{value:1}}]),vertexShader:Rs.normal_vert,fragmentShader:Rs.normal_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Rs.cube_vert,fragmentShader:Rs.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Rs.equirect_vert,fragmentShader:Rs.equirect_frag},distanceRGBA:{uniforms:As.merge([Ss.common,Ss.displacementmap,{referencePosition:{value:new a},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Rs.distanceRGBA_vert,fragmentShader:Rs.distanceRGBA_frag},shadow:{uniforms:As.merge([Ss.lights,Ss.fog,{color:{value:new q(0)},opacity:{value:1}}]),vertexShader:Rs.shadow_vert,fragmentShader:Rs.shadow_frag}};Cs.physical={uniforms:As.merge([Cs.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:Rs.meshphysical_vert,fragmentShader:Rs.meshphysical_frag},Object.assign(Y.prototype,{set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new i;return function(e,i){var r=t.copy(i).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(t){var e=t||new i;return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){var e=t||new i;return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y},getParameter:function(t,e){return(e||new i).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)},clampPoint:function(t,e){return(e||new i).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new i;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){
return t.min.equals(this.min)&&t.max.equals(this.max)}}),Z.prototype=Object.create(s.prototype),Z.prototype.constructor=Z;var Ps=0;Object.assign(Q.prototype,e.prototype,{isMaterial:!0,onBeforeCompile:function(){},setValues:function(t){if(void 0!==t)for(var e in t){var i=t[e];if(void 0!==i)if("shading"!==e){var r=this[e];void 0!==r?r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[e]="overdraw"===e?Number(i):i:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}else console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===i;else console.warn("THREE.Material: '"+e+"' parameter is undefined.")}},toJSON:function(t){function e(t){var e=[];for(var i in t){var r=t[i];delete r.metadata,e.push(r)}return e}var i=void 0===t||"string"==typeof t;i&&(t={textures:{},images:{}});var r={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),this.color&&this.color.isColor&&(r.color=this.color.getHex()),void 0!==this.roughness&&(r.roughness=this.roughness),void 0!==this.metalness&&(r.metalness=this.metalness),this.emissive&&this.emissive.isColor&&(r.emissive=this.emissive.getHex()),1!==this.emissiveIntensity&&(r.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(r.specular=this.specular.getHex()),void 0!==this.shininess&&(r.shininess=this.shininess),void 0!==this.clearCoat&&(r.clearCoat=this.clearCoat),void 0!==this.clearCoatRoughness&&(r.clearCoatRoughness=this.clearCoatRoughness),this.map&&this.map.isTexture&&(r.map=this.map.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(r.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(r.lightMap=this.lightMap.toJSON(t).uuid),this.bumpMap&&this.bumpMap.isTexture&&(r.bumpMap=this.bumpMap.toJSON(t).uuid,r.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(r.normalMap=this.normalMap.toJSON(t).uuid,r.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(r.displacementMap=this.displacementMap.toJSON(t).uuid,r.displacementScale=this.displacementScale,r.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(r.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(r.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(r.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(r.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(r.envMap=this.envMap.toJSON(t).uuid,r.reflectivity=this.reflectivity),this.gradientMap&&this.gradientMap.isTexture&&(r.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(r.size=this.size),void 0!==this.sizeAttenuation&&(r.sizeAttenuation=this.sizeAttenuation),this.blending!==Aa&&(r.blending=this.blending),!0===this.flatShading&&(r.flatShading=this.flatShading),this.side!==ba&&(r.side=this.side),this.vertexColors!==Ea&&(r.vertexColors=this.vertexColors),this.opacity<1&&(r.opacity=this.opacity),!0===this.transparent&&(r.transparent=this.transparent),r.depthFunc=this.depthFunc,r.depthTest=this.depthTest,r.depthWrite=this.depthWrite,0!==this.rotation&&(r.rotation=this.rotation),1!==this.linewidth&&(r.linewidth=this.linewidth),void 0!==this.dashSize&&(r.dashSize=this.dashSize),void 0!==this.gapSize&&(r.gapSize=this.gapSize),void 0!==this.scale&&(r.scale=this.scale),!0===this.dithering&&(r.dithering=!0),this.alphaTest>0&&(r.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(r.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(r.wireframe=this.wireframe),this.wireframeLinewidth>1&&(r.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(r.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(r.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(r.morphTargets=!0),!0===this.skinning&&(r.skinning=!0),!1===this.visible&&(r.visible=!1),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),i){var n=e(t.textures),a=e(t.images);n.length>0&&(r.textures=n),a.length>0&&(r.images=a)}return r},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.lights=t.lights,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.overdraw=t.overdraw,this.visible=t.visible,this.userData=JSON.parse(JSON.stringify(t.userData)),this.clipShadows=t.clipShadows,this.clipIntersection=t.clipIntersection;var e=t.clippingPlanes,i=null;if(null!==e){var r=e.length;i=new Array(r);for(var n=0;n!==r;++n)i[n]=e[n].clone()}return this.clippingPlanes=i,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),$.prototype=Object.create(Q.prototype),$.prototype.constructor=$,$.prototype.isMeshDepthMaterial=!0,$.prototype.copy=function(t){return Q.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this},tt.prototype=Object.create(Q.prototype),tt.prototype.constructor=tt,tt.prototype.isMeshDistanceMaterial=!0,tt.prototype.copy=function(t){return Q.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this},Object.assign(et.prototype,{isBox3:!0,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromArray:function(t){for(var e=1/0,i=1/0,r=1/0,n=-1/0,a=-1/0,o=-1/0,s=0,c=t.length;s<c;s+=3){var h=t[s],l=t[s+1],u=t[s+2];h<e&&(e=h),l<i&&(i=l),u<r&&(r=u),h>n&&(n=h),l>a&&(a=l),u>o&&(o=u)}return this.min.set(e,i,r),this.max.set(n,a,o),this},setFromBufferAttribute:function(t){for(var e=1/0,i=1/0,r=1/0,n=-1/0,a=-1/0,o=-1/0,s=0,c=t.count;s<c;s++){var h=t.getX(s),l=t.getY(s),u=t.getZ(s);h<e&&(e=h),l<i&&(i=l),u<r&&(r=u),h>n&&(n=h),l>a&&(a=l),u>o&&(o=u)}return this.min.set(e,i,r),this.max.set(n,a,o),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new a;return function(e,i){var r=t.copy(i).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this}}(),setFromObject:function(t){return this.makeEmpty(),this.expandByObject(t)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(t){var e=t||new a;return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){var e=t||new a;return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},expandByObject:function(){function t(t){var a=t.geometry;if(void 0!==a)if(a.isGeometry){var o=a.vertices;for(i=0,r=o.length;i<r;i++)n.copy(o[i]),n.applyMatrix4(t.matrixWorld),e.expandByPoint(n)}else if(a.isBufferGeometry){var s=a.attributes.position;if(void 0!==s)for(i=0,r=s.count;i<r;i++)n.fromBufferAttribute(s,i).applyMatrix4(t.matrixWorld),e.expandByPoint(n)}}var e,i,r,n=new a;return function(i){return e=this,i.updateMatrixWorld(!0),i.traverse(t),this}}(),containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return(e||new a).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},intersectsSphere:function(){var t=new a;return function(e){return this.clampPoint(e.center,t),t.distanceToSquared(e.center)<=e.radius*e.radius}}(),intersectsPlane:function(t){var e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=t.constant&&i>=t.constant},clampPoint:function(t,e){return(e||new a).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new a;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),getBoundingSphere:function(){var t=new a;return function(e){var i=e||new it;return this.getCenter(i.center),i.radius=.5*this.getSize(t).length(),i}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(){var t=[new a,new a,new a,new a,new a,new a,new a,new a];return function(e){return this.isEmpty()?this:(t[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),t[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),t[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),t[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),t[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),t[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),t[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),t[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(t),this)}}(),translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}),Object.assign(it.prototype,{set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(){var t=new et;return function(e,i){var r=this.center;void 0!==i?r.copy(i):t.setFromPoints(e).getCenter(r);for(var n=0,a=0,o=e.length;a<o;a++)n=Math.max(n,r.distanceToSquared(e[a]));return this.radius=Math.sqrt(n),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return this.radius<=0},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},intersectsBox:function(t){return t.intersectsSphere(this)},intersectsPlane:function(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius},clampPoint:function(t,e){var i=this.center.distanceToSquared(t),r=e||new a;return r.copy(t),i>this.radius*this.radius&&(r.sub(this.center).normalize(),r.multiplyScalar(this.radius).add(this.center)),r},getBoundingBox:function(t){var e=t||new et;return e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius}}),Object.assign(rt.prototype,{set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,i,r){return this.normal.set(t,e,i),this.constant=r,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(){var t=new a,e=new a;return function(i,r,n){var a=t.subVectors(n,r).cross(e.subVectors(i,r)).normalize();return this.setFromNormalAndCoplanarPoint(a,i),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return(e||new a).copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)},intersectLine:function(){var t=new a;return function(e,i){var r=i||new a,n=e.delta(t),o=this.normal.dot(n);if(0!==o){var s=-(e.start.dot(this.normal)+this.constant)/o;if(!(s<0||s>1))return r.copy(n).multiplyScalar(s).add(e.start)}else if(0===this.distanceToPoint(e.start))return r.copy(e.start)}}(),intersectsLine:function(t){var e=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return e<0&&i>0||i<0&&e>0},intersectsBox:function(t){return t.intersectsPlane(this)},intersectsSphere:function(t){return t.intersectsPlane(this)},coplanarPoint:function(t){return(t||new a).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var t=new a,e=new o;return function(i,r){var n=r||e.getNormalMatrix(i),a=this.coplanarPoint(t).applyMatrix4(i),o=this.normal.applyMatrix3(n).normalize();return this.constant=-a.dot(o),this}}(),translate:function(t){return this.constant-=t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant}}),Object.assign(nt.prototype,{set:function(t,e,i,r,n,a){var o=this.planes;return o[0].copy(t),o[1].copy(e),o[2].copy(i),o[3].copy(r),o[4].copy(n),o[5].copy(a),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){for(var e=this.planes,i=0;i<6;i++)e[i].copy(t.planes[i]);return this},setFromMatrix:function(t){var e=this.planes,i=t.elements,r=i[0],n=i[1],a=i[2],o=i[3],s=i[4],c=i[5],h=i[6],l=i[7],u=i[8],p=i[9],d=i[10],f=i[11],m=i[12],g=i[13],v=i[14],y=i[15];return e[0].setComponents(o-r,l-s,f-u,y-m).normalize(),e[1].setComponents(o+r,l+s,f+u,y+m).normalize(),e[2].setComponents(o+n,l+c,f+p,y+g).normalize(),e[3].setComponents(o-n,l-c,f-p,y-g).normalize(),e[4].setComponents(o-a,l-h,f-d,y-v).normalize(),e[5].setComponents(o+a,l+h,f+d,y+v).normalize(),this},intersectsObject:function(){var t=new it;return function(e){var i=e.geometry;return null===i.boundingSphere&&i.computeBoundingSphere(),t.copy(i.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(t)}}(),intersectsSprite:function(){var t=new it;return function(e){return t.center.set(0,0,0),t.radius=.7071067811865476,t.applyMatrix4(e.matrixWorld),this.intersectsSphere(t)}}(),intersectsSphere:function(t){for(var e=this.planes,i=t.center,r=-t.radius,n=0;n<6;n++){if(e[n].distanceToPoint(i)<r)return!1}return!0},intersectsBox:function(){var t=new a,e=new a;return function(i){for(var r=this.planes,n=0;n<6;n++){var a=r[n];t.x=a.normal.x>0?i.min.x:i.max.x,e.x=a.normal.x>0?i.max.x:i.min.x,t.y=a.normal.y>0?i.min.y:i.max.y,e.y=a.normal.y>0?i.max.y:i.min.y,t.z=a.normal.z>0?i.min.z:i.max.z,e.z=a.normal.z>0?i.max.z:i.min.z;var o=a.distanceToPoint(t),s=a.distanceToPoint(e);if(o<0&&s<0)return!1}return!0}}(),containsPoint:function(t){for(var e=this.planes,i=0;i<6;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0}}),st.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],st.DefaultOrder="XYZ",Object.defineProperties(st.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this.onChangeCallback()}},order:{get:function(){return this._order},set:function(t){this._order=t,this.onChangeCallback()}}}),Object.assign(st.prototype,{isEuler:!0,set:function(t,e,i,r){return this._x=t,this._y=e,this._z=i,this._order=r||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this.onChangeCallback(),this},setFromRotationMatrix:function(t,e,i){var r=gs.clamp,n=t.elements,a=n[0],o=n[4],s=n[8],c=n[1],h=n[5],l=n[9],u=n[2],p=n[6],d=n[10];return e=e||this._order,"XYZ"===e?(this._y=Math.asin(r(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(-l,d),this._z=Math.atan2(-o,a)):(this._x=Math.atan2(p,h),this._z=0)):"YXZ"===e?(this._x=Math.asin(-r(l,-1,1)),Math.abs(l)<.99999?(this._y=Math.atan2(s,d),this._z=Math.atan2(c,h)):(this._y=Math.atan2(-u,a),this._z=0)):"ZXY"===e?(this._x=Math.asin(r(p,-1,1)),Math.abs(p)<.99999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(c,a))):"ZYX"===e?(this._y=Math.asin(-r(u,-1,1)),Math.abs(u)<.99999?(this._x=Math.atan2(p,d),this._z=Math.atan2(c,a)):(this._x=0,this._z=Math.atan2(-o,h))):"YZX"===e?(this._z=Math.asin(r(c,-1,1)),Math.abs(c)<.99999?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-u,a)):(this._x=0,this._y=Math.atan2(s,d))):"XZY"===e?(this._z=Math.asin(-r(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(p,h),this._y=Math.atan2(s,a)):(this._x=Math.atan2(-l,d),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+e),this._order=e,!1!==i&&this.onChangeCallback(),this},setFromQuaternion:function(){var t=new r;return function(e,i,r){return t.makeRotationFromQuaternion(e),this.setFromRotationMatrix(t,i,r)}}(),setFromVector3:function(t,e){return this.set(t.x,t.y,t.z,e||this._order)},reorder:function(){var t=new n;return function(e){return t.setFromEuler(this),this.setFromQuaternion(t,e)}}(),equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this.onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t},toVector3:function(t){return t?t.set(this._x,this._y,this._z):new a(this._x,this._y,this._z)},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}}),Object.assign(ct.prototype,{set:function(t){this.mask=1<<t|0},enable:function(t){this.mask|=1<<t|0},toggle:function(t){this.mask^=1<<t|0},disable:function(t){this.mask&=~(1<<t|0)},test:function(t){return 0!=(this.mask&t.mask)}});var Ls=0;ht.DefaultUp=new a(0,1,0),ht.DefaultMatrixAutoUpdate=!0,Object.assign(ht.prototype,e.prototype,{isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(t){this.matrix.multiplyMatrices(t,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(){var t=new n;return function(e,i){return t.setFromAxisAngle(e,i),this.quaternion.multiply(t),this}}(),rotateOnWorldAxis:function(){var t=new n;return function(e,i){return t.setFromAxisAngle(e,i),this.quaternion.premultiply(t),this}}(),rotateX:function(){var t=new a(1,0,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateY:function(){var t=new a(0,1,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateZ:function(){var t=new a(0,0,1);return function(e){return this.rotateOnAxis(t,e)}}(),translateOnAxis:function(){var t=new a;return function(e,i){return t.copy(e).applyQuaternion(this.quaternion),this.position.add(t.multiplyScalar(i)),this}}(),translateX:function(){var t=new a(1,0,0);return function(e){return this.translateOnAxis(t,e)}}(),translateY:function(){var t=new a(0,1,0);return function(e){return this.translateOnAxis(t,e)}}(),translateZ:function(){var t=new a(0,0,1);return function(e){return this.translateOnAxis(t,e)}}(),localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var t=new r;return function(e){return e.applyMatrix4(t.getInverse(this.matrixWorld))}}(),lookAt:function(){var t=new r,e=new a;return function(i,r,n){i.isVector3?e.copy(i):e.set(i,r,n),this.isCamera?t.lookAt(this.position,e,this.up):t.lookAt(e,this.position,this.up),this.quaternion.setFromRotationMatrix(t)}}(),add:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,t.dispatchEvent({type:"added"}),this.children.push(t)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}var i=this.children.indexOf(t);return-1!==i&&(t.parent=null,t.dispatchEvent({type:"removed"}),this.children.splice(i,1)),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(var i=0,r=this.children.length;i<r;i++){var n=this.children[i],a=n.getObjectByProperty(t,e);if(void 0!==a)return a}},getWorldPosition:function(t){var e=t||new a;return this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var t=new a,e=new a;return function(i){var r=i||new n;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,r,e),r}}(),getWorldRotation:function(){var t=new n;return function(e){var i=e||new st;return this.getWorldQuaternion(t),i.setFromQuaternion(t,this.rotation.order,!1)}}(),getWorldScale:function(){var t=new a,e=new n;return function(i){var r=i||new a;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,e,r),r}}(),getWorldDirection:function(){var t=new n;return function(e){var i=e||new a;return this.getWorldQuaternion(t),i.set(0,0,1).applyQuaternion(t)}}(),raycast:function(){},traverse:function(t){t(this);for(var e=this.children,i=0,r=e.length;i<r;i++)e[i].traverse(t)},traverseVisible:function(t){if(!1!==this.visible){t(this);for(var e=this.children,i=0,r=e.length;i<r;i++)e[i].traverseVisible(t)}},traverseAncestors:function(t){var e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var e=this.children,i=0,r=e.length;i<r;i++)e[i].updateMatrixWorld(t)},toJSON:function(t){function e(e,i){return void 0===e[i.uuid]&&(e[i.uuid]=i.toJSON(t)),i.uuid}function i(t){var e=[];for(var i in t){var r=t[i];delete r.metadata,e.push(r)}return e}var r=void 0===t||"string"==typeof t,n={};r&&(t={geometries:{},materials:{},textures:{},images:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var a={};if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),!0===this.castShadow&&(a.castShadow=!0),!0===this.receiveShadow&&(a.receiveShadow=!0),!1===this.visible&&(a.visible=!1),"{}"!==JSON.stringify(this.userData)&&(a.userData=this.userData),a.matrix=this.matrix.toArray(),void 0!==this.geometry&&(a.geometry=e(t.geometries,this.geometry)),void 0!==this.material)if(Array.isArray(this.material)){for(var o=[],s=0,c=this.material.length;s<c;s++)o.push(e(t.materials,this.material[s]));a.material=o}else a.material=e(t.materials,this.material);if(this.children.length>0){a.children=[];for(var s=0;s<this.children.length;s++)a.children.push(this.children[s].toJSON(t).object)}if(r){var h=i(t.geometries),l=i(t.materials),u=i(t.textures),p=i(t.images);h.length>0&&(n.geometries=h),l.length>0&&(n.materials=l),u.length>0&&(n.textures=u),p.length>0&&(n.images=p)}return n.object=a,n},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e){if(void 0===e&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(var i=0;i<t.children.length;i++){var r=t.children[i];this.add(r.clone())}return this}}),lt.prototype=Object.assign(Object.create(ht.prototype),{constructor:lt,isCamera:!0,copy:function(t,e){return ht.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this},getWorldDirection:function(){var t=new n;return function(e){var i=e||new a;return this.getWorldQuaternion(t),i.set(0,0,-1).applyQuaternion(t)}}(),updateMatrixWorld:function(t){ht.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),ut.prototype=Object.assign(Object.create(lt.prototype),{constructor:ut,isOrthographicCamera:!0,copy:function(t,e){return lt.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this},setViewOffset:function(t,e,i,r,n,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=r,this.view.width=n,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2,n=i-t,a=i+t,o=r+e,s=r-e;if(null!==this.view&&this.view.enabled){var c=this.zoom/(this.view.width/this.view.fullWidth),h=this.zoom/(this.view.height/this.view.fullHeight),l=(this.right-this.left)/this.view.width,u=(this.top-this.bottom)/this.view.height;n+=l*(this.view.offsetX/c),a=n+l*(this.view.width/c),o-=u*(this.view.offsetY/h),s=o-u*(this.view.height/h)}this.projectionMatrix.makeOrthographic(n,a,o,s,this.near,this.far)},toJSON:function(t){var e=ht.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}),Object.assign(pt.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(var e=0,i=t.vertexNormals.length;e<i;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(var e=0,i=t.vertexColors.length;e<i;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}});var Is=0;Object.assign(dt.prototype,e.prototype,{isGeometry:!0,applyMatrix:function(t){for(var e=(new o).getNormalMatrix(t),i=0,r=this.vertices.length;i<r;i++){this.vertices[i].applyMatrix4(t)}for(var i=0,r=this.faces.length;i<r;i++){var n=this.faces[i];n.normal.applyMatrix3(e).normalize();for(var a=0,s=n.vertexNormals.length;a<s;a++)n.vertexNormals[a].applyMatrix3(e).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){var t=new r;return function(e){return t.makeRotationX(e),this.applyMatrix(t),this}}(),rotateY:function(){var t=new r;return function(e){return t.makeRotationY(e),this.applyMatrix(t),this}}(),rotateZ:function(){var t=new r;return function(e){return t.makeRotationZ(e),this.applyMatrix(t),this}}(),translate:function(){var t=new r;return function(e,i,r){return t.makeTranslation(e,i,r),this.applyMatrix(t),this}}(),scale:function(){var t=new r;return function(e,i,r){return t.makeScale(e,i,r),this.applyMatrix(t),this}}(),lookAt:function(){var t=new ht;return function(e){t.lookAt(e),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),fromBufferGeometry:function(t){function e(t,e,i,n){var a=void 0!==c?[p[t].clone(),p[e].clone(),p[i].clone()]:[],o=void 0!==h?[r.colors[t].clone(),r.colors[e].clone(),r.colors[i].clone()]:[],s=new pt(t,e,i,a,o,n);r.faces.push(s),void 0!==l&&r.faceVertexUvs[0].push([d[t].clone(),d[e].clone(),d[i].clone()]),void 0!==u&&r.faceVertexUvs[1].push([f[t].clone(),f[e].clone(),f[i].clone()])}var r=this,n=null!==t.index?t.index.array:void 0,o=t.attributes,s=o.position.array,c=void 0!==o.normal?o.normal.array:void 0,h=void 0!==o.color?o.color.array:void 0,l=void 0!==o.uv?o.uv.array:void 0,u=void 0!==o.uv2?o.uv2.array:void 0;void 0!==u&&(this.faceVertexUvs[1]=[]);for(var p=[],d=[],f=[],m=0,g=0;m<s.length;m+=3,g+=2)r.vertices.push(new a(s[m],s[m+1],s[m+2])),void 0!==c&&p.push(new a(c[m],c[m+1],c[m+2])),void 0!==h&&r.colors.push(new q(h[m],h[m+1],h[m+2])),void 0!==l&&d.push(new i(l[g],l[g+1])),void 0!==u&&f.push(new i(u[g],u[g+1]));var v=t.groups;if(v.length>0)for(var m=0;m<v.length;m++)for(var y=v[m],x=y.start,b=y.count,g=x,_=x+b;g<_;g+=3)void 0!==n?e(n[g],n[g+1],n[g+2],y.materialIndex):e(g,g+1,g+2,y.materialIndex);else if(void 0!==n)for(var m=0;m<n.length;m+=3)e(n[m],n[m+1],n[m+2]);else for(var m=0;m<s.length/3;m+=3)e(m,m+1,m+2);return this.computeFaceNormals(),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var t=this.boundingBox.getCenter().negate();return this.translate(t.x,t.y,t.z),t},normalize:function(){this.computeBoundingSphere();var t=this.boundingSphere.center,e=this.boundingSphere.radius,i=0===e?1:1/e,n=new r;return n.set(i,0,0,-i*t.x,0,i,0,-i*t.y,0,0,i,-i*t.z,0,0,0,1),this.applyMatrix(n),this},computeFaceNormals:function(){for(var t=new a,e=new a,i=0,r=this.faces.length;i<r;i++){
var n=this.faces[i],o=this.vertices[n.a],s=this.vertices[n.b],c=this.vertices[n.c];t.subVectors(c,s),e.subVectors(o,s),t.cross(e),t.normalize(),n.normal.copy(t)}},computeVertexNormals:function(t){void 0===t&&(t=!0);var e,i,r,n,o,s;for(s=new Array(this.vertices.length),e=0,i=this.vertices.length;e<i;e++)s[e]=new a;if(t){var c,h,l,u=new a,p=new a;for(r=0,n=this.faces.length;r<n;r++)o=this.faces[r],c=this.vertices[o.a],h=this.vertices[o.b],l=this.vertices[o.c],u.subVectors(l,h),p.subVectors(c,h),u.cross(p),s[o.a].add(u),s[o.b].add(u),s[o.c].add(u)}else for(this.computeFaceNormals(),r=0,n=this.faces.length;r<n;r++)o=this.faces[r],s[o.a].add(o.normal),s[o.b].add(o.normal),s[o.c].add(o.normal);for(e=0,i=this.vertices.length;e<i;e++)s[e].normalize();for(r=0,n=this.faces.length;r<n;r++){o=this.faces[r];var d=o.vertexNormals;3===d.length?(d[0].copy(s[o.a]),d[1].copy(s[o.b]),d[2].copy(s[o.c])):(d[0]=s[o.a].clone(),d[1]=s[o.b].clone(),d[2]=s[o.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var t,e,i;for(this.computeFaceNormals(),t=0,e=this.faces.length;t<e;t++){i=this.faces[t];var r=i.vertexNormals;3===r.length?(r[0].copy(i.normal),r[1].copy(i.normal),r[2].copy(i.normal)):(r[0]=i.normal.clone(),r[1]=i.normal.clone(),r[2]=i.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var t,e,i,r,n;for(i=0,r=this.faces.length;i<r;i++)for(n=this.faces[i],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),t=0,e=n.vertexNormals.length;t<e;t++)n.__originalVertexNormals[t]?n.__originalVertexNormals[t].copy(n.vertexNormals[t]):n.__originalVertexNormals[t]=n.vertexNormals[t].clone();var o=new dt;for(o.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];var s,c,h=this.morphNormals[t].faceNormals,l=this.morphNormals[t].vertexNormals;for(i=0,r=this.faces.length;i<r;i++)s=new a,c={a:new a,b:new a,c:new a},h.push(s),l.push(c)}var u=this.morphNormals[t];o.vertices=this.morphTargets[t].vertices,o.computeFaceNormals(),o.computeVertexNormals();var s,c;for(i=0,r=this.faces.length;i<r;i++)n=this.faces[i],s=u.faceNormals[i],c=u.vertexNormals[i],s.copy(n.normal),c.a.copy(n.vertexNormals[0]),c.b.copy(n.vertexNormals[1]),c.c.copy(n.vertexNormals[2])}for(i=0,r=this.faces.length;i<r;i++)n=this.faces[i],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeLineDistances:function(){for(var t=0,e=this.vertices,i=0,r=e.length;i<r;i++)i>0&&(t+=e[i].distanceTo(e[i-1])),this.lineDistances[i]=t},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new et),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new it),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,i){if(!t||!t.isGeometry)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t);var r,n=this.vertices.length,a=this.vertices,s=t.vertices,c=this.faces,h=t.faces,l=this.faceVertexUvs[0],u=t.faceVertexUvs[0],p=this.colors,d=t.colors;void 0===i&&(i=0),void 0!==e&&(r=(new o).getNormalMatrix(e));for(var f=0,m=s.length;f<m;f++){var g=s[f],v=g.clone();void 0!==e&&v.applyMatrix4(e),a.push(v)}for(var f=0,m=d.length;f<m;f++)p.push(d[f].clone());for(f=0,m=h.length;f<m;f++){var y,x,b,_=h[f],w=_.vertexNormals,E=_.vertexColors;y=new pt(_.a+n,_.b+n,_.c+n),y.normal.copy(_.normal),void 0!==r&&y.normal.applyMatrix3(r).normalize();for(var M=0,T=w.length;M<T;M++)x=w[M].clone(),void 0!==r&&x.applyMatrix3(r).normalize(),y.vertexNormals.push(x);y.color.copy(_.color);for(var M=0,T=E.length;M<T;M++)b=E[M],y.vertexColors.push(b.clone());y.materialIndex=_.materialIndex+i,c.push(y)}for(f=0,m=u.length;f<m;f++){var S=u[f],A=[];if(void 0!==S){for(var M=0,T=S.length;M<T;M++)A.push(S[M].clone());l.push(A)}}},mergeMesh:function(t){if(!t||!t.isMesh)return void console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t);t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)},mergeVertices:function(){var t,e,i,r,n,a,o,s,c={},h=[],l=[],u=Math.pow(10,4);for(i=0,r=this.vertices.length;i<r;i++)t=this.vertices[i],e=Math.round(t.x*u)+"_"+Math.round(t.y*u)+"_"+Math.round(t.z*u),void 0===c[e]?(c[e]=i,h.push(this.vertices[i]),l[i]=h.length-1):l[i]=l[c[e]];var p=[];for(i=0,r=this.faces.length;i<r;i++){n=this.faces[i],n.a=l[n.a],n.b=l[n.b],n.c=l[n.c],a=[n.a,n.b,n.c];for(var d=0;d<3;d++)if(a[d]===a[(d+1)%3]){p.push(i);break}}for(i=p.length-1;i>=0;i--){var f=p[i];for(this.faces.splice(f,1),o=0,s=this.faceVertexUvs.length;o<s;o++)this.faceVertexUvs[o].splice(f,1)}var m=this.vertices.length-h.length;return this.vertices=h,m},setFromPoints:function(t){this.vertices=[];for(var e=0,i=t.length;e<i;e++){var r=t[e];this.vertices.push(new a(r.x,r.y,r.z||0))}return this},sortFacesByMaterialIndex:function(){function t(t,e){return t.materialIndex-e.materialIndex}for(var e=this.faces,i=e.length,r=0;r<i;r++)e[r]._id=r;e.sort(t);var n,a,o=this.faceVertexUvs[0],s=this.faceVertexUvs[1];o&&o.length===i&&(n=[]),s&&s.length===i&&(a=[]);for(var r=0;r<i;r++){var c=e[r]._id;n&&n.push(o[c]),a&&a.push(s[c])}n&&(this.faceVertexUvs[0]=n),a&&(this.faceVertexUvs[1]=a)},toJSON:function(){function t(t,e,i){return i?t|1<<e:t&~(1<<e)}function e(t){var e=t.x.toString()+t.y.toString()+t.z.toString();return void 0!==p[e]?p[e]:(p[e]=u.length/3,u.push(t.x,t.y,t.z),p[e])}function i(t){var e=t.r.toString()+t.g.toString()+t.b.toString();return void 0!==f[e]?f[e]:(f[e]=d.length,d.push(t.getHex()),f[e])}function r(t){var e=t.x.toString()+t.y.toString();return void 0!==g[e]?g[e]:(g[e]=m.length/2,m.push(t.x,t.y),g[e])}var n={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),void 0!==this.parameters){var a=this.parameters;for(var o in a)void 0!==a[o]&&(n[o]=a[o]);return n}for(var s=[],c=0;c<this.vertices.length;c++){var h=this.vertices[c];s.push(h.x,h.y,h.z)}for(var l=[],u=[],p={},d=[],f={},m=[],g={},c=0;c<this.faces.length;c++){var v=this.faces[c],y=void 0!==this.faceVertexUvs[0][c],x=v.normal.length()>0,b=v.vertexNormals.length>0,_=1!==v.color.r||1!==v.color.g||1!==v.color.b,w=v.vertexColors.length>0,E=0;if(E=t(E,0,0),E=t(E,1,!0),E=t(E,2,!1),E=t(E,3,y),E=t(E,4,x),E=t(E,5,b),E=t(E,6,_),E=t(E,7,w),l.push(E),l.push(v.a,v.b,v.c),l.push(v.materialIndex),y){var M=this.faceVertexUvs[0][c];l.push(r(M[0]),r(M[1]),r(M[2]))}if(x&&l.push(e(v.normal)),b){var T=v.vertexNormals;l.push(e(T[0]),e(T[1]),e(T[2]))}if(_&&l.push(i(v.color)),w){var S=v.vertexColors;l.push(i(S[0]),i(S[1]),i(S[2]))}}return n.data={},n.data.vertices=s,n.data.normals=u,d.length>0&&(n.data.colors=d),m.length>0&&(n.data.uvs=[m]),n.data.faces=l,n},clone:function(){return(new dt).copy(this)},copy:function(t){var e,i,r,n,a,o;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var s=t.vertices;for(e=0,i=s.length;e<i;e++)this.vertices.push(s[e].clone());var c=t.colors;for(e=0,i=c.length;e<i;e++)this.colors.push(c[e].clone());var h=t.faces;for(e=0,i=h.length;e<i;e++)this.faces.push(h[e].clone());for(e=0,i=t.faceVertexUvs.length;e<i;e++){var l=t.faceVertexUvs[e];for(void 0===this.faceVertexUvs[e]&&(this.faceVertexUvs[e]=[]),r=0,n=l.length;r<n;r++){var u=l[r],p=[];for(a=0,o=u.length;a<o;a++){var d=u[a];p.push(d.clone())}this.faceVertexUvs[e].push(p)}}var f=t.morphTargets;for(e=0,i=f.length;e<i;e++){var m={};if(m.name=f[e].name,void 0!==f[e].vertices)for(m.vertices=[],r=0,n=f[e].vertices.length;r<n;r++)m.vertices.push(f[e].vertices[r].clone());if(void 0!==f[e].normals)for(m.normals=[],r=0,n=f[e].normals.length;r<n;r++)m.normals.push(f[e].normals[r].clone());this.morphTargets.push(m)}var g=t.morphNormals;for(e=0,i=g.length;e<i;e++){var v={};if(void 0!==g[e].vertexNormals)for(v.vertexNormals=[],r=0,n=g[e].vertexNormals.length;r<n;r++){var y=g[e].vertexNormals[r],x={};x.a=y.a.clone(),x.b=y.b.clone(),x.c=y.c.clone(),v.vertexNormals.push(x)}if(void 0!==g[e].faceNormals)for(v.faceNormals=[],r=0,n=g[e].faceNormals.length;r<n;r++)v.faceNormals.push(g[e].faceNormals[r].clone());this.morphNormals.push(v)}var b=t.skinWeights;for(e=0,i=b.length;e<i;e++)this.skinWeights.push(b[e].clone());var _=t.skinIndices;for(e=0,i=_.length;e<i;e++)this.skinIndices.push(_[e].clone());var w=t.lineDistances;for(e=0,i=w.length;e<i;e++)this.lineDistances.push(w[e]);var E=t.boundingBox;null!==E&&(this.boundingBox=E.clone());var M=t.boundingSphere;return null!==M&&(this.boundingSphere=M.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(ft.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(ft.prototype,{isBufferAttribute:!0,setArray:function(t){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==t?t.length/this.itemSize:0,this.array=t},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.dynamic=t.dynamic,this},copyAt:function(t,e,i){t*=this.itemSize,i*=e.itemSize;for(var r=0,n=this.itemSize;r<n;r++)this.array[t+r]=e.array[i+r];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){for(var e=this.array,i=0,r=0,n=t.length;r<n;r++){var a=t[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),a=new q),e[i++]=a.r,e[i++]=a.g,e[i++]=a.b}return this},copyIndicesArray:function(t){for(var e=this.array,i=0,r=0,n=t.length;r<n;r++){var a=t[r];e[i++]=a.a,e[i++]=a.b,e[i++]=a.c}return this},copyVector2sArray:function(t){for(var e=this.array,r=0,n=0,a=t.length;n<a;n++){var o=t[n];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",n),o=new i),e[r++]=o.x,e[r++]=o.y}return this},copyVector3sArray:function(t){for(var e=this.array,i=0,r=0,n=t.length;r<n;r++){var o=t[r];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),o=new a),e[i++]=o.x,e[i++]=o.y,e[i++]=o.z}return this},copyVector4sArray:function(t){for(var e=this.array,i=0,r=0,n=t.length;r<n;r++){var a=t[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),a=new c),e[i++]=a.x,e[i++]=a.y,e[i++]=a.z,e[i++]=a.w}return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this},setXYZ:function(t,e,i,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=r,this},setXYZW:function(t,e,i,r,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=r,this.array[t+3]=n,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)}}),mt.prototype=Object.create(ft.prototype),mt.prototype.constructor=mt,gt.prototype=Object.create(ft.prototype),gt.prototype.constructor=gt,vt.prototype=Object.create(ft.prototype),vt.prototype.constructor=vt,yt.prototype=Object.create(ft.prototype),yt.prototype.constructor=yt,xt.prototype=Object.create(ft.prototype),xt.prototype.constructor=xt,bt.prototype=Object.create(ft.prototype),bt.prototype.constructor=bt,_t.prototype=Object.create(ft.prototype),_t.prototype.constructor=_t,wt.prototype=Object.create(ft.prototype),wt.prototype.constructor=wt,Et.prototype=Object.create(ft.prototype),Et.prototype.constructor=Et,Object.assign(Mt.prototype,{computeGroups:function(t){for(var e,i=[],r=void 0,n=t.faces,a=0;a<n.length;a++){var o=n[a];o.materialIndex!==r&&(r=o.materialIndex,void 0!==e&&(e.count=3*a-e.start,i.push(e)),e={start:3*a,materialIndex:r})}void 0!==e&&(e.count=3*a-e.start,i.push(e)),this.groups=i},fromGeometry:function(t){var e,r=t.faces,n=t.vertices,a=t.faceVertexUvs,o=a[0]&&a[0].length>0,s=a[1]&&a[1].length>0,c=t.morphTargets,h=c.length;if(h>0){e=[];for(var l=0;l<h;l++)e[l]=[];this.morphTargets.position=e}var u,p=t.morphNormals,d=p.length;if(d>0){u=[];for(var l=0;l<d;l++)u[l]=[];this.morphTargets.normal=u}for(var f=t.skinIndices,m=t.skinWeights,g=f.length===n.length,v=m.length===n.length,l=0;l<r.length;l++){var y=r[l];this.vertices.push(n[y.a],n[y.b],n[y.c]);var x=y.vertexNormals;if(3===x.length)this.normals.push(x[0],x[1],x[2]);else{var b=y.normal;this.normals.push(b,b,b)}var _=y.vertexColors;if(3===_.length)this.colors.push(_[0],_[1],_[2]);else{var w=y.color;this.colors.push(w,w,w)}if(!0===o){var E=a[0][l];void 0!==E?this.uvs.push(E[0],E[1],E[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",l),this.uvs.push(new i,new i,new i))}if(!0===s){var E=a[1][l];void 0!==E?this.uvs2.push(E[0],E[1],E[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",l),this.uvs2.push(new i,new i,new i))}for(var M=0;M<h;M++){var T=c[M].vertices;e[M].push(T[y.a],T[y.b],T[y.c])}for(var M=0;M<d;M++){var S=p[M].vertexNormals[l];u[M].push(S.a,S.b,S.c)}g&&this.skinIndices.push(f[y.a],f[y.b],f[y.c]),v&&this.skinWeights.push(m[y.a],m[y.b],m[y.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this}});var ks=1;Object.assign(St.prototype,e.prototype,{isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){Array.isArray(t)?this.index=new(Tt(t)>65535?_t:xt)(t,1):this.index=t},addAttribute:function(t,e){return e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),void this.setIndex(e)):(this.attributes[t]=e,this):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),void this.addAttribute(t,new ft(arguments[1],arguments[2])))},getAttribute:function(t){return this.attributes[t]},removeAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,e,i){this.groups.push({start:t,count:e,materialIndex:void 0!==i?i:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix:function(t){var e=this.attributes.position;void 0!==e&&(t.applyToBufferAttribute(e),e.needsUpdate=!0);var i=this.attributes.normal;if(void 0!==i){(new o).getNormalMatrix(t).applyToBufferAttribute(i),i.needsUpdate=!0}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(){var t=new r;return function(e){return t.makeRotationX(e),this.applyMatrix(t),this}}(),rotateY:function(){var t=new r;return function(e){return t.makeRotationY(e),this.applyMatrix(t),this}}(),rotateZ:function(){var t=new r;return function(e){return t.makeRotationZ(e),this.applyMatrix(t),this}}(),translate:function(){var t=new r;return function(e,i,r){return t.makeTranslation(e,i,r),this.applyMatrix(t),this}}(),scale:function(){var t=new r;return function(e,i,r){return t.makeScale(e,i,r),this.applyMatrix(t),this}}(),lookAt:function(){var t=new ht;return function(e){t.lookAt(e),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),center:function(){this.computeBoundingBox();var t=this.boundingBox.getCenter().negate();return this.translate(t.x,t.y,t.z),t},setFromObject:function(t){var e=t.geometry;if(t.isPoints||t.isLine){var i=new wt(3*e.vertices.length,3),r=new wt(3*e.colors.length,3);if(this.addAttribute("position",i.copyVector3sArray(e.vertices)),this.addAttribute("color",r.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){var n=new wt(e.lineDistances.length,1);this.addAttribute("lineDistance",n.copyArray(e.lineDistances))}null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(t){for(var e=[],i=0,r=t.length;i<r;i++){var n=t[i];e.push(n.x,n.y,n.z||0)}return this.addAttribute("position",new wt(e,3)),this},updateFromObject:function(t){var e=t.geometry;if(t.isMesh){var i=e.__directGeometry;if(!0===e.elementsNeedUpdate&&(i=void 0,e.elementsNeedUpdate=!1),void 0===i)return this.fromGeometry(e);i.verticesNeedUpdate=e.verticesNeedUpdate,i.normalsNeedUpdate=e.normalsNeedUpdate,i.colorsNeedUpdate=e.colorsNeedUpdate,i.uvsNeedUpdate=e.uvsNeedUpdate,i.groupsNeedUpdate=e.groupsNeedUpdate,e.verticesNeedUpdate=!1,e.normalsNeedUpdate=!1,e.colorsNeedUpdate=!1,e.uvsNeedUpdate=!1,e.groupsNeedUpdate=!1,e=i}var r;return!0===e.verticesNeedUpdate&&(r=this.attributes.position,void 0!==r&&(r.copyVector3sArray(e.vertices),r.needsUpdate=!0),e.verticesNeedUpdate=!1),!0===e.normalsNeedUpdate&&(r=this.attributes.normal,void 0!==r&&(r.copyVector3sArray(e.normals),r.needsUpdate=!0),e.normalsNeedUpdate=!1),!0===e.colorsNeedUpdate&&(r=this.attributes.color,void 0!==r&&(r.copyColorsArray(e.colors),r.needsUpdate=!0),e.colorsNeedUpdate=!1),e.uvsNeedUpdate&&(r=this.attributes.uv,void 0!==r&&(r.copyVector2sArray(e.uvs),r.needsUpdate=!0),e.uvsNeedUpdate=!1),e.lineDistancesNeedUpdate&&(r=this.attributes.lineDistance,void 0!==r&&(r.copyArray(e.lineDistances),r.needsUpdate=!0),e.lineDistancesNeedUpdate=!1),e.groupsNeedUpdate&&(e.computeGroups(t.geometry),this.groups=e.groups,e.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=(new Mt).fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){var e=new Float32Array(3*t.vertices.length);if(this.addAttribute("position",new ft(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){var i=new Float32Array(3*t.normals.length);this.addAttribute("normal",new ft(i,3).copyVector3sArray(t.normals))}if(t.colors.length>0){var r=new Float32Array(3*t.colors.length);this.addAttribute("color",new ft(r,3).copyColorsArray(t.colors))}if(t.uvs.length>0){var n=new Float32Array(2*t.uvs.length);this.addAttribute("uv",new ft(n,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){var a=new Float32Array(2*t.uvs2.length);this.addAttribute("uv2",new ft(a,2).copyVector2sArray(t.uvs2))}if(t.indices.length>0){var o=Tt(t.indices)>65535?Uint32Array:Uint16Array,s=new o(3*t.indices.length);this.setIndex(new ft(s,1).copyIndicesArray(t.indices))}this.groups=t.groups;for(var c in t.morphTargets){for(var h=[],l=t.morphTargets[c],u=0,p=l.length;u<p;u++){var d=l[u],f=new wt(3*d.length,3);h.push(f.copyVector3sArray(d))}this.morphAttributes[c]=h}if(t.skinIndices.length>0){var m=new wt(4*t.skinIndices.length,4);this.addAttribute("skinIndex",m.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){var g=new wt(4*t.skinWeights.length,4);this.addAttribute("skinWeight",g.copyVector4sArray(t.skinWeights))}return null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new et);var t=this.attributes.position;void 0!==t?this.boundingBox.setFromBufferAttribute(t):this.boundingBox.makeEmpty(),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var t=new et,e=new a;return function(){null===this.boundingSphere&&(this.boundingSphere=new it);var i=this.attributes.position;if(i){var r=this.boundingSphere.center;t.setFromBufferAttribute(i),t.getCenter(r);for(var n=0,a=0,o=i.count;a<o;a++)e.x=i.getX(a),e.y=i.getY(a),e.z=i.getZ(a),n=Math.max(n,r.distanceToSquared(e));this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var t=this.index,e=this.attributes,i=this.groups;if(e.position){var r=e.position.array;if(void 0===e.normal)this.addAttribute("normal",new ft(new Float32Array(r.length),3));else for(var n=e.normal.array,o=0,s=n.length;o<s;o++)n[o]=0;var c,h,l,u=e.normal.array,p=new a,d=new a,f=new a,m=new a,g=new a;if(t){var v=t.array;0===i.length&&this.addGroup(0,v.length);for(var y=0,x=i.length;y<x;++y)for(var b=i[y],_=b.start,w=b.count,o=_,s=_+w;o<s;o+=3)c=3*v[o+0],h=3*v[o+1],l=3*v[o+2],p.fromArray(r,c),d.fromArray(r,h),f.fromArray(r,l),m.subVectors(f,d),g.subVectors(p,d),m.cross(g),u[c]+=m.x,u[c+1]+=m.y,u[c+2]+=m.z,u[h]+=m.x,u[h+1]+=m.y,u[h+2]+=m.z,u[l]+=m.x,u[l+1]+=m.y,u[l+2]+=m.z}else for(var o=0,s=r.length;o<s;o+=9)p.fromArray(r,o),d.fromArray(r,o+3),f.fromArray(r,o+6),m.subVectors(f,d),g.subVectors(p,d),m.cross(g),u[o]=m.x,u[o+1]=m.y,u[o+2]=m.z,u[o+3]=m.x,u[o+4]=m.y,u[o+5]=m.z,u[o+6]=m.x,u[o+7]=m.y,u[o+8]=m.z;this.normalizeNormals(),e.normal.needsUpdate=!0}},merge:function(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0);var i=this.attributes;for(var r in i)if(void 0!==t.attributes[r])for(var n=i[r],a=n.array,o=t.attributes[r],s=o.array,c=o.itemSize,h=0,l=c*e;h<s.length;h++,l++)a[l]=s[h];return this},normalizeNormals:function(){var t=new a;return function(){for(var e=this.attributes.normal,i=0,r=e.count;i<r;i++)t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.normalize(),e.setXYZ(i,t.x,t.y,t.z)}}(),toNonIndexed:function(){if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var t=new St,e=this.index.array,i=this.attributes;for(var r in i){for(var n=i[r],a=n.array,o=n.itemSize,s=new a.constructor(e.length*o),c=0,h=0,l=0,u=e.length;l<u;l++){c=e[l]*o;for(var p=0;p<o;p++)s[h++]=a[c++]}t.addAttribute(r,new ft(s,o))}return t},toJSON:function(){var t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),void 0!==this.parameters){var e=this.parameters;for(var i in e)void 0!==e[i]&&(t[i]=e[i]);return t}t.data={attributes:{}};var r=this.index;if(null!==r){var n=Array.prototype.slice.call(r.array);t.data.index={type:r.array.constructor.name,array:n}}var a=this.attributes;for(var i in a){var o=a[i],n=Array.prototype.slice.call(o.array);t.data.attributes[i]={itemSize:o.itemSize,type:o.array.constructor.name,array:n,normalized:o.normalized}}var s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));var c=this.boundingSphere;return null!==c&&(t.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),t},clone:function(){return(new St).copy(this)},copy:function(t){var e,i,r;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var n=t.index;null!==n&&this.setIndex(n.clone());var a=t.attributes;for(e in a){var o=a[e];this.addAttribute(e,o.clone())}var s=t.morphAttributes;for(e in s){var c=[],h=s[e];for(i=0,r=h.length;i<r;i++)c.push(h[i].clone());this.morphAttributes[e]=c}var l=t.groups;for(i=0,r=l.length;i<r;i++){var u=l[i];this.addGroup(u.start,u.count,u.materialIndex)}var p=t.boundingBox;null!==p&&(this.boundingBox=p.clone());var d=t.boundingSphere;return null!==d&&(this.boundingSphere=d.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),At.prototype=Object.create(dt.prototype),At.prototype.constructor=At,Rt.prototype=Object.create(St.prototype),Rt.prototype.constructor=Rt,Ct.prototype=Object.create(dt.prototype),Ct.prototype.constructor=Ct,Pt.prototype=Object.create(St.prototype),Pt.prototype.constructor=Pt,Lt.prototype=Object.create(Q.prototype),Lt.prototype.constructor=Lt,Lt.prototype.isMeshBasicMaterial=!0,Lt.prototype.copy=function(t){return Q.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this},It.prototype=Object.create(Q.prototype),It.prototype.constructor=It,It.prototype.isShaderMaterial=!0,It.prototype.copy=function(t){return Q.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=As.clone(t.uniforms),this.defines=t.defines,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=t.extensions,this},It.prototype.toJSON=function(t){var e=Q.prototype.toJSON.call(this,t);return e.uniforms=this.uniforms,e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e},Object.assign(kt.prototype,{set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){return(e||new a).copy(this.direction).multiplyScalar(t).add(this.origin)},lookAt:function(t){return this.direction.copy(t).sub(this.origin).normalize(),this},recast:function(){var t=new a;return function(e){return this.origin.copy(this.at(e,t)),this}}(),closestPointToPoint:function(t,e){var i=e||new a;i.subVectors(t,this.origin);var r=i.dot(this.direction);return r<0?i.copy(this.origin):i.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(t){return Math.sqrt(this.distanceSqToPoint(t))},distanceSqToPoint:function(){var t=new a;return function(e){var i=t.subVectors(e,this.origin).dot(this.direction);return i<0?this.origin.distanceToSquared(e):(t.copy(this.direction).multiplyScalar(i).add(this.origin),t.distanceToSquared(e))}}(),distanceSqToSegment:function(){var t=new a,e=new a,i=new a;return function(r,n,a,o){t.copy(r).add(n).multiplyScalar(.5),e.copy(n).sub(r).normalize(),i.copy(this.origin).sub(t);var s,c,h,l,u=.5*r.distanceTo(n),p=-this.direction.dot(e),d=i.dot(this.direction),f=-i.dot(e),m=i.lengthSq(),g=Math.abs(1-p*p);if(g>0)if(s=p*f-d,c=p*d-f,l=u*g,s>=0)if(c>=-l)if(c<=l){var v=1/g;s*=v,c*=v,h=s*(s+p*c+2*d)+c*(p*s+c+2*f)+m}else c=u,s=Math.max(0,-(p*c+d)),h=-s*s+c*(c+2*f)+m;else c=-u,s=Math.max(0,-(p*c+d)),h=-s*s+c*(c+2*f)+m;else c<=-l?(s=Math.max(0,-(-p*u+d)),c=s>0?-u:Math.min(Math.max(-u,-f),u),h=-s*s+c*(c+2*f)+m):c<=l?(s=0,c=Math.min(Math.max(-u,-f),u),h=c*(c+2*f)+m):(s=Math.max(0,-(p*u+d)),c=s>0?u:Math.min(Math.max(-u,-f),u),h=-s*s+c*(c+2*f)+m);else c=p>0?-u:u,s=Math.max(0,-(p*c+d)),h=-s*s+c*(c+2*f)+m;return a&&a.copy(this.direction).multiplyScalar(s).add(this.origin),o&&o.copy(e).multiplyScalar(c).add(t),h}}(),intersectSphere:function(){var t=new a;return function(e,i){t.subVectors(e.center,this.origin);var r=t.dot(this.direction),n=t.dot(t)-r*r,a=e.radius*e.radius;if(n>a)return null;var o=Math.sqrt(a-n),s=r-o,c=r+o;return s<0&&c<0?null:s<0?this.at(c,i):this.at(s,i)}}(),intersectsSphere:function(t){return this.distanceToPoint(t.center)<=t.radius},distanceToPlane:function(t){var e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;var i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null},intersectPlane:function(t,e){var i=this.distanceToPlane(t);return null===i?null:this.at(i,e)},intersectsPlane:function(t){var e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0},intersectBox:function(t,e){var i,r,n,a,o,s,c=1/this.direction.x,h=1/this.direction.y,l=1/this.direction.z,u=this.origin;return c>=0?(i=(t.min.x-u.x)*c,r=(t.max.x-u.x)*c):(i=(t.max.x-u.x)*c,r=(t.min.x-u.x)*c),h>=0?(n=(t.min.y-u.y)*h,a=(t.max.y-u.y)*h):(n=(t.max.y-u.y)*h,a=(t.min.y-u.y)*h),i>a||n>r?null:((n>i||i!==i)&&(i=n),(a<r||r!==r)&&(r=a),l>=0?(o=(t.min.z-u.z)*l,s=(t.max.z-u.z)*l):(o=(t.max.z-u.z)*l,s=(t.min.z-u.z)*l),i>s||o>r?null:((o>i||i!==i)&&(i=o),(s<r||r!==r)&&(r=s),r<0?null:this.at(i>=0?i:r,e)))},intersectsBox:function(){var t=new a;return function(e){return null!==this.intersectBox(e,t)}}(),intersectTriangle:function(){var t=new a,e=new a,i=new a,r=new a;return function(n,a,o,s,c){e.subVectors(a,n),i.subVectors(o,n),r.crossVectors(e,i);var h,l=this.direction.dot(r);if(l>0){if(s)return null;h=1}else{if(!(l<0))return null;h=-1,l=-l}t.subVectors(this.origin,n);var u=h*this.direction.dot(i.crossVectors(t,i));if(u<0)return null;var p=h*this.direction.dot(e.cross(t));if(p<0)return null;if(u+p>l)return null;var d=-h*t.dot(r);return d<0?null:this.at(d/l,c)}}(),applyMatrix4:function(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}}),Object.assign(Ot.prototype,{set:function(t,e){return this.start.copy(t),this.end.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.start.copy(t.start),this.end.copy(t.end),this},getCenter:function(t){return(t||new a).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(t){return(t||new a).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,e){var i=e||new a;return this.delta(i).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(){var t=new a,e=new a;return function(i,r){t.subVectors(i,this.start),e.subVectors(this.end,this.start);var n=e.dot(e),a=e.dot(t),o=a/n;return r&&(o=gs.clamp(o,0,1)),o}}(),closestPointToPoint:function(t,e,i){var r=this.closestPointToPointParameter(t,e),n=i||new a;return this.delta(n).multiplyScalar(r).add(this.start)},applyMatrix4:function(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this},equals:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)}}),Object.assign(Dt,{normal:function(){var t=new a;return function(e,i,r,n){var o=n||new a;o.subVectors(r,i),t.subVectors(e,i),o.cross(t);var s=o.lengthSq();return s>0?o.multiplyScalar(1/Math.sqrt(s)):o.set(0,0,0)}}(),barycoordFromPoint:function(){var t=new a,e=new a,i=new a;return function(r,n,o,s,c){t.subVectors(s,n),e.subVectors(o,n),i.subVectors(r,n)
;var h=t.dot(t),l=t.dot(e),u=t.dot(i),p=e.dot(e),d=e.dot(i),f=h*p-l*l,m=c||new a;if(0===f)return m.set(-2,-1,-1);var g=1/f,v=(p*u-l*d)*g,y=(h*d-l*u)*g;return m.set(1-v-y,y,v)}}(),containsPoint:function(){var t=new a;return function(e,i,r,n){var a=Dt.barycoordFromPoint(e,i,r,n,t);return a.x>=0&&a.y>=0&&a.x+a.y<=1}}()}),Object.assign(Dt.prototype,{set:function(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this},setFromPointsAndIndices:function(t,e,i,r){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[r]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},area:function(){var t=new a,e=new a;return function(){return t.subVectors(this.c,this.b),e.subVectors(this.a,this.b),.5*t.cross(e).length()}}(),midpoint:function(t){return(t||new a).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(t){return Dt.normal(this.a,this.b,this.c,t)},plane:function(t){return(t||new rt).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(t,e){return Dt.barycoordFromPoint(t,this.a,this.b,this.c,e)},containsPoint:function(t){return Dt.containsPoint(t,this.a,this.b,this.c)},closestPointToPoint:function(){var t=new rt,e=[new Ot,new Ot,new Ot],i=new a,r=new a;return function(n,o){var s=o||new a,c=1/0;if(t.setFromCoplanarPoints(this.a,this.b,this.c),t.projectPoint(n,i),!0===this.containsPoint(i))s.copy(i);else{e[0].set(this.a,this.b),e[1].set(this.b,this.c),e[2].set(this.c,this.a);for(var h=0;h<e.length;h++){e[h].closestPointToPoint(i,!0,r);var l=i.distanceToSquared(r);l<c&&(c=l,s.copy(r))}}return s}}(),equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}),Ut.prototype=Object.assign(Object.create(ht.prototype),{constructor:Ut,isMesh:!0,setDrawMode:function(t){this.drawMode=t},copy:function(t){return ht.prototype.copy.call(this,t),this.drawMode=t.drawMode,void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this},updateMorphTargets:function(){var t,e,i,r=this.geometry;if(r.isBufferGeometry){var n=r.morphAttributes,a=Object.keys(n);if(a.length>0){var o=n[a[0]];if(void 0!==o)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,e=o.length;t<e;t++)i=o[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}}else{var s=r.morphTargets;if(void 0!==s&&s.length>0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,e=s.length;t<e;t++)i=s[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}},raycast:function(){function t(t,e,i,r,n,a,o){return Dt.barycoordFromPoint(t,e,i,r,y),n.multiplyScalar(y.x),a.multiplyScalar(y.y),o.multiplyScalar(y.z),n.add(a).add(o),n.clone()}function e(t,e,i,r,n,a,o,s){if(null===(e.side===_a?r.intersectTriangle(o,a,n,!0,s):r.intersectTriangle(n,a,o,e.side!==wa,s)))return null;b.copy(s),b.applyMatrix4(t.matrixWorld);var c=i.ray.origin.distanceTo(b);return c<i.near||c>i.far?null:{distance:c,point:b.clone(),object:t}}function n(i,r,n,a,o,s,c,p){h.fromBufferAttribute(a,s),l.fromBufferAttribute(a,c),u.fromBufferAttribute(a,p);var d=e(i,i.material,r,n,h,l,u,x);return d&&(o&&(m.fromBufferAttribute(o,s),g.fromBufferAttribute(o,c),v.fromBufferAttribute(o,p),d.uv=t(x,h,l,u,m,g,v)),d.face=new pt(s,c,p,Dt.normal(h,l,u)),d.faceIndex=s),d}var o=new r,s=new kt,c=new it,h=new a,l=new a,u=new a,p=new a,d=new a,f=new a,m=new i,g=new i,v=new i,y=new a,x=new a,b=new a;return function(i,r){var a=this.geometry,y=this.material,b=this.matrixWorld;if(void 0!==y&&(null===a.boundingSphere&&a.computeBoundingSphere(),c.copy(a.boundingSphere),c.applyMatrix4(b),!1!==i.ray.intersectsSphere(c)&&(o.getInverse(b),s.copy(i.ray).applyMatrix4(o),null===a.boundingBox||!1!==s.intersectsBox(a.boundingBox)))){var _;if(a.isBufferGeometry){var w,E,M,T,S,A=a.index,R=a.attributes.position,C=a.attributes.uv;if(null!==A)for(T=0,S=A.count;T<S;T+=3)w=A.getX(T),E=A.getX(T+1),M=A.getX(T+2),(_=n(this,i,s,R,C,w,E,M))&&(_.faceIndex=Math.floor(T/3),r.push(_));else if(void 0!==R)for(T=0,S=R.count;T<S;T+=3)w=T,E=T+1,M=T+2,(_=n(this,i,s,R,C,w,E,M))&&(_.index=w,r.push(_))}else if(a.isGeometry){var P,L,I,k,O=Array.isArray(y),D=a.vertices,U=a.faces,B=a.faceVertexUvs[0];B.length>0&&(k=B);for(var F=0,N=U.length;F<N;F++){var z=U[F],H=O?y[z.materialIndex]:y;if(void 0!==H){if(P=D[z.a],L=D[z.b],I=D[z.c],!0===H.morphTargets){var G=a.morphTargets,V=this.morphTargetInfluences;h.set(0,0,0),l.set(0,0,0),u.set(0,0,0);for(var j=0,W=G.length;j<W;j++){var X=V[j];if(0!==X){var q=G[j].vertices;h.addScaledVector(p.subVectors(q[z.a],P),X),l.addScaledVector(d.subVectors(q[z.b],L),X),u.addScaledVector(f.subVectors(q[z.c],I),X)}}h.add(P),l.add(L),u.add(I),P=h,L=l,I=u}if(_=e(this,H,i,s,P,L,I,x)){if(k&&k[F]){var Y=k[F];m.copy(Y[0]),g.copy(Y[1]),v.copy(Y[2]),_.uv=t(x,P,L,I,m,g,v)}_.face=z,_.faceIndex=F,r.push(_)}}}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var Os=0;me.prototype=Object.assign(Object.create(lt.prototype),{constructor:me,isPerspectiveCamera:!0,copy:function(t,e){return lt.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){var e=.5*this.getFilmHeight()/t;this.fov=2*gs.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){var t=Math.tan(.5*gs.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*gs.RAD2DEG*Math.atan(Math.tan(.5*gs.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,i,r,n,a){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=r,this.view.width=n,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=this.near,e=t*Math.tan(.5*gs.DEG2RAD*this.fov)/this.zoom,i=2*e,r=this.aspect*i,n=-.5*r,a=this.view;if(null!==this.view&&this.view.enabled){var o=a.fullWidth,s=a.fullHeight;n+=a.offsetX*r/o,e-=a.offsetY*i/s,r*=a.width/o,i*=a.height/s}var c=this.filmOffset;0!==c&&(n+=t*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(n,n+r,e,e-i,t,this.far)},toJSON:function(t){var e=ht.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}),ge.prototype=Object.assign(Object.create(me.prototype),{constructor:ge,isArrayCamera:!0}),we.prototype.isFogExp2=!0,we.prototype.clone=function(){return new we(this.color.getHex(),this.density)},we.prototype.toJSON=function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}},Ee.prototype.isFog=!0,Ee.prototype.clone=function(){return new Ee(this.color.getHex(),this.near,this.far)},Ee.prototype.toJSON=function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}},Me.prototype=Object.assign(Object.create(ht.prototype),{constructor:Me,copy:function(t,e){return ht.prototype.copy.call(this,t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this},toJSON:function(t){var e=ht.prototype.toJSON.call(this,t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}),Te.prototype=Object.assign(Object.create(ht.prototype),{constructor:Te,isLensFlare:!0,copy:function(t){ht.prototype.copy.call(this,t),this.positionScreen.copy(t.positionScreen),this.customUpdateCallback=t.customUpdateCallback;for(var e=0,i=t.lensFlares.length;e<i;e++)this.lensFlares.push(t.lensFlares[e]);return this},add:function(t,e,i,r,n,a){void 0===e&&(e=-1),void 0===i&&(i=0),void 0===a&&(a=1),void 0===n&&(n=new q(16777215)),void 0===r&&(r=Aa),i=Math.min(i,Math.max(0,i)),this.lensFlares.push({texture:t,size:e,distance:i,x:0,y:0,z:0,scale:1,rotation:0,opacity:a,color:n,blending:r})},updateLensFlares:function(){var t,e,i=this.lensFlares.length,r=2*-this.positionScreen.x,n=2*-this.positionScreen.y;for(t=0;t<i;t++)e=this.lensFlares[t],e.x=this.positionScreen.x+r*e.distance,e.y=this.positionScreen.y+n*e.distance,e.wantedRotation=e.x*Math.PI*.25,e.rotation+=.25*(e.wantedRotation-e.rotation)}}),Se.prototype=Object.create(Q.prototype),Se.prototype.constructor=Se,Se.prototype.isSpriteMaterial=!0,Se.prototype.copy=function(t){return Q.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.rotation=t.rotation,this},Ae.prototype=Object.assign(Object.create(ht.prototype),{constructor:Ae,isSprite:!0,raycast:function(){var t=new a,e=new a,i=new a;return function(r,n){e.setFromMatrixPosition(this.matrixWorld),r.ray.closestPointToPoint(e,t),i.setFromMatrixScale(this.matrixWorld);var a=i.x*i.y/4;if(!(e.distanceToSquared(t)>a)){var o=r.ray.origin.distanceTo(t);o<r.near||o>r.far||n.push({distance:o,point:t.clone(),face:null,object:this})}}}(),clone:function(){return new this.constructor(this.material).copy(this)}}),Re.prototype=Object.assign(Object.create(ht.prototype),{constructor:Re,copy:function(t){ht.prototype.copy.call(this,t,!1);for(var e=t.levels,i=0,r=e.length;i<r;i++){var n=e[i];this.addLevel(n.object.clone(),n.distance)}return this},addLevel:function(t,e){void 0===e&&(e=0),e=Math.abs(e);for(var i=this.levels,r=0;r<i.length&&!(e<i[r].distance);r++);i.splice(r,0,{distance:e,object:t}),this.add(t)},getObjectForDistance:function(t){for(var e=this.levels,i=1,r=e.length;i<r&&!(t<e[i].distance);i++);return e[i-1].object},raycast:function(){var t=new a;return function(e,i){t.setFromMatrixPosition(this.matrixWorld);var r=e.ray.origin.distanceTo(t);this.getObjectForDistance(r).raycast(e,i)}}(),update:function(){var t=new a,e=new a;return function(i){var r=this.levels;if(r.length>1){t.setFromMatrixPosition(i.matrixWorld),e.setFromMatrixPosition(this.matrixWorld);var n=t.distanceTo(e);r[0].object.visible=!0;for(var a=1,o=r.length;a<o&&n>=r[a].distance;a++)r[a-1].object.visible=!1,r[a].object.visible=!0;for(;a<o;a++)r[a].object.visible=!1}}}(),toJSON:function(t){var e=ht.prototype.toJSON.call(this,t);e.object.levels=[];for(var i=this.levels,r=0,n=i.length;r<n;r++){var a=i[r];e.object.levels.push({object:a.object.uuid,distance:a.distance})}return e}}),Object.assign(Ce.prototype,{calculateInverses:function(){this.boneInverses=[];for(var t=0,e=this.bones.length;t<e;t++){var i=new r;this.bones[t]&&i.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(i)}},pose:function(){var t,e,i;for(e=0,i=this.bones.length;e<i;e++)(t=this.bones[e])&&t.matrixWorld.getInverse(this.boneInverses[e]);for(e=0,i=this.bones.length;e<i;e++)(t=this.bones[e])&&(t.parent&&t.parent.isBone?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))},update:function(){var t=new r,e=new r;return function(){for(var i=this.bones,r=this.boneInverses,n=this.boneMatrices,a=this.boneTexture,o=0,s=i.length;o<s;o++){var c=i[o]?i[o].matrixWorld:e;t.multiplyMatrices(c,r[o]),t.toArray(n,16*o)}void 0!==a&&(a.needsUpdate=!0)}}(),clone:function(){return new Ce(this.bones,this.boneInverses)}}),Pe.prototype=Object.assign(Object.create(ht.prototype),{constructor:Pe,isBone:!0}),Le.prototype=Object.assign(Object.create(Ut.prototype),{constructor:Le,isSkinnedMesh:!0,initBones:function(){var t,e,i,r,n=[];if(this.geometry&&void 0!==this.geometry.bones){for(i=0,r=this.geometry.bones.length;i<r;i++)e=this.geometry.bones[i],t=new Pe,n.push(t),t.name=e.name,t.position.fromArray(e.pos),t.quaternion.fromArray(e.rotq),void 0!==e.scl&&t.scale.fromArray(e.scl);for(i=0,r=this.geometry.bones.length;i<r;i++)e=this.geometry.bones[i],-1!==e.parent&&null!==e.parent&&void 0!==n[e.parent]?n[e.parent].add(n[i]):this.add(n[i])}return this.updateMatrixWorld(!0),n},bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){var t,e;if(this.geometry&&this.geometry.isGeometry)for(e=0;e<this.geometry.skinWeights.length;e++){var i=this.geometry.skinWeights[e];t=1/i.manhattanLength(),t!==1/0?i.multiplyScalar(t):i.set(1,0,0,0)}else if(this.geometry&&this.geometry.isBufferGeometry){var r=new c,n=this.geometry.attributes.skinWeight;for(e=0;e<n.count;e++)r.x=n.getX(e),r.y=n.getY(e),r.z=n.getZ(e),r.w=n.getW(e),t=1/r.manhattanLength(),t!==1/0?r.multiplyScalar(t):r.set(1,0,0,0),n.setXYZW(e,r.x,r.y,r.z,r.w)}},updateMatrixWorld:function(t){Ut.prototype.updateMatrixWorld.call(this,t),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Ie.prototype=Object.create(Q.prototype),Ie.prototype.constructor=Ie,Ie.prototype.isLineBasicMaterial=!0,Ie.prototype.copy=function(t){return Q.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this},ke.prototype=Object.assign(Object.create(ht.prototype),{constructor:ke,isLine:!0,raycast:function(){var t=new r,e=new kt,i=new it;return function(r,n){var o=r.linePrecision,s=o*o,c=this.geometry,h=this.matrixWorld;if(null===c.boundingSphere&&c.computeBoundingSphere(),i.copy(c.boundingSphere),i.applyMatrix4(h),!1!==r.ray.intersectsSphere(i)){t.getInverse(h),e.copy(r.ray).applyMatrix4(t);var l=new a,u=new a,p=new a,d=new a,f=this&&this.isLineSegments?2:1;if(c.isBufferGeometry){var m=c.index,g=c.attributes,v=g.position.array;if(null!==m)for(var y=m.array,x=0,b=y.length-1;x<b;x+=f){var _=y[x],w=y[x+1];l.fromArray(v,3*_),u.fromArray(v,3*w);var E=e.distanceSqToSegment(l,u,d,p);if(!(E>s)){d.applyMatrix4(this.matrixWorld);var M=r.ray.origin.distanceTo(d);M<r.near||M>r.far||n.push({distance:M,point:p.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}else for(var x=0,b=v.length/3-1;x<b;x+=f){l.fromArray(v,3*x),u.fromArray(v,3*x+3);var E=e.distanceSqToSegment(l,u,d,p);if(!(E>s)){d.applyMatrix4(this.matrixWorld);var M=r.ray.origin.distanceTo(d);M<r.near||M>r.far||n.push({distance:M,point:p.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}}else if(c.isGeometry)for(var T=c.vertices,S=T.length,x=0;x<S-1;x+=f){var E=e.distanceSqToSegment(T[x],T[x+1],d,p);if(!(E>s)){d.applyMatrix4(this.matrixWorld);var M=r.ray.origin.distanceTo(d);M<r.near||M>r.far||n.push({distance:M,point:p.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Oe.prototype=Object.assign(Object.create(ke.prototype),{constructor:Oe,isLineSegments:!0}),De.prototype=Object.assign(Object.create(ke.prototype),{constructor:De,isLineLoop:!0}),Ue.prototype=Object.create(Q.prototype),Ue.prototype.constructor=Ue,Ue.prototype.isPointsMaterial=!0,Ue.prototype.copy=function(t){return Q.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this},Be.prototype=Object.assign(Object.create(ht.prototype),{constructor:Be,isPoints:!0,raycast:function(){var t=new r,e=new kt,i=new it;return function(r,n){function o(t,i){var a=e.distanceSqToPoint(t);if(a<p){var o=e.closestPointToPoint(t);o.applyMatrix4(h);var c=r.ray.origin.distanceTo(o);if(c<r.near||c>r.far)return;n.push({distance:c,distanceToRay:Math.sqrt(a),point:o.clone(),index:i,face:null,object:s})}}var s=this,c=this.geometry,h=this.matrixWorld,l=r.params.Points.threshold;if(null===c.boundingSphere&&c.computeBoundingSphere(),i.copy(c.boundingSphere),i.applyMatrix4(h),i.radius+=l,!1!==r.ray.intersectsSphere(i)){t.getInverse(h),e.copy(r.ray).applyMatrix4(t);var u=l/((this.scale.x+this.scale.y+this.scale.z)/3),p=u*u,d=new a;if(c.isBufferGeometry){var f=c.index,m=c.attributes,g=m.position.array;if(null!==f)for(var v=f.array,y=0,x=v.length;y<x;y++){var b=v[y];d.fromArray(g,3*b),o(d,b)}else for(var y=0,_=g.length/3;y<_;y++)d.fromArray(g,3*y),o(d,y)}else for(var w=c.vertices,y=0,_=w.length;y<_;y++)o(w[y],y)}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Fe.prototype=Object.assign(Object.create(ht.prototype),{constructor:Fe}),Ne.prototype=Object.create(s.prototype),Ne.prototype.constructor=Ne,ze.prototype=Object.create(s.prototype),ze.prototype.constructor=ze,ze.prototype.isCompressedTexture=!0,He.prototype=Object.create(s.prototype),He.prototype.constructor=He,He.prototype.isDepthTexture=!0,Ge.prototype=Object.create(St.prototype),Ge.prototype.constructor=Ge,Ve.prototype=Object.create(dt.prototype),Ve.prototype.constructor=Ve,je.prototype=Object.create(St.prototype),je.prototype.constructor=je,We.prototype=Object.create(dt.prototype),We.prototype.constructor=We,Xe.prototype=Object.create(St.prototype),Xe.prototype.constructor=Xe,qe.prototype=Object.create(dt.prototype),qe.prototype.constructor=qe,Ye.prototype=Object.create(Xe.prototype),Ye.prototype.constructor=Ye,Ke.prototype=Object.create(dt.prototype),Ke.prototype.constructor=Ke,Ze.prototype=Object.create(Xe.prototype),Ze.prototype.constructor=Ze,Je.prototype=Object.create(dt.prototype),Je.prototype.constructor=Je,Qe.prototype=Object.create(Xe.prototype),Qe.prototype.constructor=Qe,$e.prototype=Object.create(dt.prototype),$e.prototype.constructor=$e,ti.prototype=Object.create(Xe.prototype),ti.prototype.constructor=ti,ei.prototype=Object.create(dt.prototype),ei.prototype.constructor=ei,ii.prototype=Object.create(St.prototype),ii.prototype.constructor=ii,ri.prototype=Object.create(dt.prototype),ri.prototype.constructor=ri,ni.prototype=Object.create(St.prototype),ni.prototype.constructor=ni,ai.prototype=Object.create(dt.prototype),ai.prototype.constructor=ai,oi.prototype=Object.create(St.prototype),oi.prototype.constructor=oi;var Ds={area:function(t){for(var e=t.length,i=0,r=e-1,n=0;n<e;r=n++)i+=t[r].x*t[n].y-t[n].x*t[r].y;return.5*i},triangulate:function(){function t(t,e,i,r,n,a){var o,s,c,h,l,u,p,d,f;if(s=t[a[e]].x,c=t[a[e]].y,h=t[a[i]].x,l=t[a[i]].y,u=t[a[r]].x,p=t[a[r]].y,(h-s)*(p-c)-(l-c)*(u-s)<=0)return!1;var m,g,v,y,x,b,_,w,E,M,T,S,A,R,C;for(m=u-h,g=p-l,v=s-u,y=c-p,x=h-s,b=l-c,o=0;o<n;o++)if(d=t[a[o]].x,f=t[a[o]].y,!(d===s&&f===c||d===h&&f===l||d===u&&f===p)&&(_=d-s,w=f-c,E=d-h,M=f-l,T=d-u,S=f-p,C=m*M-g*E,A=x*w-b*_,R=v*S-y*T,C>=-Number.EPSILON&&R>=-Number.EPSILON&&A>=-Number.EPSILON))return!1;return!0}return function(e,i){var r=e.length;if(r<3)return null;var n,a,o,s=[],c=[],h=[];if(Ds.area(e)>0)for(a=0;a<r;a++)c[a]=a;else for(a=0;a<r;a++)c[a]=r-1-a;var l=r,u=2*l;for(a=l-1;l>2;){if(u--<=0)return console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()"),i?h:s;if(n=a,l<=n&&(n=0),a=n+1,l<=a&&(a=0),o=a+1,l<=o&&(o=0),t(e,n,a,o,l,c)){var p,d,f,m,g;for(p=c[n],d=c[a],f=c[o],s.push([e[p],e[d],e[f]]),h.push([c[n],c[a],c[o]]),m=a,g=a+1;g<l;m++,g++)c[m]=c[g];l--,u=2*l}}return i?h:s}}(),triangulateShape:function(t,e){function i(t){var e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function r(t,e,i){return t.x!==e.x?t.x<e.x?t.x<=i.x&&i.x<=e.x:e.x<=i.x&&i.x<=t.x:t.y<e.y?t.y<=i.y&&i.y<=e.y:e.y<=i.y&&i.y<=t.y}function n(t,e,i,n,a){var o=e.x-t.x,s=e.y-t.y,c=n.x-i.x,h=n.y-i.y,l=t.x-i.x,u=t.y-i.y,p=s*c-o*h,d=s*l-o*u;if(Math.abs(p)>Number.EPSILON){var f;if(p>0){if(d<0||d>p)return[];if((f=h*l-c*u)<0||f>p)return[]}else{if(d>0||d<p)return[];if((f=h*l-c*u)>0||f<p)return[]}if(0===f)return!a||0!==d&&d!==p?[t]:[];if(f===p)return!a||0!==d&&d!==p?[e]:[];if(0===d)return[i];if(d===p)return[n];var m=f/p;return[{x:t.x+m*o,y:t.y+m*s}]}if(0!==d||h*l!=c*u)return[];var g=0===o&&0===s,v=0===c&&0===h;if(g&&v)return t.x!==i.x||t.y!==i.y?[]:[t];if(g)return r(i,n,t)?[t]:[];if(v)return r(t,e,i)?[i]:[];var y,x,b,_,w,E,M,T;return 0!==o?(t.x<e.x?(y=t,b=t.x,x=e,_=e.x):(y=e,b=e.x,x=t,_=t.x),i.x<n.x?(w=i,M=i.x,E=n,T=n.x):(w=n,M=n.x,E=i,T=i.x)):(t.y<e.y?(y=t,b=t.y,x=e,_=e.y):(y=e,b=e.y,x=t,_=t.y),i.y<n.y?(w=i,M=i.y,E=n,T=n.y):(w=n,M=n.y,E=i,T=i.y)),b<=M?_<M?[]:_===M?a?[]:[w]:_<=T?[w,x]:[w,E]:b>T?[]:b===T?a?[]:[y]:_<=T?[y,x]:[y,E]}function a(t,e,i,r){var n=e.x-t.x,a=e.y-t.y,o=i.x-t.x,s=i.y-t.y,c=r.x-t.x,h=r.y-t.y,l=n*s-a*o,u=n*h-a*c;if(Math.abs(l)>Number.EPSILON){var p=c*s-h*o;return l>0?u>=0&&p>=0:u>=0||p>=0}return u>0}i(t),e.forEach(i);for(var o,s,c,h,l,u,p={},d=t.concat(),f=0,m=e.length;f<m;f++)Array.prototype.push.apply(d,e[f]);for(o=0,s=d.length;o<s;o++)l=d[o].x+":"+d[o].y,void 0!==p[l]&&console.warn("THREE.ShapeUtils: Duplicate point",l,o),p[l]=o;var g=function(t,e){for(var i,r,o,s,c,h,l,u,p,d,f,m=t.concat(),g=[],v=[],y=0,x=e.length;y<x;y++)g.push(y);for(var b=0,_=2*g.length;g.length>0;){if(--_<0){console.log('THREE.ShapeUtils: Infinite Loop! Holes left:" + indepHoles.length + ", Probably Hole outside Shape!');break}for(o=b;o<m.length;o++){s=m[o],r=-1;for(var y=0;y<g.length;y++)if(h=g[y],l=s.x+":"+s.y+":"+h,void 0===v[l]){i=e[h];for(var w=0;w<i.length;w++)if(c=i[w],function(t,e){var r=m.length-1,n=t-1;n<0&&(n=r);var o=t+1;o>r&&(o=0);var s=a(m[t],m[n],m[o],i[e]);if(!s)return!1;var c=i.length-1,h=e-1;h<0&&(h=c);var l=e+1;return l>c&&(l=0),!!(s=a(i[e],i[h],i[l],m[t]))}(o,w)&&!function(t,e){var i,r,a;for(i=0;i<m.length;i++)if(r=i+1,r%=m.length,a=n(t,e,m[i],m[r],!0),a.length>0)return!0;return!1}(s,c)&&!function(t,i){var r,a,o,s,c;for(r=0;r<g.length;r++)for(a=e[g[r]],o=0;o<a.length;o++)if(s=o+1,s%=a.length,c=n(t,i,a[o],a[s],!0),c.length>0)return!0;return!1}(s,c)){r=w,g.splice(y,1),u=m.slice(0,o+1),p=m.slice(o),d=i.slice(r),f=i.slice(0,r+1),m=u.concat(d).concat(f).concat(p),b=o;break}if(r>=0)break;v[l]=!0}if(r>=0)break}}return m}(t,e),v=Ds.triangulate(g,!1);for(o=0,s=v.length;o<s;o++)for(h=v[o],c=0;c<3;c++)l=h[c].x+":"+h[c].y,void 0!==(u=p[l])&&(h[c]=u);return v.concat()},isClockWise:function(t){return Ds.area(t)<0}};si.prototype=Object.create(dt.prototype),si.prototype.constructor=si,ci.prototype=Object.create(St.prototype),ci.prototype.constructor=ci,ci.prototype.getArrays=function(){var t=this.getAttribute("position"),e=t?Array.prototype.slice.call(t.array):[],i=this.getAttribute("uv"),r=i?Array.prototype.slice.call(i.array):[],n=this.index;return{position:e,uv:r,index:n?Array.prototype.slice.call(n.array):[]}},ci.prototype.addShapeList=function(t,e){var i=t.length;e.arrays=this.getArrays();for(var r=0;r<i;r++){var n=t[r];this.addShape(n,e)}this.setIndex(e.arrays.index),this.addAttribute("position",new wt(e.arrays.position,3)),this.addAttribute("uv",new wt(e.arrays.uv,2))},ci.prototype.addShape=function(t,e){function r(t,e,i){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(i).add(t)}function n(t,e,r){var n,a,o,s=t.x-e.x,c=t.y-e.y,h=r.x-t.x,l=r.y-t.y,u=s*s+c*c,p=s*l-c*h;if(Math.abs(p)>Number.EPSILON){var d=Math.sqrt(u),f=Math.sqrt(h*h+l*l),m=e.x-c/d,g=e.y+s/d,v=r.x-l/f,y=r.y+h/f,x=((v-m)*l-(y-g)*h)/(s*l-c*h);n=m+s*x-t.x,a=g+c*x-t.y;var b=n*n+a*a;if(b<=2)return new i(n,a);o=Math.sqrt(b/2)}else{var _=!1;s>Number.EPSILON?h>Number.EPSILON&&(_=!0):s<-Number.EPSILON?h<-Number.EPSILON&&(_=!0):Math.sign(c)===Math.sign(l)&&(_=!0),_?(n=-c,a=s,o=Math.sqrt(u)):(n=s,a=c,o=Math.sqrt(u/2))}return new i(n/o,a/o)}function o(t,e){var i,r;for(Z=t.length;--Z>=0;){i=Z,r=Z-1,r<0&&(r=t.length-1);var n=0,a=R+2*T;for(n=0;n<a;n++){var o=q*n,s=q*(n+1);h(e+i+o,e+r+o,e+r+s,e+i+s)}}}function s(t,e,i){_.push(t),_.push(e),_.push(i)}function c(t,e,i){l(t),l(e),l(i);var r=y.length/3,n=L.generateTopUV(D,y,r-3,r-2,r-1);u(n[0]),u(n[1]),u(n[2])}function h(t,e,i,r){l(t),l(e),l(r),l(e),l(i),l(r);var n=y.length/3,a=L.generateSideWallUV(D,y,n-6,n-3,n-2,n-1);u(a[0]),u(a[1]),u(a[3]),u(a[1]),u(a[2]),u(a[3])}function l(t){x.push(y.length/3),y.push(_[3*t+0]),y.push(_[3*t+1]),y.push(_[3*t+2])}function u(t){b.push(t.x),b.push(t.y)}var p,d,f,m,g,v=e.arrays?e.arrays:this.getArrays(),y=v.position,x=v.index,b=v.uv,_=[],w=void 0!==e.amount?e.amount:100,E=void 0!==e.bevelThickness?e.bevelThickness:6,M=void 0!==e.bevelSize?e.bevelSize:E-2,T=void 0!==e.bevelSegments?e.bevelSegments:3,S=void 0===e.bevelEnabled||e.bevelEnabled,A=void 0!==e.curveSegments?e.curveSegments:12,R=void 0!==e.steps?e.steps:1,C=e.extrudePath,P=!1,L=void 0!==e.UVGenerator?e.UVGenerator:si.WorldUVGenerator;C&&(p=C.getSpacedPoints(R),P=!0,S=!1,d=void 0!==e.frames?e.frames:C.computeFrenetFrames(R,!1),f=new a,m=new a,g=new a),S||(T=0,E=0,M=0);var I,k,O,D=this,U=t.extractPoints(A),B=U.shape,F=U.holes;if(!Ds.isClockWise(B))for(B=B.reverse(),k=0,O=F.length;k<O;k++)I=F[k],Ds.isClockWise(I)&&(F[k]=I.reverse());var N=Ds.triangulateShape(B,F),z=B;for(k=0,O=F.length;k<O;k++)I=F[k],B=B.concat(I);for(var H,G,V,j,W,X,q=B.length,Y=N.length,K=[],Z=0,J=z.length,Q=J-1,$=Z+1;Z<J;Z++,Q++,$++)Q===J&&(Q=0),$===J&&($=0),K[Z]=n(z[Z],z[Q],z[$]);var tt,et=[],it=K.concat();for(k=0,O=F.length;k<O;k++){for(I=F[k],tt=[],Z=0,J=I.length,Q=J-1,$=Z+1;Z<J;Z++,Q++,$++)Q===J&&(Q=0),$===J&&($=0),tt[Z]=n(I[Z],I[Q],I[$]);et.push(tt),it=it.concat(tt)}for(H=0;H<T;H++){for(V=H/T,j=E*Math.cos(V*Math.PI/2),G=M*Math.sin(V*Math.PI/2),Z=0,J=z.length;Z<J;Z++)W=r(z[Z],K[Z],G),s(W.x,W.y,-j);for(k=0,O=F.length;k<O;k++)for(I=F[k],tt=et[k],Z=0,J=I.length;Z<J;Z++)W=r(I[Z],tt[Z],G),s(W.x,W.y,-j)}for(G=M,Z=0;Z<q;Z++)W=S?r(B[Z],it[Z],G):B[Z],P?(m.copy(d.normals[0]).multiplyScalar(W.x),f.copy(d.binormals[0]).multiplyScalar(W.y),g.copy(p[0]).add(m).add(f),s(g.x,g.y,g.z)):s(W.x,W.y,0);var rt;for(rt=1;rt<=R;rt++)for(Z=0;Z<q;Z++)W=S?r(B[Z],it[Z],G):B[Z],P?(m.copy(d.normals[rt]).multiplyScalar(W.x),f.copy(d.binormals[rt]).multiplyScalar(W.y),g.copy(p[rt]).add(m).add(f),s(g.x,g.y,g.z)):s(W.x,W.y,w/R*rt);for(H=T-1;H>=0;H--){for(V=H/T,j=E*Math.cos(V*Math.PI/2),G=M*Math.sin(V*Math.PI/2),Z=0,J=z.length;Z<J;Z++)W=r(z[Z],K[Z],G),s(W.x,W.y,w+j);for(k=0,O=F.length;k<O;k++)for(I=F[k],tt=et[k],Z=0,J=I.length;Z<J;Z++)W=r(I[Z],tt[Z],G),P?s(W.x,W.y+p[R-1].y,p[R-1].x+j):s(W.x,W.y,w+j)}!function(){var t=y.length/3;if(S){var i=0,r=q*i;for(Z=0;Z<Y;Z++)X=N[Z],c(X[2]+r,X[1]+r,X[0]+r);for(i=R+2*T,r=q*i,Z=0;Z<Y;Z++)X=N[Z],c(X[0]+r,X[1]+r,X[2]+r)}else{for(Z=0;Z<Y;Z++)X=N[Z],c(X[2],X[1],X[0]);for(Z=0;Z<Y;Z++)X=N[Z],c(X[0]+q*R,X[1]+q*R,X[2]+q*R)}D.addGroup(t,y.length/3-t,void 0!==e.material?e.material:0)}(),function(){var t=y.length/3,i=0;for(o(z,i),i+=z.length,k=0,O=F.length;k<O;k++)I=F[k],o(I,i),i+=I.length;D.addGroup(t,y.length/3-t,void 0!==e.extrudeMaterial?e.extrudeMaterial:1)}(),e.arrays||(this.setIndex(x),this.addAttribute("position",new wt(y,3)),this.addAttribute("uv",new wt(e.arrays.uv,2)))},si.WorldUVGenerator={generateTopUV:function(t,e,r,n,a){var o=e[3*r],s=e[3*r+1],c=e[3*n],h=e[3*n+1],l=e[3*a],u=e[3*a+1];return[new i(o,s),new i(c,h),new i(l,u)]},generateSideWallUV:function(t,e,r,n,a,o){var s=e[3*r],c=e[3*r+1],h=e[3*r+2],l=e[3*n],u=e[3*n+1],p=e[3*n+2],d=e[3*a],f=e[3*a+1],m=e[3*a+2],g=e[3*o],v=e[3*o+1],y=e[3*o+2];return Math.abs(c-u)<.01?[new i(s,1-h),new i(l,1-p),new i(d,1-m),new i(g,1-y)]:[new i(c,1-h),new i(u,1-p),new i(f,1-m),new i(v,1-y)]}},hi.prototype=Object.create(dt.prototype),hi.prototype.constructor=hi,li.prototype=Object.create(ci.prototype),li.prototype.constructor=li,ui.prototype=Object.create(dt.prototype),ui.prototype.constructor=ui,pi.prototype=Object.create(St.prototype),pi.prototype.constructor=pi,di.prototype=Object.create(dt.prototype),di.prototype.constructor=di,fi.prototype=Object.create(St.prototype),fi.prototype.constructor=fi,mi.prototype=Object.create(dt.prototype),mi.prototype.constructor=mi,gi.prototype=Object.create(St.prototype),gi.prototype.constructor=gi,vi.prototype=Object.create(dt.prototype),vi.prototype.constructor=vi,yi.prototype=Object.create(St.prototype),yi.prototype.constructor=yi,xi.prototype=Object.create(St.prototype),xi.prototype.constructor=xi,bi.prototype=Object.create(dt.prototype),bi.prototype.constructor=bi,_i.prototype=Object.create(St.prototype),_i.prototype.constructor=_i,wi.prototype=Object.create(bi.prototype),wi.prototype.constructor=wi,Ei.prototype=Object.create(_i.prototype),Ei.prototype.constructor=Ei,Mi.prototype=Object.create(dt.prototype),Mi.prototype.constructor=Mi,Ti.prototype=Object.create(St.prototype),Ti.prototype.constructor=Ti;var Us=Object.freeze({WireframeGeometry:Ge,ParametricGeometry:Ve,ParametricBufferGeometry:je,TetrahedronGeometry:qe,TetrahedronBufferGeometry:Ye,OctahedronGeometry:Ke,OctahedronBufferGeometry:Ze,IcosahedronGeometry:Je,IcosahedronBufferGeometry:Qe,DodecahedronGeometry:$e,DodecahedronBufferGeometry:ti,PolyhedronGeometry:We,PolyhedronBufferGeometry:Xe,TubeGeometry:ei,TubeBufferGeometry:ii,TorusKnotGeometry:ri,TorusKnotBufferGeometry:ni,TorusGeometry:ai,TorusBufferGeometry:oi,TextGeometry:hi,TextBufferGeometry:li,SphereGeometry:ui,SphereBufferGeometry:pi,RingGeometry:di,RingBufferGeometry:fi,PlaneGeometry:Ct,PlaneBufferGeometry:Pt,LatheGeometry:mi,LatheBufferGeometry:gi,ShapeGeometry:vi,ShapeBufferGeometry:yi,ExtrudeGeometry:si,ExtrudeBufferGeometry:ci,EdgesGeometry:xi,ConeGeometry:wi,ConeBufferGeometry:Ei,CylinderGeometry:bi,CylinderBufferGeometry:_i,CircleGeometry:Mi,CircleBufferGeometry:Ti,BoxGeometry:At,BoxBufferGeometry:Rt});Si.prototype=Object.create(Q.prototype),Si.prototype.constructor=Si,Si.prototype.isShadowMaterial=!0,Ai.prototype=Object.create(It.prototype),Ai.prototype.constructor=Ai,Ai.prototype.isRawShaderMaterial=!0,Ri.prototype=Object.create(Q.prototype),Ri.prototype.constructor=Ri,Ri.prototype.isMeshStandardMaterial=!0,Ri.prototype.copy=function(t){return Q.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Ci.prototype=Object.create(Ri.prototype),Ci.prototype.constructor=Ci,Ci.prototype.isMeshPhysicalMaterial=!0,Ci.prototype.copy=function(t){return Ri.prototype.copy.call(this,t),this.defines={PHYSICAL:""},this.reflectivity=t.reflectivity,this.clearCoat=t.clearCoat,this.clearCoatRoughness=t.clearCoatRoughness,this},Pi.prototype=Object.create(Q.prototype),Pi.prototype.constructor=Pi,Pi.prototype.isMeshPhongMaterial=!0,
Pi.prototype.copy=function(t){return Q.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Li.prototype=Object.create(Pi.prototype),Li.prototype.constructor=Li,Li.prototype.isMeshToonMaterial=!0,Li.prototype.copy=function(t){return Pi.prototype.copy.call(this,t),this.gradientMap=t.gradientMap,this},Ii.prototype=Object.create(Q.prototype),Ii.prototype.constructor=Ii,Ii.prototype.isMeshNormalMaterial=!0,Ii.prototype.copy=function(t){return Q.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},ki.prototype=Object.create(Q.prototype),ki.prototype.constructor=ki,ki.prototype.isMeshLambertMaterial=!0,ki.prototype.copy=function(t){return Q.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Oi.prototype=Object.create(Ie.prototype),Oi.prototype.constructor=Oi,Oi.prototype.isLineDashedMaterial=!0,Oi.prototype.copy=function(t){return Ie.prototype.copy.call(this,t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this};var Bs=Object.freeze({ShadowMaterial:Si,SpriteMaterial:Se,RawShaderMaterial:Ai,ShaderMaterial:It,PointsMaterial:Ue,MeshPhysicalMaterial:Ci,MeshStandardMaterial:Ri,MeshPhongMaterial:Pi,MeshToonMaterial:Li,MeshNormalMaterial:Ii,MeshLambertMaterial:ki,MeshDepthMaterial:$,MeshDistanceMaterial:tt,MeshBasicMaterial:Lt,LineDashedMaterial:Oi,LineBasicMaterial:Ie,Material:Q}),Fs={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}},Ns=new Di,zs={};Object.assign(Ui.prototype,{load:function(t,e,i,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var n=this,a=Fs.get(t);if(void 0!==a)return n.manager.itemStart(t),setTimeout(function(){e&&e(a),n.manager.itemEnd(t)},0),a;if(void 0!==zs[t])return void zs[t].push({onLoad:e,onProgress:i,onError:r});var o=/^data:(.*?)(;base64)?,(.*)$/,s=t.match(o);if(s){var c=s[1],h=!!s[2],l=s[3];l=window.decodeURIComponent(l),h&&(l=window.atob(l));try{var u,p=(this.responseType||"").toLowerCase();switch(p){case"arraybuffer":case"blob":for(var d=new Uint8Array(l.length),f=0;f<l.length;f++)d[f]=l.charCodeAt(f);u="blob"===p?new Blob([d.buffer],{type:c}):d.buffer;break;case"document":var m=new DOMParser;u=m.parseFromString(l,c);break;case"json":u=JSON.parse(l);break;default:u=l}window.setTimeout(function(){e&&e(u),n.manager.itemEnd(t)},0)}catch(e){window.setTimeout(function(){r&&r(e),n.manager.itemEnd(t),n.manager.itemError(t)},0)}}else{zs[t]=[],zs[t].push({onLoad:e,onProgress:i,onError:r});var g=new XMLHttpRequest;g.open("GET",t,!0),g.addEventListener("load",function(e){var i=e.target.response;Fs.add(t,i);var r=zs[t];if(delete zs[t],200===this.status){for(var a=0,o=r.length;a<o;a++){var s=r[a];s.onLoad&&s.onLoad(i)}n.manager.itemEnd(t)}else if(0===this.status){console.warn("THREE.FileLoader: HTTP Status 0 received.");for(var a=0,o=r.length;a<o;a++){var s=r[a];s.onLoad&&s.onLoad(i)}n.manager.itemEnd(t)}else{for(var a=0,o=r.length;a<o;a++){var s=r[a];s.onError&&s.onError(e)}n.manager.itemEnd(t),n.manager.itemError(t)}},!1),g.addEventListener("progress",function(e){for(var i=zs[t],r=0,n=i.length;r<n;r++){var a=i[r];a.onProgress&&a.onProgress(e)}},!1),g.addEventListener("error",function(e){var i=zs[t];delete zs[t];for(var r=0,a=i.length;r<a;r++){var o=i[r];o.onError&&o.onError(e)}n.manager.itemEnd(t),n.manager.itemError(t)},!1),void 0!==this.responseType&&(g.responseType=this.responseType),void 0!==this.withCredentials&&(g.withCredentials=this.withCredentials),g.overrideMimeType&&g.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(var v in this.requestHeader)g.setRequestHeader(v,this.requestHeader[v]);g.send(null)}return n.manager.itemStart(t),g},setPath:function(t){return this.path=t,this},setResponseType:function(t){return this.responseType=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setMimeType:function(t){return this.mimeType=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}}),Object.assign(Bi.prototype,{load:function(t,e,i,r){var n=this,a=[],o=new ze;o.image=a;var s=new Ui(this.manager);if(s.setPath(this.path),s.setResponseType("arraybuffer"),Array.isArray(t))for(var c=0,h=0,l=t.length;h<l;++h)!function(h){s.load(t[h],function(t){var i=n._parser(t,!0);a[h]={width:i.width,height:i.height,format:i.format,mipmaps:i.mipmaps},6===(c+=1)&&(1===i.mipmapCount&&(o.minFilter=Mo),o.format=i.format,o.needsUpdate=!0,e&&e(o))},i,r)}(h);else s.load(t,function(t){var i=n._parser(t,!0);if(i.isCubemap)for(var r=i.mipmaps.length/i.mipmapCount,s=0;s<r;s++){a[s]={mipmaps:[]};for(var c=0;c<i.mipmapCount;c++)a[s].mipmaps.push(i.mipmaps[s*i.mipmapCount+c]),a[s].format=i.format,a[s].width=i.width,a[s].height=i.height}else o.image.width=i.width,o.image.height=i.height,o.mipmaps=i.mipmaps;1===i.mipmapCount&&(o.minFilter=Mo),o.format=i.format,o.needsUpdate=!0,e&&e(o)},i,r);return o},setPath:function(t){return this.path=t,this}}),Object.assign(Fi.prototype,{load:function(t,e,i,r){var n=this,a=new u,o=new Ui(this.manager);return o.setResponseType("arraybuffer"),o.load(t,function(t){var i=n._parser(t);i&&(void 0!==i.image?a.image=i.image:void 0!==i.data&&(a.image.width=i.width,a.image.height=i.height,a.image.data=i.data),a.wrapS=void 0!==i.wrapS?i.wrapS:xo,a.wrapT=void 0!==i.wrapT?i.wrapT:xo,a.magFilter=void 0!==i.magFilter?i.magFilter:Mo,a.minFilter=void 0!==i.minFilter?i.minFilter:So,a.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,void 0!==i.format&&(a.format=i.format),void 0!==i.type&&(a.type=i.type),void 0!==i.mipmaps&&(a.mipmaps=i.mipmaps),1===i.mipmapCount&&(a.minFilter=Mo),a.needsUpdate=!0,e&&e(a,i))},i,r),a}}),Object.assign(Ni.prototype,{crossOrigin:"Anonymous",load:function(t,e,i,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var n=this,a=Fs.get(t);if(void 0!==a)return n.manager.itemStart(t),setTimeout(function(){e&&e(a),n.manager.itemEnd(t)},0),a;var o=document.createElementNS("http://www.w3.org/1999/xhtml","img");return o.addEventListener("load",function(){Fs.add(t,this),e&&e(this),n.manager.itemEnd(t)},!1),o.addEventListener("error",function(e){r&&r(e),n.manager.itemEnd(t),n.manager.itemError(t)},!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),n.manager.itemStart(t),o.src=t,o},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}}),Object.assign(zi.prototype,{crossOrigin:"Anonymous",load:function(t,e,i,r){var n=new p,a=new Ni(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);for(var o=0,s=0;s<t.length;++s)!function(i){a.load(t[i],function(t){n.images[i]=t,6==++o&&(n.needsUpdate=!0,e&&e(n))},void 0,r)}(s);return n},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}}),Object.assign(Hi.prototype,{crossOrigin:"Anonymous",load:function(t,e,i,r){var n=new Ni(this.manager);n.setCrossOrigin(this.crossOrigin),n.setPath(this.path);var a=new s;return a.image=n.load(t,function(){var i=t.search(/\.(jpg|jpeg)$/)>0||0===t.search(/^data\:image\/jpeg/);a.format=i?zo:Ho,a.needsUpdate=!0,void 0!==e&&e(a)},i,r),a},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}}),Gi.prototype=Object.assign(Object.create(ht.prototype),{constructor:Gi,isLight:!0,copy:function(t){return ht.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){var e=ht.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}),Vi.prototype=Object.assign(Object.create(Gi.prototype),{constructor:Vi,isHemisphereLight:!0,copy:function(t){return Gi.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}),Object.assign(ji.prototype,{copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var t={};return 0!==this.bias&&(t.bias=this.bias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}),Wi.prototype=Object.assign(Object.create(ji.prototype),{constructor:Wi,isSpotLightShadow:!0,update:function(t){var e=this.camera,i=2*gs.RAD2DEG*t.angle,r=this.mapSize.width/this.mapSize.height,n=t.distance||e.far;i===e.fov&&r===e.aspect&&n===e.far||(e.fov=i,e.aspect=r,e.far=n,e.updateProjectionMatrix())}}),Xi.prototype=Object.assign(Object.create(Gi.prototype),{constructor:Xi,isSpotLight:!0,copy:function(t){return Gi.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),qi.prototype=Object.assign(Object.create(Gi.prototype),{constructor:qi,isPointLight:!0,copy:function(t){return Gi.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}),Yi.prototype=Object.assign(Object.create(ji.prototype),{constructor:Yi}),Ki.prototype=Object.assign(Object.create(Gi.prototype),{constructor:Ki,isDirectionalLight:!0,copy:function(t){return Gi.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),Zi.prototype=Object.assign(Object.create(Gi.prototype),{constructor:Zi,isAmbientLight:!0}),Ji.prototype=Object.assign(Object.create(Gi.prototype),{constructor:Ji,isRectAreaLight:!0,copy:function(t){return Gi.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this},toJSON:function(t){var e=Gi.prototype.toJSON.call(this,t);return e.object.width=this.width,e.object.height=this.height,e}});var Hs={arraySlice:function(t,e,i){return Hs.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==i?i:t.length)):t.slice(e,i)},convertArray:function(t,e,i){return!t||!i&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){function e(e,i){return t[e]-t[i]}for(var i=t.length,r=new Array(i),n=0;n!==i;++n)r[n]=n;return r.sort(e),r},sortedArray:function(t,e,i){for(var r=t.length,n=new t.constructor(r),a=0,o=0;o!==r;++a)for(var s=i[a]*e,c=0;c!==e;++c)n[o++]=t[s+c];return n},flattenJSON:function(t,e,i,r){for(var n=1,a=t[0];void 0!==a&&void 0===a[r];)a=t[n++];if(void 0!==a){var o=a[r];if(void 0!==o)if(Array.isArray(o))do{o=a[r],void 0!==o&&(e.push(a.time),i.push.apply(i,o)),a=t[n++]}while(void 0!==a);else if(void 0!==o.toArray)do{o=a[r],void 0!==o&&(e.push(a.time),o.toArray(i,i.length)),a=t[n++]}while(void 0!==a);else do{o=a[r],void 0!==o&&(e.push(a.time),i.push(o)),a=t[n++]}while(void 0!==a)}}};Object.assign(Qi.prototype,{evaluate:function(t){var e=this.parameterPositions,i=this._cachedIndex,r=e[i],n=e[i-1];t:{e:{var a;i:{r:if(!(t<r)){for(var o=i+2;;){if(void 0===r){if(t<n)break r;return i=e.length,this._cachedIndex=i,this.afterEnd_(i-1,t,n)}if(i===o)break;if(n=r,r=e[++i],t<r)break e}a=e.length;break i}{if(t>=n)break t;var s=e[1];t<s&&(i=2,n=s);for(var o=i-2;;){if(void 0===n)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(i===o)break;if(r=n,n=e[--i-1],t>=n)break e}a=i,i=0}}for(;i<a;){var c=i+a>>>1;t<e[c]?a=c:i=c+1}if(r=e[i],void 0===(n=e[i-1]))return this._cachedIndex=0,this.beforeStart_(0,t,r);if(void 0===r)return i=e.length,this._cachedIndex=i,this.afterEnd_(i-1,n,t)}this._cachedIndex=i,this.intervalChanged_(i,n,r)}return this.interpolate_(i,n,t,r)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){for(var e=this.resultBuffer,i=this.sampleValues,r=this.valueSize,n=t*r,a=0;a!==r;++a)e[a]=i[n+a];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Qi.prototype,{beforeStart_:Qi.prototype.copySampleValue_,afterEnd_:Qi.prototype.copySampleValue_}),$i.prototype=Object.assign(Object.create(Qi.prototype),{constructor:$i,DefaultSettings_:{endingStart:rs,endingEnd:rs},intervalChanged_:function(t,e,i){var r=this.parameterPositions,n=t-2,a=t+1,o=r[n],s=r[a];if(void 0===o)switch(this.getSettings_().endingStart){case 2401:n=t,o=2*e-i;break;case 2402:n=r.length-2,o=e+r[n]-r[n+1];break;default:n=t,o=i}if(void 0===s)switch(this.getSettings_().endingEnd){case 2401:a=t,s=2*i-e;break;case 2402:a=1,s=i+r[1]-r[0];break;default:a=t-1,s=e}var c=.5*(i-e),h=this.valueSize;this._weightPrev=c/(e-o),this._weightNext=c/(s-i),this._offsetPrev=n*h,this._offsetNext=a*h},interpolate_:function(t,e,i,r){for(var n=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=t*o,c=s-o,h=this._offsetPrev,l=this._offsetNext,u=this._weightPrev,p=this._weightNext,d=(i-e)/(r-e),f=d*d,m=f*d,g=-u*m+2*u*f-u*d,v=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*d+1,y=(-1-p)*m+(1.5+p)*f+.5*d,x=p*m-p*f,b=0;b!==o;++b)n[b]=g*a[h+b]+v*a[c+b]+y*a[s+b]+x*a[l+b];return n}}),tr.prototype=Object.assign(Object.create(Qi.prototype),{constructor:tr,interpolate_:function(t,e,i,r){for(var n=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=t*o,c=s-o,h=(i-e)/(r-e),l=1-h,u=0;u!==o;++u)n[u]=a[c+u]*l+a[s+u]*h;return n}}),er.prototype=Object.assign(Object.create(Qi.prototype),{constructor:er,interpolate_:function(t){return this.copySampleValue_(t-1)}});var Gs;Gs={TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:2301,InterpolantFactoryMethodDiscrete:function(t){return new er(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new tr(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new $i(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){var e;switch(t){case 2300:e=this.InterpolantFactoryMethodDiscrete;break;case 2301:e=this.InterpolantFactoryMethodLinear;break;case 2302:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){var i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(i);this.setInterpolation(this.DefaultInterpolation)}return void console.warn("THREE.KeyframeTrackPrototype:",i)}this.createInterpolant=e},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}},getValueSize:function(){return this.values.length/this.times.length},shift:function(t){if(0!==t)for(var e=this.times,i=0,r=e.length;i!==r;++i)e[i]+=t;return this},scale:function(t){if(1!==t)for(var e=this.times,i=0,r=e.length;i!==r;++i)e[i]*=t;return this},trim:function(t,e){for(var i=this.times,r=i.length,n=0,a=r-1;n!==r&&i[n]<t;)++n;for(;-1!==a&&i[a]>e;)--a;if(++a,0!==n||a!==r){n>=a&&(a=Math.max(a,1),n=a-1);var o=this.getValueSize();this.times=Hs.arraySlice(i,n,a),this.values=Hs.arraySlice(this.values,n*o,a*o)}return this},validate:function(){var t=!0,e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrackPrototype: Invalid value size in track.",this),t=!1);var i=this.times,r=this.values,n=i.length;0===n&&(console.error("THREE.KeyframeTrackPrototype: Track is empty.",this),t=!1);for(var a=null,o=0;o!==n;o++){var s=i[o];if("number"==typeof s&&isNaN(s)){console.error("THREE.KeyframeTrackPrototype: Time is not a valid number.",this,o,s),t=!1;break}if(null!==a&&a>s){console.error("THREE.KeyframeTrackPrototype: Out of order keys.",this,o,s,a),t=!1;break}a=s}if(void 0!==r&&Hs.isTypedArray(r))for(var o=0,c=r.length;o!==c;++o){var h=r[o];if(isNaN(h)){console.error("THREE.KeyframeTrackPrototype: Value is not a valid number.",this,o,h),t=!1;break}}return t},optimize:function(){for(var t=this.times,e=this.values,i=this.getValueSize(),r=2302===this.getInterpolation(),n=1,a=t.length-1,o=1;o<a;++o){var s=!1,c=t[o];if(c!==t[o+1]&&(1!==o||c!==c[0]))if(r)s=!0;else for(var h=o*i,l=h-i,u=h+i,p=0;p!==i;++p){var d=e[h+p];if(d!==e[l+p]||d!==e[u+p]){s=!0;break}}if(s){if(o!==n){t[n]=t[o];for(var f=o*i,m=n*i,p=0;p!==i;++p)e[m+p]=e[f+p]}++n}}if(a>0){t[n]=t[a];for(var f=a*i,m=n*i,p=0;p!==i;++p)e[m+p]=e[f+p];++n}return n!==t.length&&(this.times=Hs.arraySlice(t,0,n),this.values=Hs.arraySlice(e,0,n*i)),this}},rr.prototype=Object.assign(Object.create(Gs),{constructor:rr,ValueTypeName:"vector"}),nr.prototype=Object.assign(Object.create(Qi.prototype),{constructor:nr,interpolate_:function(t,e,i,r){for(var a=this.resultBuffer,o=this.sampleValues,s=this.valueSize,c=t*s,h=(i-e)/(r-e),l=c+s;c!==l;c+=4)n.slerpFlat(a,0,o,c-s,o,c,h);return a}}),ar.prototype=Object.assign(Object.create(Gs),{constructor:ar,ValueTypeName:"quaternion",DefaultInterpolation:2301,InterpolantFactoryMethodLinear:function(t){return new nr(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0}),or.prototype=Object.assign(Object.create(Gs),{constructor:or,ValueTypeName:"number"}),sr.prototype=Object.assign(Object.create(Gs),{constructor:sr,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),cr.prototype=Object.assign(Object.create(Gs),{constructor:cr,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),hr.prototype=Object.assign(Object.create(Gs),{constructor:hr,ValueTypeName:"color"}),lr.prototype=Gs,Gs.constructor=lr,Object.assign(lr,{parse:function(t){if(void 0===t.type)throw new Error("track type undefined, can not parse");var e=lr._getTrackTypeForValueTypeName(t.type);if(void 0===t.times){var i=[],r=[];Hs.flattenJSON(t.keys,i,r,"value"),t.times=i,t.values=r}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)},toJSON:function(t){var e,i=t.constructor;if(void 0!==i.toJSON)e=i.toJSON(t);else{e={name:t.name,times:Hs.convertArray(t.times,Array),values:Hs.convertArray(t.values,Array)};var r=t.getInterpolation();r!==t.DefaultInterpolation&&(e.interpolation=r)}return e.type=t.ValueTypeName,e},_getTrackTypeForValueTypeName:function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return or;case"vector":case"vector2":case"vector3":case"vector4":return rr;case"color":return hr;case"quaternion":return ar;case"bool":case"boolean":return cr;case"string":return sr}throw new Error("Unsupported typeName: "+t)}}),Object.assign(ur,{parse:function(t){for(var e=[],i=t.tracks,r=1/(t.fps||1),n=0,a=i.length;n!==a;++n)e.push(lr.parse(i[n]).scale(r));return new ur(t.name,t.duration,e)},toJSON:function(t){for(var e=[],i=t.tracks,r={name:t.name,duration:t.duration,tracks:e},n=0,a=i.length;n!==a;++n)e.push(lr.toJSON(i[n]));return r},CreateFromMorphTargetSequence:function(t,e,i,r){for(var n=e.length,a=[],o=0;o<n;o++){var s=[],c=[];s.push((o+n-1)%n,o,(o+1)%n),c.push(0,1,0);var h=Hs.getKeyframeOrder(s);s=Hs.sortedArray(s,1,h),c=Hs.sortedArray(c,1,h),r||0!==s[0]||(s.push(n),c.push(c[0])),a.push(new or(".morphTargetInfluences["+e[o].name+"]",s,c).scale(1/i))}return new ur(t,-1,a)},findByName:function(t,e){var i=t;if(!Array.isArray(t)){var r=t;i=r.geometry&&r.geometry.animations||r.animations}for(var n=0;n<i.length;n++)if(i[n].name===e)return i[n];return null},CreateClipsFromMorphTargetSequences:function(t,e,i){for(var r={},n=/^([\w-]*?)([\d]+)$/,a=0,o=t.length;a<o;a++){var s=t[a],c=s.name.match(n);if(c&&c.length>1){var h=c[1],l=r[h];l||(r[h]=l=[]),l.push(s)}}var u=[];for(var h in r)u.push(ur.CreateFromMorphTargetSequence(h,r[h],e,i));return u},parseAnimation:function(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var i=function(t,e,i,r,n){if(0!==i.length){var a=[],o=[];Hs.flattenJSON(i,a,o,r),0!==a.length&&n.push(new t(e,a,o))}},r=[],n=t.name||"default",a=t.length||-1,o=t.fps||30,s=t.hierarchy||[],c=0;c<s.length;c++){var h=s[c].keys;if(h&&0!==h.length)if(h[0].morphTargets){for(var l={},u=0;u<h.length;u++)if(h[u].morphTargets)for(var p=0;p<h[u].morphTargets.length;p++)l[h[u].morphTargets[p]]=-1;for(var d in l){for(var f=[],m=[],p=0;p!==h[u].morphTargets.length;++p){var g=h[u];f.push(g.time),m.push(g.morphTarget===d?1:0)}r.push(new or(".morphTargetInfluence["+d+"]",f,m))}a=l.length*(o||1)}else{var v=".bones["+e[c].name+"]";i(rr,v+".position",h,"pos",r),i(ar,v+".quaternion",h,"rot",r),i(rr,v+".scale",h,"scl",r)}}return 0===r.length?null:new ur(n,a,r)}}),Object.assign(ur.prototype,{resetDuration:function(){for(var t=this.tracks,e=0,i=0,r=t.length;i!==r;++i){var n=this.tracks[i];e=Math.max(e,n.times[n.times.length-1])}this.duration=e},trim:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},optimize:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}}),Object.assign(pr.prototype,{load:function(t,e,i,r){var n=this;new Ui(n.manager).load(t,function(t){e(n.parse(JSON.parse(t)))},i,r)},setTextures:function(t){this.textures=t},parse:function(t){function e(t){return void 0===r[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),r[t]}var r=this.textures,n=new Bs[t.type];if(void 0!==t.uuid&&(n.uuid=t.uuid),void 0!==t.name&&(n.name=t.name),void 0!==t.color&&n.color.setHex(t.color),void 0!==t.roughness&&(n.roughness=t.roughness),void 0!==t.metalness&&(n.metalness=t.metalness),void 0!==t.emissive&&n.emissive.setHex(t.emissive),void 0!==t.specular&&n.specular.setHex(t.specular),void 0!==t.shininess&&(n.shininess=t.shininess),void 0!==t.clearCoat&&(n.clearCoat=t.clearCoat),void 0!==t.clearCoatRoughness&&(n.clearCoatRoughness=t.clearCoatRoughness),void 0!==t.uniforms&&(n.uniforms=t.uniforms),void 0!==t.vertexShader&&(n.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(n.fragmentShader=t.fragmentShader),void 0!==t.vertexColors&&(n.vertexColors=t.vertexColors),void 0!==t.fog&&(n.fog=t.fog),void 0!==t.flatShading&&(n.flatShading=t.flatShading),void 0!==t.blending&&(n.blending=t.blending),void 0!==t.side&&(n.side=t.side),void 0!==t.opacity&&(n.opacity=t.opacity),void 0!==t.transparent&&(n.transparent=t.transparent),void 0!==t.alphaTest&&(n.alphaTest=t.alphaTest),void 0!==t.depthTest&&(n.depthTest=t.depthTest),void 0!==t.depthWrite&&(n.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(n.colorWrite=t.colorWrite),void 0!==t.wireframe&&(n.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(n.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(n.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(n.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(n.rotation=t.rotation),1!==t.linewidth&&(n.linewidth=t.linewidth),void 0!==t.dashSize&&(n.dashSize=t.dashSize),void 0!==t.gapSize&&(n.gapSize=t.gapSize),void 0!==t.scale&&(n.scale=t.scale),void 0!==t.skinning&&(n.skinning=t.skinning),void 0!==t.morphTargets&&(n.morphTargets=t.morphTargets),void 0!==t.dithering&&(n.dithering=t.dithering),void 0!==t.visible&&(n.visible=t.visible),void 0!==t.userData&&(n.userData=t.userData),void 0!==t.shading&&(n.flatShading=1===t.shading),void 0!==t.size&&(n.size=t.size),void 0!==t.sizeAttenuation&&(n.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(n.map=e(t.map)),void 0!==t.alphaMap&&(n.alphaMap=e(t.alphaMap),n.transparent=!0),void 0!==t.bumpMap&&(n.bumpMap=e(t.bumpMap)),void 0!==t.bumpScale&&(n.bumpScale=t.bumpScale),void 0!==t.normalMap&&(n.normalMap=e(t.normalMap)),void 0!==t.normalScale){var a=t.normalScale;!1===Array.isArray(a)&&(a=[a,a]),n.normalScale=(new i).fromArray(a)}return void 0!==t.displacementMap&&(n.displacementMap=e(t.displacementMap)),void 0!==t.displacementScale&&(n.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(n.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(n.roughnessMap=e(t.roughnessMap)),void 0!==t.metalnessMap&&(n.metalnessMap=e(t.metalnessMap)),void 0!==t.emissiveMap&&(n.emissiveMap=e(t.emissiveMap)),void 0!==t.emissiveIntensity&&(n.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(n.specularMap=e(t.specularMap)),void 0!==t.envMap&&(n.envMap=e(t.envMap)),void 0!==t.reflectivity&&(n.reflectivity=t.reflectivity),void 0!==t.lightMap&&(n.lightMap=e(t.lightMap)),void 0!==t.lightMapIntensity&&(n.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(n.aoMap=e(t.aoMap)),void 0!==t.aoMapIntensity&&(n.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(n.gradientMap=e(t.gradientMap)),n}}),Object.assign(dr.prototype,{load:function(t,e,i,r){var n=this;new Ui(n.manager).load(t,function(t){e(n.parse(JSON.parse(t)))},i,r)},parse:function(t){var e=new St,i=t.data.index;if(void 0!==i){var r=new Vs[i.type](i.array);e.setIndex(new ft(r,1))}var n=t.data.attributes;for(var o in n){var s=n[o],r=new Vs[s.type](s.array);e.addAttribute(o,new ft(r,s.itemSize,s.normalized))}var c=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==c)for(var h=0,l=c.length;h!==l;++h){var u=c[h];e.addGroup(u.start,u.count,u.materialIndex)}var p=t.data.boundingSphere;if(void 0!==p){var d=new a;void 0!==p.center&&d.fromArray(p.center),e.boundingSphere=new it(d,p.radius)}return e}});var Vs={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};fr.Handlers={handlers:[],add:function(t,e){this.handlers.push(t,e)},get:function(t){for(var e=this.handlers,i=0,r=e.length;i<r;i+=2){var n=e[i],a=e[i+1];if(n.test(t))return a}return null}},Object.assign(fr.prototype,{crossOrigin:void 0,extractUrlBase:function(t){var e=t.split("/");return 1===e.length?"./":(e.pop(),e.join("/")+"/")},initMaterials:function(t,e,i){for(var r=[],n=0;n<t.length;++n)r[n]=this.createMaterial(t[n],e,i);return r},createMaterial:function(){var t={NoBlending:Sa,NormalBlending:Aa,AdditiveBlending:Ra,SubtractiveBlending:Ca,MultiplyBlending:Pa,CustomBlending:La},e=new q,i=new Hi,r=new pr;return function(n,a,o){function s(t,e,r,n,s){var h,l=a+t,u=fr.Handlers.get(l);null!==u?h=u.load(l):(i.setCrossOrigin(o),h=i.load(l)),void 0!==e&&(h.repeat.fromArray(e),1!==e[0]&&(h.wrapS=yo),1!==e[1]&&(h.wrapT=yo)),void 0!==r&&h.offset.fromArray(r),void 0!==n&&("repeat"===n[0]&&(h.wrapS=yo),"mirror"===n[0]&&(h.wrapS=bo),"repeat"===n[1]&&(h.wrapT=yo),"mirror"===n[1]&&(h.wrapT=bo)),void 0!==s&&(h.anisotropy=s);var p=gs.generateUUID();return c[p]=h,p}var c={},h={uuid:gs.generateUUID(),type:"MeshLambertMaterial"};for(var l in n){var u=n[l];switch(l){case"DbgColor":case"DbgIndex":case"opticalDensity":case"illumination":break;case"DbgName":h.name=u;break;case"blending":h.blending=t[u];break;case"colorAmbient":case"mapAmbient":console.warn("THREE.Loader.createMaterial:",l,"is no longer supported.");break;case"colorDiffuse":h.color=e.fromArray(u).getHex();break;case"colorSpecular":h.specular=e.fromArray(u).getHex();break;case"colorEmissive":h.emissive=e.fromArray(u).getHex();break;case"specularCoef":h.shininess=u;break;case"shading":"basic"===u.toLowerCase()&&(h.type="MeshBasicMaterial"),"phong"===u.toLowerCase()&&(h.type="MeshPhongMaterial"),"standard"===u.toLowerCase()&&(h.type="MeshStandardMaterial");break;case"mapDiffuse":h.map=s(u,n.mapDiffuseRepeat,n.mapDiffuseOffset,n.mapDiffuseWrap,n.mapDiffuseAnisotropy);break;case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":break;case"mapEmissive":h.emissiveMap=s(u,n.mapEmissiveRepeat,n.mapEmissiveOffset,n.mapEmissiveWrap,n.mapEmissiveAnisotropy);break;case"mapEmissiveRepeat":case"mapEmissiveOffset":case"mapEmissiveWrap":case"mapEmissiveAnisotropy":break;case"mapLight":h.lightMap=s(u,n.mapLightRepeat,n.mapLightOffset,n.mapLightWrap,n.mapLightAnisotropy);break;case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":break;case"mapAO":h.aoMap=s(u,n.mapAORepeat,n.mapAOOffset,n.mapAOWrap,n.mapAOAnisotropy);break;case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":break;case"mapBump":h.bumpMap=s(u,n.mapBumpRepeat,n.mapBumpOffset,n.mapBumpWrap,n.mapBumpAnisotropy);break;case"mapBumpScale":h.bumpScale=u;break;case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":break;case"mapNormal":h.normalMap=s(u,n.mapNormalRepeat,n.mapNormalOffset,n.mapNormalWrap,n.mapNormalAnisotropy);break;case"mapNormalFactor":h.normalScale=[u,u];break;case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":break;case"mapSpecular":h.specularMap=s(u,n.mapSpecularRepeat,n.mapSpecularOffset,n.mapSpecularWrap,n.mapSpecularAnisotropy);break;case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":break;case"mapMetalness":h.metalnessMap=s(u,n.mapMetalnessRepeat,n.mapMetalnessOffset,n.mapMetalnessWrap,n.mapMetalnessAnisotropy);break;case"mapMetalnessRepeat":case"mapMetalnessOffset":case"mapMetalnessWrap":case"mapMetalnessAnisotropy":break;case"mapRoughness":h.roughnessMap=s(u,n.mapRoughnessRepeat,n.mapRoughnessOffset,n.mapRoughnessWrap,n.mapRoughnessAnisotropy);break;case"mapRoughnessRepeat":case"mapRoughnessOffset":case"mapRoughnessWrap":case"mapRoughnessAnisotropy":break;case"mapAlpha":h.alphaMap=s(u,n.mapAlphaRepeat,n.mapAlphaOffset,n.mapAlphaWrap,n.mapAlphaAnisotropy);break;case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":
case"mapAlphaAnisotropy":break;case"flipSided":h.side=_a;break;case"doubleSided":h.side=wa;break;case"transparency":console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"),h.opacity=u;break;case"depthTest":case"depthWrite":case"colorWrite":case"opacity":case"reflectivity":case"transparent":case"visible":case"wireframe":h[l]=u;break;case"vertexColors":!0===u&&(h.vertexColors=Ta),"face"===u&&(h.vertexColors=Ma);break;default:console.error("THREE.Loader.createMaterial: Unsupported",l,u)}}return"MeshBasicMaterial"===h.type&&delete h.emissive,"MeshPhongMaterial"!==h.type&&delete h.specular,h.opacity<1&&(h.transparent=!0),r.setTextures(c),r.parse(h)}}()}),Object.assign(mr.prototype,{load:function(t,e,i,r){var n=this,a=this.texturePath&&"string"==typeof this.texturePath?this.texturePath:fr.prototype.extractUrlBase(t),o=new Ui(this.manager);o.setWithCredentials(this.withCredentials),o.load(t,function(i){var r=JSON.parse(i),o=r.metadata;if(void 0!==o){var s=o.type;if(void 0!==s){if("object"===s.toLowerCase())return void console.error("THREE.JSONLoader: "+t+" should be loaded with THREE.ObjectLoader instead.");if("scene"===s.toLowerCase())return void console.error("THREE.JSONLoader: "+t+" should be loaded with THREE.SceneLoader instead.")}}var c=n.parse(r,a);e(c.geometry,c.materials)},i,r)},setTexturePath:function(t){this.texturePath=t},parse:function(){function t(t,e){function r(t,e){return t&1<<e}var n,o,s,c,h,l,u,p,d,f,m,g,v,y,x,b,_,w,E,M,T,S,A,R,C,P,L,I=t.faces,k=t.vertices,O=t.normals,D=t.colors,U=t.scale,B=0;if(void 0!==t.uvs){for(n=0;n<t.uvs.length;n++)t.uvs[n].length&&B++;for(n=0;n<B;n++)e.faceVertexUvs[n]=[]}for(c=0,h=k.length;c<h;)w=new a,w.x=k[c++]*U,w.y=k[c++]*U,w.z=k[c++]*U,e.vertices.push(w);for(c=0,h=I.length;c<h;)if(f=I[c++],m=r(f,0),g=r(f,1),v=r(f,3),y=r(f,4),x=r(f,5),b=r(f,6),_=r(f,7),m){if(M=new pt,M.a=I[c],M.b=I[c+1],M.c=I[c+3],T=new pt,T.a=I[c+1],T.b=I[c+2],T.c=I[c+3],c+=4,g&&(d=I[c++],M.materialIndex=d,T.materialIndex=d),s=e.faces.length,v)for(n=0;n<B;n++)for(R=t.uvs[n],e.faceVertexUvs[n][s]=[],e.faceVertexUvs[n][s+1]=[],o=0;o<4;o++)p=I[c++],P=R[2*p],L=R[2*p+1],C=new i(P,L),2!==o&&e.faceVertexUvs[n][s].push(C),0!==o&&e.faceVertexUvs[n][s+1].push(C);if(y&&(u=3*I[c++],M.normal.set(O[u++],O[u++],O[u]),T.normal.copy(M.normal)),x)for(n=0;n<4;n++)u=3*I[c++],A=new a(O[u++],O[u++],O[u]),2!==n&&M.vertexNormals.push(A),0!==n&&T.vertexNormals.push(A);if(b&&(l=I[c++],S=D[l],M.color.setHex(S),T.color.setHex(S)),_)for(n=0;n<4;n++)l=I[c++],S=D[l],2!==n&&M.vertexColors.push(new q(S)),0!==n&&T.vertexColors.push(new q(S));e.faces.push(M),e.faces.push(T)}else{if(E=new pt,E.a=I[c++],E.b=I[c++],E.c=I[c++],g&&(d=I[c++],E.materialIndex=d),s=e.faces.length,v)for(n=0;n<B;n++)for(R=t.uvs[n],e.faceVertexUvs[n][s]=[],o=0;o<3;o++)p=I[c++],P=R[2*p],L=R[2*p+1],C=new i(P,L),e.faceVertexUvs[n][s].push(C);if(y&&(u=3*I[c++],E.normal.set(O[u++],O[u++],O[u])),x)for(n=0;n<3;n++)u=3*I[c++],A=new a(O[u++],O[u++],O[u]),E.vertexNormals.push(A);if(b&&(l=I[c++],E.color.setHex(D[l])),_)for(n=0;n<3;n++)l=I[c++],E.vertexColors.push(new q(D[l]));e.faces.push(E)}}function e(t,e){var i=void 0!==t.influencesPerVertex?t.influencesPerVertex:2;if(t.skinWeights)for(var r=0,n=t.skinWeights.length;r<n;r+=i){var a=t.skinWeights[r],o=i>1?t.skinWeights[r+1]:0,s=i>2?t.skinWeights[r+2]:0,h=i>3?t.skinWeights[r+3]:0;e.skinWeights.push(new c(a,o,s,h))}if(t.skinIndices)for(var r=0,n=t.skinIndices.length;r<n;r+=i){var l=t.skinIndices[r],u=i>1?t.skinIndices[r+1]:0,p=i>2?t.skinIndices[r+2]:0,d=i>3?t.skinIndices[r+3]:0;e.skinIndices.push(new c(l,u,p,d))}e.bones=t.bones,e.bones&&e.bones.length>0&&(e.skinWeights.length!==e.skinIndices.length||e.skinIndices.length!==e.vertices.length)&&console.warn("When skinning, number of vertices ("+e.vertices.length+"), skinIndices ("+e.skinIndices.length+"), and skinWeights ("+e.skinWeights.length+") should match.")}function r(t,e){var i=t.scale;if(void 0!==t.morphTargets)for(var r=0,n=t.morphTargets.length;r<n;r++){e.morphTargets[r]={},e.morphTargets[r].name=t.morphTargets[r].name,e.morphTargets[r].vertices=[];for(var o=e.morphTargets[r].vertices,s=t.morphTargets[r].vertices,c=0,h=s.length;c<h;c+=3){var l=new a;l.x=s[c]*i,l.y=s[c+1]*i,l.z=s[c+2]*i,o.push(l)}}if(void 0!==t.morphColors&&t.morphColors.length>0){console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');for(var u=e.faces,p=t.morphColors[0].colors,r=0,n=u.length;r<n;r++)u[r].color.fromArray(p,3*r)}}function n(t,e){var i=[],r=[];void 0!==t.animation&&r.push(t.animation),void 0!==t.animations&&(t.animations.length?r=r.concat(t.animations):r.push(t.animations));for(var n=0;n<r.length;n++){var a=ur.parseAnimation(r[n],e.bones);a&&i.push(a)}if(e.morphTargets){var o=ur.CreateClipsFromMorphTargetSequences(e.morphTargets,10);i=i.concat(o)}i.length>0&&(e.animations=i)}return function(i,a){void 0!==i.data&&(i=i.data),void 0!==i.scale?i.scale=1/i.scale:i.scale=1;var o=new dt;return t(i,o),e(i,o),r(i,o),n(i,o),o.computeFaceNormals(),o.computeBoundingSphere(),void 0===i.materials||0===i.materials.length?{geometry:o}:{geometry:o,materials:fr.prototype.initMaterials(i.materials,a,this.crossOrigin)}}}()}),Object.assign(gr.prototype,{load:function(t,e,i,r){""===this.texturePath&&(this.texturePath=t.substring(0,t.lastIndexOf("/")+1));var n=this;new Ui(n.manager).load(t,function(i){var a=null;try{a=JSON.parse(i)}catch(e){return void 0!==r&&r(e),void console.error("THREE:ObjectLoader: Can't parse "+t+".",e.message)}var o=a.metadata;if(void 0===o||void 0===o.type||"geometry"===o.type.toLowerCase())return void console.error("THREE.ObjectLoader: Can't load "+t+". Use THREE.JSONLoader instead.");n.parse(a,e)},i,r)},setTexturePath:function(t){this.texturePath=t},setCrossOrigin:function(t){this.crossOrigin=t},parse:function(t,e){var i=this.parseGeometries(t.geometries),r=this.parseImages(t.images,function(){void 0!==e&&e(o)}),n=this.parseTextures(t.textures,r),a=this.parseMaterials(t.materials,n),o=this.parseObject(t.object,i,a);return t.animations&&(o.animations=this.parseAnimations(t.animations)),void 0!==t.images&&0!==t.images.length||void 0!==e&&e(o),o},parseGeometries:function(t){var e={};if(void 0!==t)for(var i=new mr,r=new dr,n=0,a=t.length;n<a;n++){var o,s=t[n];switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":o=new Us[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":o=new Us[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":o=new Us[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":o=new Us[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":o=new Us[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":o=new Us[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":o=new Us[s.type](s.radius,s.detail);break;case"RingGeometry":case"RingBufferGeometry":o=new Us[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":o=new Us[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":o=new Us[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);break;case"LatheGeometry":case"LatheBufferGeometry":o=new Us[s.type](s.points,s.segments,s.phiStart,s.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":o=new Us[s.type](s.vertices,s.indices,s.radius,s.details);break;case"BufferGeometry":o=r.parse(s);break;case"Geometry":o=i.parse(s,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+s.type+'"');continue}o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),e[s.uuid]=o}return e},parseMaterials:function(t,e){var i={};if(void 0!==t){var r=new pr;r.setTextures(e);for(var n=0,a=t.length;n<a;n++){var o=t[n];if("MultiMaterial"===o.type){for(var s=[],c=0;c<o.materials.length;c++)s.push(r.parse(o.materials[c]));i[o.uuid]=s}else i[o.uuid]=r.parse(o)}}return i},parseAnimations:function(t){for(var e=[],i=0;i<t.length;i++){var r=ur.parse(t[i]);e.push(r)}return e},parseImages:function(t,e){var i=this,r={};if(void 0!==t&&t.length>0){var n=new Di(e),a=new Ni(n);a.setCrossOrigin(this.crossOrigin);for(var o=0,s=t.length;o<s;o++){var c=t[o],h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url)?c.url:i.texturePath+c.url;r[c.uuid]=function(t){return i.manager.itemStart(t),a.load(t,function(){i.manager.itemEnd(t)},void 0,function(){i.manager.itemEnd(t),i.manager.itemError(t)})}(h)}}return r},parseTextures:function(t,e){function i(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}var r={};if(void 0!==t)for(var n=0,a=t.length;n<a;n++){var o=t[n];void 0===o.image&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),void 0===e[o.image]&&console.warn("THREE.ObjectLoader: Undefined image",o.image);var c=new s(e[o.image]);c.needsUpdate=!0,c.uuid=o.uuid,void 0!==o.name&&(c.name=o.name),void 0!==o.mapping&&(c.mapping=i(o.mapping,js)),void 0!==o.offset&&c.offset.fromArray(o.offset),void 0!==o.repeat&&c.repeat.fromArray(o.repeat),void 0!==o.center&&c.center.fromArray(o.center),void 0!==o.rotation&&(c.rotation=o.rotation),void 0!==o.wrap&&(c.wrapS=i(o.wrap[0],Ws),c.wrapT=i(o.wrap[1],Ws)),void 0!==o.minFilter&&(c.minFilter=i(o.minFilter,Xs)),void 0!==o.magFilter&&(c.magFilter=i(o.magFilter,Xs)),void 0!==o.anisotropy&&(c.anisotropy=o.anisotropy),void 0!==o.flipY&&(c.flipY=o.flipY),r[o.uuid]=c}return r},parseObject:function(){var t=new r;return function(e,i,r){function n(t){return void 0===i[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),i[t]}function a(t){if(void 0!==t){if(Array.isArray(t)){for(var e=[],i=0,n=t.length;i<n;i++){var a=t[i];void 0===r[a]&&console.warn("THREE.ObjectLoader: Undefined material",a),e.push(r[a])}return e}return void 0===r[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),r[t]}}var o;switch(e.type){case"Scene":o=new Me,void 0!==e.background&&Number.isInteger(e.background)&&(o.background=new q(e.background)),void 0!==e.fog&&("Fog"===e.fog.type?o.fog=new Ee(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(o.fog=new we(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":o=new me(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(o.focus=e.focus),void 0!==e.zoom&&(o.zoom=e.zoom),void 0!==e.filmGauge&&(o.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(o.filmOffset=e.filmOffset),void 0!==e.view&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new ut(e.left,e.right,e.top,e.bottom,e.near,e.far);break;case"AmbientLight":o=new Zi(e.color,e.intensity);break;case"DirectionalLight":o=new Ki(e.color,e.intensity);break;case"PointLight":o=new qi(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new Ji(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new Xi(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":o=new Vi(e.color,e.groundColor,e.intensity);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":var s=n(e.geometry),c=a(e.material);o=s.bones&&s.bones.length>0?new Le(s,c):new Ut(s,c);break;case"LOD":o=new Re;break;case"Line":o=new ke(n(e.geometry),a(e.material),e.mode);break;case"LineLoop":o=new De(n(e.geometry),a(e.material));break;case"LineSegments":o=new Oe(n(e.geometry),a(e.material));break;case"PointCloud":case"Points":o=new Be(n(e.geometry),a(e.material));break;case"Sprite":o=new Ae(a(e.material));break;case"Group":o=new Fe;break;default:o=new ht}if(o.uuid=e.uuid,void 0!==e.name&&(o.name=e.name),void 0!==e.matrix?(t.fromArray(e.matrix),t.decompose(o.position,o.quaternion,o.scale)):(void 0!==e.position&&o.position.fromArray(e.position),void 0!==e.rotation&&o.rotation.fromArray(e.rotation),void 0!==e.quaternion&&o.quaternion.fromArray(e.quaternion),void 0!==e.scale&&o.scale.fromArray(e.scale)),void 0!==e.castShadow&&(o.castShadow=e.castShadow),void 0!==e.receiveShadow&&(o.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(o.shadow.bias=e.shadow.bias),void 0!==e.shadow.radius&&(o.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&o.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(o.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(o.visible=e.visible),void 0!==e.userData&&(o.userData=e.userData),void 0!==e.children)for(var h=e.children,l=0;l<h.length;l++)o.add(this.parseObject(h[l],i,r));if("LOD"===e.type)for(var u=e.levels,p=0;p<u.length;p++){var d=u[p],f=o.getObjectByProperty("uuid",d.object);void 0!==f&&o.addLevel(f,d.distance)}return o}}()});var js={UVMapping:300,CubeReflectionMapping:lo,CubeRefractionMapping:uo,EquirectangularReflectionMapping:po,EquirectangularRefractionMapping:fo,SphericalReflectionMapping:mo,CubeUVReflectionMapping:go,CubeUVRefractionMapping:vo},Ws={RepeatWrapping:yo,ClampToEdgeWrapping:xo,MirroredRepeatWrapping:bo},Xs={NearestFilter:_o,NearestMipMapNearestFilter:wo,NearestMipMapLinearFilter:Eo,LinearFilter:Mo,LinearMipMapNearestFilter:To,LinearMipMapLinearFilter:So};Object.assign(Ar.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){var i=this.getUtoTmapping(t);return this.getPoint(i,e)},getPoints:function(t){void 0===t&&(t=5);for(var e=[],i=0;i<=t;i++)e.push(this.getPoint(i/t));return e},getSpacedPoints:function(t){void 0===t&&(t=5);for(var e=[],i=0;i<=t;i++)e.push(this.getPointAt(i/t));return e},getLength:function(){var t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var e,i,r=[],n=this.getPoint(0),a=0;for(r.push(0),i=1;i<=t;i++)e=this.getPoint(i/t),a+=e.distanceTo(n),r.push(a),n=e;return this.cacheArcLengths=r,r},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){var i,r=this.getLengths(),n=0,a=r.length;i=e||t*r[a-1];for(var o,s=0,c=a-1;s<=c;)if(n=Math.floor(s+(c-s)/2),(o=r[n]-i)<0)s=n+1;else{if(!(o>0)){c=n;break}c=n-1}if(n=c,r[n]===i)return n/(a-1);var h=r[n];return(n+(i-h)/(r[n+1]-h))/(a-1)},getTangent:function(t){var e=t-1e-4,i=t+1e-4;e<0&&(e=0),i>1&&(i=1);var r=this.getPoint(e);return this.getPoint(i).clone().sub(r).normalize()},getTangentAt:function(t){var e=this.getUtoTmapping(t);return this.getTangent(e)},computeFrenetFrames:function(t,e){var i,n,o,s=new a,c=[],h=[],l=[],u=new a,p=new r;for(i=0;i<=t;i++)n=i/t,c[i]=this.getTangentAt(n),c[i].normalize();h[0]=new a,l[0]=new a;var d=Number.MAX_VALUE,f=Math.abs(c[0].x),m=Math.abs(c[0].y),g=Math.abs(c[0].z);for(f<=d&&(d=f,s.set(1,0,0)),m<=d&&(d=m,s.set(0,1,0)),g<=d&&s.set(0,0,1),u.crossVectors(c[0],s).normalize(),h[0].crossVectors(c[0],u),l[0].crossVectors(c[0],h[0]),i=1;i<=t;i++)h[i]=h[i-1].clone(),l[i]=l[i-1].clone(),u.crossVectors(c[i-1],c[i]),u.length()>Number.EPSILON&&(u.normalize(),o=Math.acos(gs.clamp(c[i-1].dot(c[i]),-1,1)),h[i].applyMatrix4(p.makeRotationAxis(u,o))),l[i].crossVectors(c[i],h[i]);if(!0===e)for(o=Math.acos(gs.clamp(h[0].dot(h[t]),-1,1)),o/=t,c[0].dot(u.crossVectors(h[0],h[t]))>0&&(o=-o),i=1;i<=t;i++)h[i].applyMatrix4(p.makeRotationAxis(c[i],o*i)),l[i].crossVectors(c[i],h[i]);return{tangents:c,normals:h,binormals:l}},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}),Rr.prototype=Object.create(Ar.prototype),Rr.prototype.constructor=Rr,Rr.prototype.isLineCurve=!0,Rr.prototype.getPoint=function(t,e){var r=e||new i;return 1===t?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(t).add(this.v1)),r},Rr.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},Rr.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()},Rr.prototype.copy=function(t){return Ar.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Cr.prototype=Object.assign(Object.create(Ar.prototype),{constructor:Cr,add:function(t){this.curves.push(t)},closePath:function(){var t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Rr(e,t))},getPoint:function(t){for(var e=t*this.getLength(),i=this.getCurveLengths(),r=0;r<i.length;){if(i[r]>=e){var n=i[r]-e,a=this.curves[r],o=a.getLength(),s=0===o?0:1-n/o;return a.getPointAt(s)}r++}return null},getLength:function(){var t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var t=[],e=0,i=0,r=this.curves.length;i<r;i++)e+=this.curves[i].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t){void 0===t&&(t=40);for(var e=[],i=0;i<=t;i++)e.push(this.getPoint(i/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t){t=t||12;for(var e,i=[],r=0,n=this.curves;r<n.length;r++)for(var a=n[r],o=a&&a.isEllipseCurve?2*t:a&&a.isLineCurve?1:a&&a.isSplineCurve?t*a.points.length:t,s=a.getPoints(o),c=0;c<s.length;c++){var h=s[c];e&&e.equals(h)||(i.push(h),e=h)}return this.autoClose&&i.length>1&&!i[i.length-1].equals(i[0])&&i.push(i[0]),i},copy:function(t){Ar.prototype.copy.call(this,t),this.curves=[];for(var e=0,i=t.curves.length;e<i;e++){var r=t.curves[e];this.curves.push(r.clone())}return this.autoClose=t.autoClose,this}}),Pr.prototype=Object.create(Ar.prototype),Pr.prototype.constructor=Pr,Pr.prototype.isEllipseCurve=!0,Pr.prototype.getPoint=function(t,e){for(var r=e||new i,n=2*Math.PI,a=this.aEndAngle-this.aStartAngle,o=Math.abs(a)<Number.EPSILON;a<0;)a+=n;for(;a>n;)a-=n;a<Number.EPSILON&&(a=o?0:n),!0!==this.aClockwise||o||(a===n?a=-n:a-=n);var s=this.aStartAngle+t*a,c=this.aX+this.xRadius*Math.cos(s),h=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){var l=Math.cos(this.aRotation),u=Math.sin(this.aRotation),p=c-this.aX,d=h-this.aY;c=p*l-d*u+this.aX,h=p*u+d*l+this.aY}return r.set(c,h)},Pr.prototype.copy=function(t){return Ar.prototype.copy.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},Lr.prototype=Object.create(Ar.prototype),Lr.prototype.constructor=Lr,Lr.prototype.isSplineCurve=!0,Lr.prototype.getPoint=function(t,e){var r=e||new i,n=this.points,a=(n.length-1)*t,o=Math.floor(a),s=a-o,c=n[0===o?o:o-1],h=n[o],l=n[o>n.length-2?n.length-1:o+1],u=n[o>n.length-3?n.length-1:o+2];return r.set(vr(s,c.x,h.x,l.x,u.x),vr(s,c.y,h.y,l.y,u.y)),r},Lr.prototype.copy=function(t){Ar.prototype.copy.call(this,t),this.points=[];for(var e=0,i=t.points.length;e<i;e++){var r=t.points[e];this.points.push(r.clone())}return this},Ir.prototype=Object.create(Ar.prototype),Ir.prototype.constructor=Ir,Ir.prototype.isCubicBezierCurve=!0,Ir.prototype.getPoint=function(t,e){var r=e||new i,n=this.v0,a=this.v1,o=this.v2,s=this.v3;return r.set(Sr(t,n.x,a.x,o.x,s.x),Sr(t,n.y,a.y,o.y,s.y)),r},Ir.prototype.copy=function(t){return Ar.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},kr.prototype=Object.create(Ar.prototype),kr.prototype.constructor=kr,kr.prototype.isQuadraticBezierCurve=!0,kr.prototype.getPoint=function(t,e){var r=e||new i,n=this.v0,a=this.v1,o=this.v2;return r.set(_r(t,n.x,a.x,o.x),_r(t,n.y,a.y,o.y)),r},kr.prototype.copy=function(t){return Ar.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this};var qs=Object.assign(Object.create(Cr.prototype),{setFromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(var e=1,i=t.length;e<i;e++)this.lineTo(t[e].x,t[e].y)},moveTo:function(t,e){this.currentPoint.set(t,e)},lineTo:function(t,e){var r=new Rr(this.currentPoint.clone(),new i(t,e));this.curves.push(r),this.currentPoint.set(t,e)},quadraticCurveTo:function(t,e,r,n){var a=new kr(this.currentPoint.clone(),new i(t,e),new i(r,n));this.curves.push(a),this.currentPoint.set(r,n)},bezierCurveTo:function(t,e,r,n,a,o){var s=new Ir(this.currentPoint.clone(),new i(t,e),new i(r,n),new i(a,o));this.curves.push(s),this.currentPoint.set(a,o)},splineThru:function(t){var e=[this.currentPoint.clone()].concat(t),i=new Lr(e);this.curves.push(i),this.currentPoint.copy(t[t.length-1])},arc:function(t,e,i,r,n,a){var o=this.currentPoint.x,s=this.currentPoint.y;this.absarc(t+o,e+s,i,r,n,a)},absarc:function(t,e,i,r,n,a){this.absellipse(t,e,i,i,r,n,a)},ellipse:function(t,e,i,r,n,a,o,s){var c=this.currentPoint.x,h=this.currentPoint.y;this.absellipse(t+c,e+h,i,r,n,a,o,s)},absellipse:function(t,e,i,r,n,a,o,s){var c=new Pr(t,e,i,r,n,a,o,s);if(this.curves.length>0){var h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);var l=c.getPoint(1);this.currentPoint.copy(l)},copy:function(t){return Cr.prototype.copy.call(this,t),this.currentPoint.copy(t.currentPoint),this}});Or.prototype=qs,qs.constructor=Or,Dr.prototype=Object.assign(Object.create(qs),{constructor:Dr,getPointsHoles:function(t){for(var e=[],i=0,r=this.holes.length;i<r;i++)e[i]=this.holes[i].getPoints(t);return e},extractPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},copy:function(t){Or.prototype.copy.call(this,t),this.holes=[];for(var e=0,i=t.holes.length;e<i;e++){var r=t.holes[e];this.holes.push(r.clone())}return this}}),Object.assign(Ur.prototype,{moveTo:function(t,e){this.currentPath=new Or,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e)},lineTo:function(t,e){this.currentPath.lineTo(t,e)},quadraticCurveTo:function(t,e,i,r){this.currentPath.quadraticCurveTo(t,e,i,r)},bezierCurveTo:function(t,e,i,r,n,a){this.currentPath.bezierCurveTo(t,e,i,r,n,a)},splineThru:function(t){this.currentPath.splineThru(t)},toShapes:function(t,e){function i(t){for(var e=[],i=0,r=t.length;i<r;i++){var n=t[i],a=new Dr;a.curves=n.curves,e.push(a)}return e}var r=Ds.isClockWise,n=this.subPaths;if(0===n.length)return[];if(!0===e)return i(n);var a,o,s,c=[];if(1===n.length)return o=n[0],s=new Dr,s.curves=o.curves,c.push(s),c;var h=!r(n[0].getPoints());h=t?!h:h;var l,u=[],p=[],d=[],f=0;p[f]=void 0,d[f]=[];for(var m=0,g=n.length;m<g;m++)o=n[m],l=o.getPoints(),a=r(l),a=t?!a:a,a?(!h&&p[f]&&f++,p[f]={s:new Dr,p:l},p[f].s.curves=o.curves,h&&f++,d[f]=[]):d[f].push({h:o,p:l[0]});if(!p[0])return i(n);if(p.length>1){for(var v=!1,y=[],x=0,b=p.length;x<b;x++)u[x]=[];for(var x=0,b=p.length;x<b;x++)for(var _=d[x],w=0;w<_.length;w++){for(var E=_[w],M=!0,T=0;T<p.length;T++)(function(t,e){for(var i=e.length,r=!1,n=i-1,a=0;a<i;n=a++){var o=e[n],s=e[a],c=s.x-o.x,h=s.y-o.y;if(Math.abs(h)>Number.EPSILON){if(h<0&&(o=e[a],c=-c,s=e[n],h=-h),t.y<o.y||t.y>s.y)continue;if(t.y===o.y){if(t.x===o.x)return!0}else{var l=h*(t.x-o.x)-c*(t.y-o.y);if(0===l)return!0;if(l<0)continue;r=!r}}else{if(t.y!==o.y)continue;if(s.x<=t.x&&t.x<=o.x||o.x<=t.x&&t.x<=s.x)return!0}}return r})(E.p,p[T].p)&&(x!==T&&y.push({froms:x,tos:T,hole:w}),M?(M=!1,u[T].push(E)):v=!0);M&&u[x].push(E)}y.length>0&&(v||(d=u))}for(var S,m=0,A=p.length;m<A;m++){s=p[m].s,c.push(s),S=d[m];for(var R=0,C=S.length;R<C;R++)s.holes.push(S[R].h)}return c}}),Object.assign(Br.prototype,{isFont:!0,generateShapes:function(t,e,i){function r(t,e,r,a){var o=n.glyphs[t]||n.glyphs["?"];if(o){var s,c,h,l,u,p,d,f,m,g,v,y=new Ur,x=[];if(o.o)for(var b=o._cachedOutline||(o._cachedOutline=o.o.split(" ")),_=0,w=b.length;_<w;){var E=b[_++];switch(E){case"m":s=b[_++]*e+r,c=b[_++]*e+a,y.moveTo(s,c);break;case"l":s=b[_++]*e+r,c=b[_++]*e+a,y.lineTo(s,c);break;case"q":if(h=b[_++]*e+r,l=b[_++]*e+a,d=b[_++]*e+r,f=b[_++]*e+a,y.quadraticCurveTo(d,f,h,l),v=x[x.length-1]){u=v.x,p=v.y;for(var M=1;M<=i;M++){var T=M/i;_r(T,u,d,h),_r(T,p,f,l)}}break;case"b":if(h=b[_++]*e+r,l=b[_++]*e+a,d=b[_++]*e+r,f=b[_++]*e+a,m=b[_++]*e+r,g=b[_++]*e+a,y.bezierCurveTo(d,f,m,g,h,l),v=x[x.length-1]){u=v.x,p=v.y;for(var M=1;M<=i;M++){var T=M/i;Sr(T,u,d,m,h),Sr(T,p,f,g,l)}}}}return{offsetX:o.ha*e,path:y}}}void 0===e&&(e=100),void 0===i&&(i=4);for(var n=this.data,a=function(t){for(var i=String(t).split(""),a=e/n.resolution,o=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*a,s=0,c=0,h=[],l=0;l<i.length;l++){var u=i[l];if("\n"===u)s=0,c-=o;else{var p=r(u,a,s,c);s+=p.offsetX,h.push(p.path)}}return h}(t),o=[],s=0,c=a.length;s<c;s++)Array.prototype.push.apply(o,a[s].toShapes());return o}}),Object.assign(Fr.prototype,{load:function(t,e,i,r){var n=this,a=new Ui(this.manager);a.setPath(this.path),a.load(t,function(t){var i;try{i=JSON.parse(t)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),i=JSON.parse(t.substring(65,t.length-2))}var r=n.parse(i);e&&e(r)},i,r)},parse:function(t){return new Br(t)},setPath:function(t){return this.path=t,this}});var Ys,Ks={getContext:function(){return void 0===Ys&&(Ys=new(window.AudioContext||window.webkitAudioContext)),Ys},setContext:function(t){Ys=t}};Object.assign(Nr.prototype,{load:function(t,e,i,r){var n=new Ui(this.manager);n.setResponseType("arraybuffer"),n.load(t,function(t){Ks.getContext().decodeAudioData(t,function(t){e(t)})},i,r)}}),Object.assign(zr.prototype,{update:function(){var t,e,i,n,a,o,s,c,h=new r,l=new r;return function(r){if(t!==this||e!==r.focus||i!==r.fov||n!==r.aspect*this.aspect||a!==r.near||o!==r.far||s!==r.zoom||c!==this.eyeSep){t=this,e=r.focus,i=r.fov,n=r.aspect*this.aspect,a=r.near,o=r.far,s=r.zoom;var u=r.projectionMatrix.clone();c=this.eyeSep/2;var p,d,f=c*a/e,m=a*Math.tan(gs.DEG2RAD*i*.5)/s;l.elements[12]=-c,h.elements[12]=c,p=-m*n+f,d=m*n+f,u.elements[0]=2*a/(d-p),u.elements[8]=(d+p)/(d-p),this.cameraL.projectionMatrix.copy(u),p=-m*n-f,d=m*n-f,u.elements[0]=2*a/(d-p),u.elements[8]=(d+p)/(d-p),this.cameraR.projectionMatrix.copy(u)}this.cameraL.matrixWorld.copy(r.matrixWorld).multiply(l),this.cameraR.matrixWorld.copy(r.matrixWorld).multiply(h)}}()}),Hr.prototype=Object.create(ht.prototype),Hr.prototype.constructor=Hr,Gr.prototype=Object.assign(Object.create(ht.prototype),{constructor:Gr,getInput:function(){return this.gain},removeFilter:function(){null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null)},getFilter:function(){return this.filter},setFilter:function(t){null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination)},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(t){this.gain.gain.value=t},updateMatrixWorld:function(){var t=new a,e=new n,i=new a,r=new a;return function(n){ht.prototype.updateMatrixWorld.call(this,n);var a=this.context.listener,o=this.up;this.matrixWorld.decompose(t,e,i),r.set(0,0,-1).applyQuaternion(e),a.positionX?(a.positionX.setValueAtTime(t.x,this.context.currentTime),a.positionY.setValueAtTime(t.y,this.context.currentTime),a.positionZ.setValueAtTime(t.z,this.context.currentTime),a.forwardX.setValueAtTime(r.x,this.context.currentTime),a.forwardY.setValueAtTime(r.y,this.context.currentTime),a.forwardZ.setValueAtTime(r.z,this.context.currentTime),a.upX.setValueAtTime(o.x,this.context.currentTime),a.upY.setValueAtTime(o.y,this.context.currentTime),a.upZ.setValueAtTime(o.z,this.context.currentTime)):(a.setPosition(t.x,t.y,t.z),a.setOrientation(r.x,r.y,r.z,o.x,o.y,o.z))}}()}),Vr.prototype=Object.assign(Object.create(ht.prototype),{constructor:Vr,getOutput:function(){return this.gain},setNodeSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this},setBuffer:function(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");var t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.onended=this.onEnded.bind(this),t.playbackRate.setValueAtTime(this.playbackRate,this.startTime),this.startTime=this.context.currentTime,t.start(this.startTime,this.offset),this.isPlaying=!0,this.source=t,this.connect()},pause:function(){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(!0===this.isPlaying&&(this.source.stop(),this.offset+=(this.context.currentTime-this.startTime)*this.playbackRate,this.isPlaying=!1),this)},stop:function(){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(this.source.stop(),this.offset=0,this.isPlaying=!1,this)},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(t){return t||(t=[]),!0===this.isPlaying?(this.disconnect(),this.filters=t,this.connect()):this.filters=t,this},getFilter:function(){return this.getFilters()[0]},setFilter:function(t){return this.setFilters(t?[t]:[])},setPlaybackRate:function(t){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setValueAtTime(this.playbackRate,this.context.currentTime),this)},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(t){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this)},getVolume:function(){return this.gain.gain.value},setVolume:function(t){return this.gain.gain.value=t,this}}),jr.prototype=Object.assign(Object.create(Vr.prototype),{constructor:jr,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(t){this.panner.refDistance=t},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(t){this.panner.rolloffFactor=t},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(t){this.panner.distanceModel=t},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(t){this.panner.maxDistance=t},updateMatrixWorld:function(){var t=new a;return function(e){ht.prototype.updateMatrixWorld.call(this,e),
t.setFromMatrixPosition(this.matrixWorld),this.panner.setPosition(t.x,t.y,t.z)}}()}),Object.assign(Wr.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var t=0,e=this.getFrequencyData(),i=0;i<e.length;i++)t+=e[i];return t/e.length}}),Object.assign(Xr.prototype,{accumulate:function(t,e){var i=this.buffer,r=this.valueSize,n=t*r+r,a=this.cumulativeWeight;if(0===a){for(var o=0;o!==r;++o)i[n+o]=i[o];a=e}else{a+=e;var s=e/a;this._mixBufferRegion(i,n,0,s,r)}this.cumulativeWeight=a},apply:function(t){var e=this.valueSize,i=this.buffer,r=t*e+e,n=this.cumulativeWeight,a=this.binding;if(this.cumulativeWeight=0,n<1){var o=3*e;this._mixBufferRegion(i,r,o,1-n,e)}for(var s=e,c=e+e;s!==c;++s)if(i[s]!==i[s+e]){a.setValue(i,r);break}},saveOriginalState:function(){var t=this.binding,e=this.buffer,i=this.valueSize,r=3*i;t.getValue(e,r);for(var n=i,a=r;n!==a;++n)e[n]=e[r+n%i];this.cumulativeWeight=0},restoreOriginalState:function(){var t=3*this.valueSize;this.binding.setValue(this.buffer,t)},_select:function(t,e,i,r,n){if(r>=.5)for(var a=0;a!==n;++a)t[e+a]=t[i+a]},_slerp:function(t,e,i,r){n.slerpFlat(t,e,t,e,t,i,r)},_lerp:function(t,e,i,r,n){for(var a=1-r,o=0;o!==n;++o){var s=e+o;t[s]=t[s]*a+t[i+o]*r}}}),Object.assign(qr.prototype,{getValue:function(t,e){this.bind();var i=this._targetGroup.nCachedObjects_,r=this._bindings[i];void 0!==r&&r.getValue(t,e)},setValue:function(t,e){for(var i=this._bindings,r=this._targetGroup.nCachedObjects_,n=i.length;r!==n;++r)i[r].setValue(t,e)},bind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].bind()},unbind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].unbind()}}),Object.assign(Yr,{Composite:qr,create:function(t,e,i){return t&&t.isAnimationObjectGroup?new Yr.Composite(t,e,i):new Yr(t,e,i)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(/[^\w-]/g,"")},parseTrackName:function(){var t=/((?:[\w-]+[\/:])*)/,e=/([\w-\.]+)?/,i=/(?:\.([\w-]+)(?:\[(.+)\])?)?/,r=/\.([\w-]+)(?:\[(.+)\])?/,n=new RegExp("^"+t.source+e.source+i.source+r.source+"$"),a=["material","materials","bones"];return function(t){var e=n.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);var i={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},r=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){var o=i.nodeName.substring(r+1);-1!==a.indexOf(o)&&(i.nodeName=i.nodeName.substring(0,r),i.objectName=o)}if(null===i.propertyName||0===i.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return i}}(),findNode:function(t,e){if(!e||""===e||"root"===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){var i=function(t){for(var i=0;i<t.bones.length;i++){var r=t.bones[i];if(r.name===e)return r}return null}(t.skeleton);if(i)return i}if(t.children){var r=function(t){for(var i=0;i<t.length;i++){var n=t[i];if(n.name===e||n.uuid===e)return n;var a=r(n.children);if(a)return a}return null},n=r(t.children);if(n)return n}return null}}),Object.assign(Yr.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(t,e){for(var i=this.resolvedProperty,r=0,n=i.length;r!==n;++r)t[e++]=i[r]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[function(t,e){this.targetObject[this.propertyName]=t[e]},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){for(var i=this.resolvedProperty,r=0,n=i.length;r!==n;++r)i[r]=t[e++]},function(t,e){for(var i=this.resolvedProperty,r=0,n=i.length;r!==n;++r)i[r]=t[e++];this.targetObject.needsUpdate=!0},function(t,e){for(var i=this.resolvedProperty,r=0,n=i.length;r!==n;++r)i[r]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},bind:function(){var t=this.node,e=this.parsedPath,i=e.objectName,r=e.propertyName,n=e.propertyIndex;if(t||(t=Yr.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(i){var a=e.objectIndex;switch(i){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(var o=0;o<t.length;o++)if(t[o].name===a){a=o;break}break;default:if(void 0===t[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[i]}if(void 0!==a){if(void 0===t[a])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[a]}}var s=t[r];if(void 0===s){var c=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+r+" but it wasn't found.",t)}var h=this.Versioning.None;void 0!==t.needsUpdate?(h=this.Versioning.NeedsUpdate,this.targetObject=t):void 0!==t.matrixWorldNeedsUpdate&&(h=this.Versioning.MatrixWorldNeedsUpdate,this.targetObject=t);var l=this.BindingType.Direct;if(void 0!==n){if("morphTargetInfluences"===r){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(t.geometry.isBufferGeometry){if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);for(var o=0;o<this.node.geometry.morphAttributes.position.length;o++)if(t.geometry.morphAttributes.position[o].name===n){n=o;break}}else{if(!t.geometry.morphTargets)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",this);for(var o=0;o<this.node.geometry.morphTargets.length;o++)if(t.geometry.morphTargets[o].name===n){n=o;break}}}l=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=n}else void 0!==s.fromArray&&void 0!==s.toArray?(l=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(l=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=r;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][h]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(Yr.prototype,{_getValue_unbound:Yr.prototype.getValue,_setValue_unbound:Yr.prototype.setValue}),Object.assign(Kr.prototype,{isAnimationObjectGroup:!0,add:function(){for(var t=this._objects,e=t.length,i=this.nCachedObjects_,r=this._indicesByUUID,n=this._paths,a=this._parsedPaths,o=this._bindings,s=o.length,c=0,h=arguments.length;c!==h;++c){var l=arguments[c],u=l.uuid,p=r[u],d=void 0;if(void 0===p){p=e++,r[u]=p,t.push(l);for(var f=0,m=s;f!==m;++f)o[f].push(new Yr(l,n[f],a[f]))}else if(p<i){d=t[p];var g=--i,v=t[g];r[v.uuid]=p,t[p]=v,r[u]=g,t[g]=l;for(var f=0,m=s;f!==m;++f){var y=o[f],x=y[g],b=y[p];y[p]=x,void 0===b&&(b=new Yr(l,n[f],a[f])),y[g]=b}}else t[p]!==d&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=i},remove:function(){for(var t=this._objects,e=this.nCachedObjects_,i=this._indicesByUUID,r=this._bindings,n=r.length,a=0,o=arguments.length;a!==o;++a){var s=arguments[a],c=s.uuid,h=i[c];if(void 0!==h&&h>=e){var l=e++,u=t[l];i[u.uuid]=h,t[h]=u,i[c]=l,t[l]=s;for(var p=0,d=n;p!==d;++p){var f=r[p],m=f[l],g=f[h];f[h]=m,f[l]=g}}}this.nCachedObjects_=e},uncache:function(){for(var t=this._objects,e=t.length,i=this.nCachedObjects_,r=this._indicesByUUID,n=this._bindings,a=n.length,o=0,s=arguments.length;o!==s;++o){var c=arguments[o],h=c.uuid,l=r[h];if(void 0!==l)if(delete r[h],l<i){var u=--i,p=t[u],d=--e,f=t[d];r[p.uuid]=l,t[l]=p,r[f.uuid]=u,t[u]=f,t.pop();for(var m=0,g=a;m!==g;++m){var v=n[m],y=v[u],x=v[d];v[l]=y,v[u]=x,v.pop()}}else{var d=--e,f=t[d];r[f.uuid]=l,t[l]=f,t.pop();for(var m=0,g=a;m!==g;++m){var v=n[m];v[l]=v[d],v.pop()}}}this.nCachedObjects_=i},subscribe_:function(t,e){var i=this._bindingsIndicesByPath,r=i[t],n=this._bindings;if(void 0!==r)return n[r];var a=this._paths,o=this._parsedPaths,s=this._objects,c=s.length,h=this.nCachedObjects_,l=new Array(c);r=n.length,i[t]=r,a.push(t),o.push(e),n.push(l);for(var u=h,p=s.length;u!==p;++u){var d=s[u];l[u]=new Yr(d,t,e)}return l},unsubscribe_:function(t){var e=this._bindingsIndicesByPath,i=e[t];if(void 0!==i){var r=this._paths,n=this._parsedPaths,a=this._bindings,o=a.length-1,s=a[o];e[t[o]]=i,a[i]=s,a.pop(),n[i]=n[o],n.pop(),r[i]=r[o],r.pop()}}}),Object.assign(Zr.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(t){return this._startTime=t,this},setLoop:function(t,e){return this.loop=t,this.repetitions=e,this},setEffectiveWeight:function(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(t){return this._scheduleFading(t,0,1)},fadeOut:function(t){return this._scheduleFading(t,1,0)},crossFadeFrom:function(t,e,i){if(t.fadeOut(e),this.fadeIn(e),i){var r=this._clip.duration,n=t._clip.duration,a=n/r,o=r/n;t.warp(1,a,e),this.warp(o,1,e)}return this},crossFadeTo:function(t,e,i){return t.crossFadeFrom(this,e,i)},stopFading:function(){var t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},setEffectiveTimeScale:function(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(t){return this.timeScale=this._clip.duration/t,this.stopWarping()},syncWith:function(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()},halt:function(t){return this.warp(this._effectiveTimeScale,0,t)},warp:function(t,e,i){var r=this._mixer,n=r.time,a=this._timeScaleInterpolant,o=this.timeScale;null===a&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);var s=a.parameterPositions,c=a.sampleValues;return s[0]=n,s[1]=n+i,c[0]=t/o,c[1]=e/o,this},stopWarping:function(){var t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(t,e,i,r){if(!this.enabled)return void this._updateWeight(t);var n=this._startTime;if(null!==n){var a=(t-n)*i;if(a<0||0===i)return;this._startTime=null,e=i*a}e*=this._updateTimeScale(t);var o=this._updateTime(e),s=this._updateWeight(t);if(s>0)for(var c=this._interpolants,h=this._propertyBindings,l=0,u=c.length;l!==u;++l)c[l].evaluate(o),h[l].accumulate(r,s)},_updateWeight:function(t){var e=0;if(this.enabled){e=this.weight;var i=this._weightInterpolant;if(null!==i){var r=i.evaluate(t)[0];e*=r,t>i.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=e,e},_updateTimeScale:function(t){var e=0;if(!this.paused){e=this.timeScale;var i=this._timeScaleInterpolant;if(null!==i){e*=i.evaluate(t)[0],t>i.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e},_updateTime:function(t){var e=this.time+t;if(0===t)return e;var i=this._clip.duration,r=this.loop,n=this._loopCount;if(2200===r){-1===n&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(e>=i)e=i;else{if(!(e<0))break t;e=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{var a=2202===r;if(-1===n&&(t>=0?(n=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),e>=i||e<0){var o=Math.floor(e/i);e-=i*o,n+=Math.abs(o);var s=this.repetitions-n;if(s<0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,e=t>0?i:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(0===s){var c=t<0;this._setEndings(c,!c,a)}else this._setEndings(!1,!1,a);this._loopCount=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}if(a&&1==(1&n))return this.time=e,i-e}return this.time=e,e},_setEndings:function(t,e,i){var r=this._interpolantSettings;i?(r.endingStart=2401,r.endingEnd=2401):(r.endingStart=t?this.zeroSlopeAtStart?2401:rs:2402,r.endingEnd=e?this.zeroSlopeAtEnd?2401:rs:2402)},_scheduleFading:function(t,e,i){var r=this._mixer,n=r.time,a=this._weightInterpolant;null===a&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);var o=a.parameterPositions,s=a.sampleValues;return o[0]=n,s[0]=e,o[1]=n+t,s[1]=i,this}}),Object.assign(Jr.prototype,e.prototype,{_bindAction:function(t,e){var i=t._localRoot||this._root,r=t._clip.tracks,n=r.length,a=t._propertyBindings,o=t._interpolants,s=i.uuid,c=this._bindingsByRootAndName,h=c[s];void 0===h&&(h={},c[s]=h);for(var l=0;l!==n;++l){var u=r[l],p=u.name,d=h[p];if(void 0!==d)a[l]=d;else{if(void 0!==(d=a[l])){null===d._cacheIndex&&(++d.referenceCount,this._addInactiveBinding(d,s,p));continue}var f=e&&e._propertyBindings[l].binding.parsedPath;d=new Xr(Yr.create(i,p,f),u.ValueTypeName,u.getValueSize()),++d.referenceCount,this._addInactiveBinding(d,s,p),a[l]=d}o[l].resultBuffer=d.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){var e=(t._localRoot||this._root).uuid,i=t._clip.uuid,r=this._actionsByClip[i];this._bindAction(t,r&&r.knownActions[0]),this._addInactiveAction(t,i,e)}for(var n=t._propertyBindings,a=0,o=n.length;a!==o;++a){var s=n[a];0==s.useCount++&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){for(var e=t._propertyBindings,i=0,r=e.length;i!==r;++i){var n=e[i];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},_isActiveAction:function(t){var e=t._cacheIndex;return null!==e&&e<this._nActiveActions},_addInactiveAction:function(t,e,i){var r=this._actions,n=this._actionsByClip,a=n[e];if(void 0===a)a={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,n[e]=a;else{var o=a.knownActions;t._byClipCacheIndex=o.length,o.push(t)}t._cacheIndex=r.length,r.push(t),a.actionByRoot[i]=t},_removeInactiveAction:function(t){var e=this._actions,i=e[e.length-1],r=t._cacheIndex;i._cacheIndex=r,e[r]=i,e.pop(),t._cacheIndex=null;var n=t._clip.uuid,a=this._actionsByClip,o=a[n],s=o.knownActions,c=s[s.length-1],h=t._byClipCacheIndex;c._byClipCacheIndex=h,s[h]=c,s.pop(),t._byClipCacheIndex=null,delete o.actionByRoot[(t._localRoot||this._root).uuid],0===s.length&&delete a[n],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){for(var e=t._propertyBindings,i=0,r=e.length;i!==r;++i){var n=e[i];0==--n.referenceCount&&this._removeInactiveBinding(n)}},_lendAction:function(t){var e=this._actions,i=t._cacheIndex,r=this._nActiveActions++,n=e[r];t._cacheIndex=r,e[r]=t,n._cacheIndex=i,e[i]=n},_takeBackAction:function(t){var e=this._actions,i=t._cacheIndex,r=--this._nActiveActions,n=e[r];t._cacheIndex=r,e[r]=t,n._cacheIndex=i,e[i]=n},_addInactiveBinding:function(t,e,i){var r=this._bindingsByRootAndName,n=r[e],a=this._bindings;void 0===n&&(n={},r[e]=n),n[i]=t,t._cacheIndex=a.length,a.push(t)},_removeInactiveBinding:function(t){var e=this._bindings,i=t.binding,r=i.rootNode.uuid,n=i.path,a=this._bindingsByRootAndName,o=a[r],s=e[e.length-1],c=t._cacheIndex;s._cacheIndex=c,e[c]=s,e.pop(),delete o[n];t:{for(var h in o)break t;delete a[r]}},_lendBinding:function(t){var e=this._bindings,i=t._cacheIndex,r=this._nActiveBindings++,n=e[r];t._cacheIndex=r,e[r]=t,n._cacheIndex=i,e[i]=n},_takeBackBinding:function(t){var e=this._bindings,i=t._cacheIndex,r=--this._nActiveBindings,n=e[r];t._cacheIndex=r,e[r]=t,n._cacheIndex=i,e[i]=n},_lendControlInterpolant:function(){var t=this._controlInterpolants,e=this._nActiveControlInterpolants++,i=t[e];return void 0===i&&(i=new tr(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),i.__cacheIndex=e,t[e]=i),i},_takeBackControlInterpolant:function(t){var e=this._controlInterpolants,i=t.__cacheIndex,r=--this._nActiveControlInterpolants,n=e[r];t.__cacheIndex=r,e[r]=t,n.__cacheIndex=i,e[i]=n},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(t,e){var i=e||this._root,r=i.uuid,n="string"==typeof t?ur.findByName(i,t):t,a=null!==n?n.uuid:t,o=this._actionsByClip[a],s=null;if(void 0!==o){var c=o.actionByRoot[r];if(void 0!==c)return c;s=o.knownActions[0],null===n&&(n=s._clip)}if(null===n)return null;var h=new Zr(this,n,e);return this._bindAction(h,s),this._addInactiveAction(h,a,r),h},existingAction:function(t,e){var i=e||this._root,r=i.uuid,n="string"==typeof t?ur.findByName(i,t):t,a=n?n.uuid:t,o=this._actionsByClip[a];return void 0!==o?o.actionByRoot[r]||null:null},stopAllAction:function(){var t=this._actions,e=this._nActiveActions,i=this._bindings,r=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var n=0;n!==e;++n)t[n].reset();for(var n=0;n!==r;++n)i[n].useCount=0;return this},update:function(t){t*=this.timeScale;for(var e=this._actions,i=this._nActiveActions,r=this.time+=t,n=Math.sign(t),a=this._accuIndex^=1,o=0;o!==i;++o){e[o]._update(r,t,n,a)}for(var s=this._bindings,c=this._nActiveBindings,o=0;o!==c;++o)s[o].apply(a);return this},getRoot:function(){return this._root},uncacheClip:function(t){var e=this._actions,i=t.uuid,r=this._actionsByClip,n=r[i];if(void 0!==n){for(var a=n.knownActions,o=0,s=a.length;o!==s;++o){var c=a[o];this._deactivateAction(c);var h=c._cacheIndex,l=e[e.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,l._cacheIndex=h,e[h]=l,e.pop(),this._removeInactiveBindingsForAction(c)}delete r[i]}},uncacheRoot:function(t){var e=t.uuid,i=this._actionsByClip;for(var r in i){var n=i[r].actionByRoot,a=n[e];void 0!==a&&(this._deactivateAction(a),this._removeInactiveAction(a))}var o=this._bindingsByRootAndName,s=o[e];if(void 0!==s)for(var c in s){var h=s[c];h.restoreOriginalState(),this._removeInactiveBinding(h)}},uncacheAction:function(t,e){var i=this.existingAction(t,e);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}}),Qr.prototype.clone=function(){return new Qr(void 0===this.value.clone?this.value:this.value.clone())},$r.prototype=Object.assign(Object.create(St.prototype),{constructor:$r,isInstancedBufferGeometry:!0,copy:function(t){return St.prototype.copy.call(this,t),this.maxInstancedCount=t.maxInstancedCount,this},clone:function(){return(new this.constructor).copy(this)}}),Object.defineProperties(tn.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(tn.prototype,{isInterleavedBufferAttribute:!0,setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this},setXYZ:function(t,e,i,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=r,this},setXYZW:function(t,e,i,r,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=r,this.data.array[t+3]=n,this}}),Object.defineProperty(en.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(en.prototype,{isInterleavedBuffer:!0,setArray:function(t){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==t?t.length/this.stride:0,this.array=t},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.dynamic=t.dynamic,this},copyAt:function(t,e,i){t*=this.stride,i*=e.stride;for(var r=0,n=this.stride;r<n;r++)this.array[t+r]=e.array[i+r];return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(t){return this.onUploadCallback=t,this}}),rn.prototype=Object.assign(Object.create(en.prototype),{constructor:rn,isInstancedInterleavedBuffer:!0,copy:function(t){return en.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this}}),nn.prototype=Object.assign(Object.create(ft.prototype),{constructor:nn,isInstancedBufferAttribute:!0,copy:function(t){return ft.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this}}),Object.assign(an.prototype,{linePrecision:1,set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize()):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld)):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(t,e){var i=[];return sn(t,this,i,e),i.sort(on),i},intersectObjects:function(t,e){var i=[];if(!1===Array.isArray(t))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(var r=0,n=t.length;r<n;r++)sn(t[r],this,i,e);return i.sort(on),i}}),Object.assign(cn.prototype,{start:function(){this.startTime=("undefined"==typeof performance?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var e=("undefined"==typeof performance?Date:performance).now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}),Object.assign(hn.prototype,{set:function(t,e,i){return this.radius=t,this.phi=e,this.theta=i,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this},makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(t){return this.radius=t.length(),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t.x,t.z),this.phi=Math.acos(gs.clamp(t.y/this.radius,-1,1))),this}}),Object.assign(ln.prototype,{set:function(t,e,i){return this.radius=t,this.theta=e,this.y=i,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this},setFromVector3:function(t){return this.radius=Math.sqrt(t.x*t.x+t.z*t.z),this.theta=Math.atan2(t.x,t.z),this.y=t.y,this}}),un.prototype=Object.create(ht.prototype),un.prototype.constructor=un,un.prototype.isImmediateRenderObject=!0,pn.prototype=Object.create(Oe.prototype),pn.prototype.constructor=pn,pn.prototype.update=function(){var t=new a,e=new a,i=new o;return function(){var r=["a","b","c"];this.object.updateMatrixWorld(!0),i.getNormalMatrix(this.object.matrixWorld);var n=this.object.matrixWorld,a=this.geometry.attributes.position,o=this.object.geometry;if(o&&o.isGeometry)for(var s=o.vertices,c=o.faces,h=0,l=0,u=c.length;l<u;l++)for(var p=c[l],d=0,f=p.vertexNormals.length;d<f;d++){var m=s[p[r[d]]],g=p.vertexNormals[d];t.copy(m).applyMatrix4(n),e.copy(g).applyMatrix3(i).normalize().multiplyScalar(this.size).add(t),a.setXYZ(h,t.x,t.y,t.z),h+=1,a.setXYZ(h,e.x,e.y,e.z),h+=1}else if(o&&o.isBufferGeometry)for(var v=o.attributes.position,y=o.attributes.normal,h=0,d=0,f=v.count;d<f;d++)t.set(v.getX(d),v.getY(d),v.getZ(d)).applyMatrix4(n),e.set(y.getX(d),y.getY(d),y.getZ(d)),e.applyMatrix3(i).normalize().multiplyScalar(this.size).add(t),a.setXYZ(h,t.x,t.y,t.z),h+=1,a.setXYZ(h,e.x,e.y,e.z),h+=1;a.needsUpdate=!0}}(),dn.prototype=Object.create(ht.prototype),dn.prototype.constructor=dn,dn.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},dn.prototype.update=function(){var t=new a,e=new a;return function(){this.light.updateMatrixWorld();var i=this.light.distance?this.light.distance:1e3,r=i*Math.tan(this.light.angle);this.cone.scale.set(r,r,i),t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(e.sub(t)),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}(),mn.prototype=Object.create(Oe.prototype),mn.prototype.constructor=mn,mn.prototype.updateMatrixWorld=function(){var t=new a,e=new r,i=new r;return function(r){var n=this.bones,a=this.geometry,o=a.getAttribute("position");i.getInverse(this.root.matrixWorld);for(var s=0,c=0;s<n.length;s++){var h=n[s];h.parent&&h.parent.isBone&&(e.multiplyMatrices(i,h.matrixWorld),t.setFromMatrixPosition(e),o.setXYZ(c,t.x,t.y,t.z),e.multiplyMatrices(i,h.parent.matrixWorld),t.setFromMatrixPosition(e),o.setXYZ(c+1,t.x,t.y,t.z),c+=2)}a.getAttribute("position").needsUpdate=!0,ht.prototype.updateMatrixWorld.call(this,r)}}(),gn.prototype=Object.create(Ut.prototype),gn.prototype.constructor=gn,gn.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},gn.prototype.update=function(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)},vn.prototype=Object.create(ht.prototype),vn.prototype.constructor=vn,vn.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},vn.prototype.update=function(){var t=.5*this.light.width,e=.5*this.light.height,i=this.line.geometry.attributes.position,r=i.array;r[0]=t,r[1]=-e,r[2]=0,r[3]=t,r[4]=e,r[5]=0,r[6]=-t,r[7]=e,r[8]=0,r[9]=-t,r[10]=-e,r[11]=0,r[12]=t,r[13]=-e,r[14]=0,i.needsUpdate=!0,void 0!==this.color?this.line.material.color.set(this.color):this.line.material.color.copy(this.light.color)},yn.prototype=Object.create(ht.prototype),yn.prototype.constructor=yn,yn.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},yn.prototype.update=function(){var t=new a,e=new q,i=new q;return function(){var r=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{var n=r.geometry.getAttribute("color");e.copy(this.light.color),i.copy(this.light.groundColor);for(var a=0,o=n.count;a<o;a++){var s=a<o/2?e:i;n.setXYZ(a,s.r,s.g,s.b)}n.needsUpdate=!0}r.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate())}}(),xn.prototype=Object.create(Oe.prototype),xn.prototype.constructor=xn,bn.prototype=Object.create(Oe.prototype),bn.prototype.constructor=bn,_n.prototype=Object.create(Oe.prototype),_n.prototype.constructor=_n,_n.prototype.update=function(){var t=new a,e=new a,i=new o;return function(){this.object.updateMatrixWorld(!0),i.getNormalMatrix(this.object.matrixWorld);for(var r=this.object.matrixWorld,n=this.geometry.attributes.position,a=this.object.geometry,o=a.vertices,s=a.faces,c=0,h=0,l=s.length;h<l;h++){var u=s[h],p=u.normal;t.copy(o[u.a]).add(o[u.b]).add(o[u.c]).divideScalar(3).applyMatrix4(r),e.copy(p).applyMatrix3(i).normalize().multiplyScalar(this.size).add(t),n.setXYZ(c,t.x,t.y,t.z),c+=1,n.setXYZ(c,e.x,e.y,e.z),c+=1}n.needsUpdate=!0}}(),wn.prototype=Object.create(ht.prototype),wn.prototype.constructor=wn,wn.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},wn.prototype.update=function(){var t=new a,e=new a,i=new a;return function(){t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),i.subVectors(e,t),this.lightPlane.lookAt(i),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(i),this.targetLine.scale.z=i.length()}}(),En.prototype=Object.create(Oe.prototype),En.prototype.constructor=En,En.prototype.update=function(){function t(t,a,o,s){r.set(a,o,s).unproject(n);var c=i[t];if(void 0!==c)for(var h=e.getAttribute("position"),l=0,u=c.length;l<u;l++)h.setXYZ(c[l],r.x,r.y,r.z)}var e,i,r=new a,n=new lt;return function(){e=this.geometry,i=this.pointMap;n.projectionMatrix.copy(this.camera.projectionMatrix),t("c",0,0,-1),t("t",0,0,1),t("n1",-1,-1,-1),t("n2",1,-1,-1),t("n3",-1,1,-1),t("n4",1,1,-1),t("f1",-1,-1,1),t("f2",1,-1,1),t("f3",-1,1,1),t("f4",1,1,1),t("u1",.7,1.1,-1),t("u2",-.7,1.1,-1),t("u3",0,2,-1),t("cf1",-1,0,1),t("cf2",1,0,1),t("cf3",0,-1,1),t("cf4",0,1,1),t("cn1",-1,0,-1),t("cn2",1,0,-1),t("cn3",0,-1,-1),t("cn4",0,1,-1),e.getAttribute("position").needsUpdate=!0}}(),Mn.prototype=Object.create(Oe.prototype),Mn.prototype.constructor=Mn,Mn.prototype.update=function(){var t=new et
;return function(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&t.setFromObject(this.object),!t.isEmpty()){var i=t.min,r=t.max,n=this.geometry.attributes.position,a=n.array;a[0]=r.x,a[1]=r.y,a[2]=r.z,a[3]=i.x,a[4]=r.y,a[5]=r.z,a[6]=i.x,a[7]=i.y,a[8]=r.z,a[9]=r.x,a[10]=i.y,a[11]=r.z,a[12]=r.x,a[13]=r.y,a[14]=i.z,a[15]=i.x,a[16]=r.y,a[17]=i.z,a[18]=i.x,a[19]=i.y,a[20]=i.z,a[21]=r.x,a[22]=i.y,a[23]=i.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}}}(),Mn.prototype.setFromObject=function(t){return this.object=t,this.update(),this},Tn.prototype=Object.create(Oe.prototype),Tn.prototype.constructor=Tn,Tn.prototype.updateMatrixWorld=function(t){var e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),ht.prototype.updateMatrixWorld.call(this,t))},Sn.prototype=Object.create(ke.prototype),Sn.prototype.constructor=Sn,Sn.prototype.updateMatrixWorld=function(t){var e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),this.scale.set(.5*this.size,.5*this.size,e),this.lookAt(this.plane.normal),ht.prototype.updateMatrixWorld.call(this,t)};var Zs,Js;An.prototype=Object.create(ht.prototype),An.prototype.constructor=An,An.prototype.setDirection=function(){var t,e=new a;return function(i){i.y>.99999?this.quaternion.set(0,0,0,1):i.y<-.99999?this.quaternion.set(1,0,0,0):(e.set(i.z,0,-i.x).normalize(),t=Math.acos(i.y),this.quaternion.setFromAxisAngle(e,t))}}(),An.prototype.setLength=function(t,e,i){void 0===e&&(e=.2*t),void 0===i&&(i=.2*e),this.line.scale.set(1,Math.max(0,t-e),1),this.line.updateMatrix(),this.cone.scale.set(i,e,i),this.cone.position.y=t,this.cone.updateMatrix()},An.prototype.setColor=function(t){this.line.material.color.copy(t),this.cone.material.color.copy(t)},Rn.prototype=Object.create(Oe.prototype),Rn.prototype.constructor=Rn;var Qs=new a,$s=new Cn,tc=new Cn,ec=new Cn;Pn.prototype=Object.create(Ar.prototype),Pn.prototype.constructor=Pn,Pn.prototype.isCatmullRomCurve3=!0,Pn.prototype.getPoint=function(t,e){var i=e||new a,r=this.points,n=r.length,o=(n-(this.closed?0:1))*t,s=Math.floor(o),c=o-s;this.closed?s+=s>0?0:(Math.floor(Math.abs(s)/r.length)+1)*r.length:0===c&&s===n-1&&(s=n-2,c=1);var h,l,u,p;if(this.closed||s>0?h=r[(s-1)%n]:(Qs.subVectors(r[0],r[1]).add(r[0]),h=Qs),l=r[s%n],u=r[(s+1)%n],this.closed||s+2<n?p=r[(s+2)%n]:(Qs.subVectors(r[n-1],r[n-2]).add(r[n-1]),p=Qs),"centripetal"===this.curveType||"chordal"===this.curveType){var d="chordal"===this.curveType?.5:.25,f=Math.pow(h.distanceToSquared(l),d),m=Math.pow(l.distanceToSquared(u),d),g=Math.pow(u.distanceToSquared(p),d);m<1e-4&&(m=1),f<1e-4&&(f=m),g<1e-4&&(g=m),$s.initNonuniformCatmullRom(h.x,l.x,u.x,p.x,f,m,g),tc.initNonuniformCatmullRom(h.y,l.y,u.y,p.y,f,m,g),ec.initNonuniformCatmullRom(h.z,l.z,u.z,p.z,f,m,g)}else"catmullrom"===this.curveType&&($s.initCatmullRom(h.x,l.x,u.x,p.x,this.tension),tc.initCatmullRom(h.y,l.y,u.y,p.y,this.tension),ec.initCatmullRom(h.z,l.z,u.z,p.z,this.tension));return i.set($s.calc(c),tc.calc(c),ec.calc(c)),i},Pn.prototype.copy=function(t){Ar.prototype.copy.call(this,t),this.points=[];for(var e=0,i=t.points.length;e<i;e++){var r=t.points[e];this.points.push(r.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},Ln.prototype=Object.create(Ar.prototype),Ln.prototype.constructor=Ln,Ln.prototype.isCubicBezierCurve3=!0,Ln.prototype.getPoint=function(t,e){var i=e||new a,r=this.v0,n=this.v1,o=this.v2,s=this.v3;return i.set(Sr(t,r.x,n.x,o.x,s.x),Sr(t,r.y,n.y,o.y,s.y),Sr(t,r.z,n.z,o.z,s.z)),i},Ln.prototype.copy=function(t){return Ar.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},In.prototype=Object.create(Ar.prototype),In.prototype.constructor=In,In.prototype.isQuadraticBezierCurve3=!0,In.prototype.getPoint=function(t,e){var i=e||new a,r=this.v0,n=this.v1,o=this.v2;return i.set(_r(t,r.x,n.x,o.x),_r(t,r.y,n.y,o.y),_r(t,r.z,n.z,o.z)),i},In.prototype.copy=function(t){return Ar.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},kn.prototype=Object.create(Ar.prototype),kn.prototype.constructor=kn,kn.prototype.isLineCurve3=!0,kn.prototype.getPoint=function(t,e){var i=e||new a;return 1===t?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i},kn.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},kn.prototype.copy=function(t){return Ar.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},On.prototype=Object.create(Pr.prototype),On.prototype.constructor=On,On.prototype.isArcCurve=!0;var ic={createMultiMaterialObject:function(t,e){for(var i=new Fe,r=0,n=e.length;r<n;r++)i.add(new Ut(t,e[r]));return i},detach:function(t,e,i){t.applyMatrix(e.matrixWorld),e.remove(t),i.add(t)},attach:function(t,e,i){t.applyMatrix((new r).getInverse(i.matrixWorld)),e.remove(t),i.add(t)}};Ar.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(Ar.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},Object.assign(Cr.prototype,{createPointsGeometry:function(t){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var e=this.getPoints(t);return this.createGeometry(e)},createSpacedPointsGeometry:function(t){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var e=this.getSpacedPoints(t);return this.createGeometry(e)},createGeometry:function(t){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");for(var e=new dt,i=0,r=t.length;i<r;i++){var n=t[i];e.vertices.push(new a(n.x,n.y,n.z||0))}return e}}),Object.assign(Or.prototype,{fromPoints:function(t){console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)}}),ea.prototype=Object.create(Pn.prototype),ia.prototype=Object.create(Pn.prototype),ra.prototype=Object.create(Pn.prototype),Object.assign(ra.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),xn.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},mn.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(Y.prototype,{center:function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},size:function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)}}),Object.assign(et.prototype,{center:function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionSphere:function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},size:function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)}}),Ot.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},Object.assign(gs,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),gs.floorPowerOfTwo(t)},nextPowerOfTwo:function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),gs.ceilPowerOfTwo(t)}}),Object.assign(o.prototype,{flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBuffer:function(t){return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(t)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign(r.prototype,{extractPosition:function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},getPosition:function(){var t;return function(){return void 0===t&&(t=new a),console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),t.setFromMatrixColumn(this,3)}}(),setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBuffer:function(t){return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(t)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(t,e,i,r,n,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,r,i,n,a)}}),rt.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},n.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},Object.assign(kt.prototype,{isIntersectionBox:function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionPlane:function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},isIntersectionSphere:function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)}}),Object.assign(Dr.prototype,{extractAllPoints:function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},extrude:function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new si(this,t)},makeGeometry:function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new vi(this,t)}}),Object.assign(i.prototype,{fromAttribute:function(t,e,i){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)},distanceToManhattan:function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(a.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},applyProjection:function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},fromAttribute:function(t,e,i){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)},distanceToManhattan:function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(c.prototype,{fromAttribute:function(t,e,i){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),dt.prototype.computeTangents=function(){console.warn("THREE.Geometry: .computeTangents() has been removed.")},Object.assign(ht.prototype,{getChildByName:function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)}}),Object.defineProperties(ht.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.defineProperties(Re.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(Ce.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),Object.defineProperty(Ar.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}}),me.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(Gi.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(ft.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}}}),Object.assign(St.prototype,{addIndex:function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},addDrawCall:function(t,e,i){void 0!==i&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")}}),Object.defineProperties(St.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(Qr.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(Q.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new q}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t}}}),Object.defineProperties(Pi.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(It.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),Object.assign(_e.prototype,{getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}}),Object.defineProperties(_e.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."),this.shadowMap.cullFace=t}}}),Object.defineProperties(at.prototype,{cullFace:{get:function(){return this.renderReverseSided?ga:ma},set:function(t){var e=t!==ma;console.warn("WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to "+e+"."),this.renderReverseSided=e}}}),Object.defineProperties(h.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),Vr.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var e=this;return(new Nr).load(t,function(t){e.setBuffer(t)}),this},Wr.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},Hr.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)};var rc={merge:function(t,e,i){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var r;e.isMesh&&(e.matrixAutoUpdate&&e.updateMatrix(),r=e.matrix,e=e.geometry),t.merge(e,r,i)},center:function(t){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),t.center()}},nc={crossOrigin:void 0,loadTexture:function(t,e,i,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var n=new Hi;n.setCrossOrigin(this.crossOrigin);var a=n.load(t,i,void 0,r);return e&&(a.mapping=e),a},loadTextureCube:function(t,e,i,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var n=new zi;n.setCrossOrigin(this.crossOrigin);var a=n.load(t,i,void 0,r);return e&&(a.mapping=e),a},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")}};t.WebGLRenderTargetCube=l,t.WebGLRenderTarget=h,t.WebGLRenderer=_e,t.ShaderLib=Cs,t.UniformsLib=Ss,t.UniformsUtils=As,t.ShaderChunk=Rs,t.FogExp2=we,t.Fog=Ee,t.Scene=Me,t.LensFlare=Te,t.Sprite=Ae,t.LOD=Re,t.SkinnedMesh=Le,t.Skeleton=Ce,t.Bone=Pe,t.Mesh=Ut,t.LineSegments=Oe,t.LineLoop=De,t.Line=ke,t.Points=Be,t.Group=Fe,t.VideoTexture=Ne,t.DataTexture=u,t.CompressedTexture=ze,t.CubeTexture=p,t.CanvasTexture=Z,t.DepthTexture=He,t.Texture=s,t.CompressedTextureLoader=Bi,t.DataTextureLoader=Fi,t.CubeTextureLoader=zi,t.TextureLoader=Hi,t.ObjectLoader=gr,t.MaterialLoader=pr,t.BufferGeometryLoader=dr,t.DefaultLoadingManager=Ns,t.LoadingManager=Di,t.JSONLoader=mr,t.ImageLoader=Ni,t.FontLoader=Fr,t.FileLoader=Ui,t.Loader=fr,t.Cache=Fs,t.AudioLoader=Nr,t.SpotLightShadow=Wi,t.SpotLight=Xi,t.PointLight=qi,t.RectAreaLight=Ji,t.HemisphereLight=Vi,t.DirectionalLightShadow=Yi,t.DirectionalLight=Ki,t.AmbientLight=Zi,t.LightShadow=ji,t.Light=Gi,t.StereoCamera=zr,t.PerspectiveCamera=me,t.OrthographicCamera=ut,t.CubeCamera=Hr,t.ArrayCamera=ge,t.Camera=lt,t.AudioListener=Gr,t.PositionalAudio=jr,t.AudioContext=Ks,t.AudioAnalyser=Wr,t.Audio=Vr,t.VectorKeyframeTrack=rr,t.StringKeyframeTrack=sr,t.QuaternionKeyframeTrack=ar,t.NumberKeyframeTrack=or,t.ColorKeyframeTrack=hr,t.BooleanKeyframeTrack=cr,t.PropertyMixer=Xr,t.PropertyBinding=Yr,t.KeyframeTrack=lr,t.AnimationUtils=Hs,t.AnimationObjectGroup=Kr,t.AnimationMixer=Jr,t.AnimationClip=ur,t.Uniform=Qr,t.InstancedBufferGeometry=$r,t.BufferGeometry=St,t.Geometry=dt,t.InterleavedBufferAttribute=tn,t.InstancedInterleavedBuffer=rn,t.InterleavedBuffer=en,t.InstancedBufferAttribute=nn,t.Face3=pt,t.Object3D=ht,t.Raycaster=an,t.Layers=ct,t.EventDispatcher=e,t.Clock=cn,t.QuaternionLinearInterpolant=nr,t.LinearInterpolant=tr,t.DiscreteInterpolant=er,t.CubicInterpolant=$i,t.Interpolant=Qi,t.Triangle=Dt,t.Math=gs,t.Spherical=hn,t.Cylindrical=ln,t.Plane=rt,t.Frustum=nt,t.Sphere=it,t.Ray=kt,t.Matrix4=r,t.Matrix3=o,t.Box3=et,t.Box2=Y,t.Line3=Ot,t.Euler=st,t.Vector4=c,t.Vector3=a,t.Vector2=i,t.Quaternion=n,t.Color=q,t.ImmediateRenderObject=un,t.VertexNormalsHelper=pn,t.SpotLightHelper=dn,t.SkeletonHelper=mn,t.PointLightHelper=gn,t.RectAreaLightHelper=vn,t.HemisphereLightHelper=yn,t.GridHelper=xn,t.PolarGridHelper=bn,t.FaceNormalsHelper=_n,t.DirectionalLightHelper=wn,
t.CameraHelper=En,t.BoxHelper=Mn,t.Box3Helper=Tn,t.PlaneHelper=Sn,t.ArrowHelper=An,t.AxesHelper=Rn,t.CatmullRomCurve3=Pn,t.CubicBezierCurve3=Ln,t.QuadraticBezierCurve3=In,t.LineCurve3=kn,t.ArcCurve=On,t.EllipseCurve=Pr,t.SplineCurve=Lr,t.CubicBezierCurve=Ir,t.QuadraticBezierCurve=kr,t.LineCurve=Rr,t.Shape=Dr,t.Path=Or,t.ShapePath=Ur,t.Font=Br,t.CurvePath=Cr,t.Curve=Ar,t.ShapeUtils=Ds,t.SceneUtils=ic,t.WebGLUtils=be,t.WireframeGeometry=Ge,t.ParametricGeometry=Ve,t.ParametricBufferGeometry=je,t.TetrahedronGeometry=qe,t.TetrahedronBufferGeometry=Ye,t.OctahedronGeometry=Ke,t.OctahedronBufferGeometry=Ze,t.IcosahedronGeometry=Je,t.IcosahedronBufferGeometry=Qe,t.DodecahedronGeometry=$e,t.DodecahedronBufferGeometry=ti,t.PolyhedronGeometry=We,t.PolyhedronBufferGeometry=Xe,t.TubeGeometry=ei,t.TubeBufferGeometry=ii,t.TorusKnotGeometry=ri,t.TorusKnotBufferGeometry=ni,t.TorusGeometry=ai,t.TorusBufferGeometry=oi,t.TextGeometry=hi,t.TextBufferGeometry=li,t.SphereGeometry=ui,t.SphereBufferGeometry=pi,t.RingGeometry=di,t.RingBufferGeometry=fi,t.PlaneGeometry=Ct,t.PlaneBufferGeometry=Pt,t.LatheGeometry=mi,t.LatheBufferGeometry=gi,t.ShapeGeometry=vi,t.ShapeBufferGeometry=yi,t.ExtrudeGeometry=si,t.ExtrudeBufferGeometry=ci,t.EdgesGeometry=xi,t.ConeGeometry=wi,t.ConeBufferGeometry=Ei,t.CylinderGeometry=bi,t.CylinderBufferGeometry=_i,t.CircleGeometry=Mi,t.CircleBufferGeometry=Ti,t.BoxGeometry=At,t.BoxBufferGeometry=Rt,t.ShadowMaterial=Si,t.SpriteMaterial=Se,t.RawShaderMaterial=Ai,t.ShaderMaterial=It,t.PointsMaterial=Ue;t.MeshPhysicalMaterial=Ci,t.MeshStandardMaterial=Ri,t.MeshPhongMaterial=Pi,t.MeshToonMaterial=Li,t.MeshNormalMaterial=Ii,t.MeshLambertMaterial=ki,t.MeshDepthMaterial=$,t.MeshDistanceMaterial=tt,t.MeshBasicMaterial=Lt,t.LineDashedMaterial=Oi,t.LineBasicMaterial=Ie,t.Material=Q,t.Float64BufferAttribute=Et,t.Float32BufferAttribute=wt,t.Uint32BufferAttribute=_t,t.Int32BufferAttribute=bt,t.Uint16BufferAttribute=xt,t.Int16BufferAttribute=yt,t.Uint8ClampedBufferAttribute=vt,t.Uint8BufferAttribute=gt,t.Int8BufferAttribute=mt,t.BufferAttribute=ft,t.REVISION=pa,t.MOUSE=da,t.CullFaceNone=fa,t.CullFaceBack=ma,t.CullFaceFront=ga,t.CullFaceFrontBack=3,t.FrontFaceDirectionCW=va,t.FrontFaceDirectionCCW=1,t.BasicShadowMap=0,t.PCFShadowMap=ya,t.PCFSoftShadowMap=xa,t.FrontSide=ba,t.BackSide=_a,t.DoubleSide=wa,t.FlatShading=1,t.SmoothShading=2,t.NoColors=Ea,t.FaceColors=Ma,t.VertexColors=Ta,t.NoBlending=Sa,t.NormalBlending=Aa,t.AdditiveBlending=Ra,t.SubtractiveBlending=Ca,t.MultiplyBlending=Pa,t.CustomBlending=La,t.AddEquation=Ia,t.SubtractEquation=ka,t.ReverseSubtractEquation=Oa,t.MinEquation=Da,t.MaxEquation=Ua,t.ZeroFactor=Ba,t.OneFactor=Fa,t.SrcColorFactor=Na,t.OneMinusSrcColorFactor=za,t.SrcAlphaFactor=Ha,t.OneMinusSrcAlphaFactor=Ga,t.DstAlphaFactor=Va,t.OneMinusDstAlphaFactor=ja,t.DstColorFactor=Wa,t.OneMinusDstColorFactor=Xa,t.SrcAlphaSaturateFactor=qa,t.NeverDepth=Ya,t.AlwaysDepth=Ka,t.LessDepth=Za,t.LessEqualDepth=Ja,t.EqualDepth=Qa,t.GreaterEqualDepth=$a,t.GreaterDepth=to,t.NotEqualDepth=eo,t.MultiplyOperation=io,t.MixOperation=ro,t.AddOperation=no,t.NoToneMapping=ao,t.LinearToneMapping=oo,t.ReinhardToneMapping=so,t.Uncharted2ToneMapping=co,t.CineonToneMapping=ho,t.UVMapping=300,t.CubeReflectionMapping=lo,t.CubeRefractionMapping=uo,t.EquirectangularReflectionMapping=po,t.EquirectangularRefractionMapping=fo,t.SphericalReflectionMapping=mo,t.CubeUVReflectionMapping=go,t.CubeUVRefractionMapping=vo,t.RepeatWrapping=yo,t.ClampToEdgeWrapping=xo,t.MirroredRepeatWrapping=bo,t.NearestFilter=_o,t.NearestMipMapNearestFilter=wo,t.NearestMipMapLinearFilter=Eo,t.LinearFilter=Mo,t.LinearMipMapNearestFilter=To,t.LinearMipMapLinearFilter=So,t.UnsignedByteType=Ao,t.ByteType=Ro,t.ShortType=Co,t.UnsignedShortType=Po,t.IntType=Lo,t.UnsignedIntType=Io,t.FloatType=ko,t.HalfFloatType=Oo,t.UnsignedShort4444Type=Do,t.UnsignedShort5551Type=Uo,t.UnsignedShort565Type=Bo,t.UnsignedInt248Type=Fo,t.AlphaFormat=No,t.RGBFormat=zo,t.RGBAFormat=Ho,t.LuminanceFormat=Go,t.LuminanceAlphaFormat=Vo,t.RGBEFormat=jo,t.DepthFormat=Wo,t.DepthStencilFormat=Xo,t.RGB_S3TC_DXT1_Format=qo,t.RGBA_S3TC_DXT1_Format=Yo,t.RGBA_S3TC_DXT3_Format=Ko,t.RGBA_S3TC_DXT5_Format=Zo,t.RGB_PVRTC_4BPPV1_Format=Jo,t.RGB_PVRTC_2BPPV1_Format=Qo,t.RGBA_PVRTC_4BPPV1_Format=$o,t.RGBA_PVRTC_2BPPV1_Format=ts,t.RGB_ETC1_Format=es,t.LoopOnce=2200,t.LoopRepeat=is,t.LoopPingPong=2202,t.InterpolateDiscrete=2300,t.InterpolateLinear=2301,t.InterpolateSmooth=2302,t.ZeroCurvatureEnding=rs,t.ZeroSlopeEnding=2401,t.WrapAroundEnding=2402,t.TrianglesDrawMode=ns,t.TriangleStripDrawMode=as,t.TriangleFanDrawMode=os,t.LinearEncoding=ss,t.sRGBEncoding=cs,t.GammaEncoding=hs,t.RGBEEncoding=ls,t.LogLuvEncoding=3003,t.RGBM7Encoding=us,t.RGBM16Encoding=ps,t.RGBDEncoding=ds,t.BasicDepthPacking=fs,t.RGBADepthPacking=ms,t.CubeGeometry=At,t.Face4=Dn,t.LineStrip=0,t.LinePieces=1,t.MeshFaceMaterial=Un,t.MultiMaterial=Bn,t.PointCloud=Fn,t.Particle=Nn,t.ParticleSystem=zn,t.PointCloudMaterial=Hn,t.ParticleBasicMaterial=Gn,t.ParticleSystemMaterial=Vn,t.Vertex=jn,t.DynamicBufferAttribute=Wn,t.Int8Attribute=Xn,t.Uint8Attribute=qn,t.Uint8ClampedAttribute=Yn,t.Int16Attribute=Kn,t.Uint16Attribute=Zn,t.Int32Attribute=Jn,t.Uint32Attribute=Qn,t.Float32Attribute=$n,t.Float64Attribute=ta,t.ClosedSplineCurve3=ea,t.SplineCurve3=ia,t.Spline=ra,t.AxisHelper=na,t.BoundingBoxHelper=aa,t.EdgesHelper=oa,t.WireframeHelper=sa,t.XHRLoader=ca,t.BinaryTextureLoader=ha,t.GeometryUtils=rc,t.ImageUtils=nc,t.Projector=la,t.CanvasRenderer=ua,Object.defineProperty(t,"__esModule",{value:!0})}(e)}()},function(t,e){THREE.OBJLoader=function(){function t(){var t={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materialLibraries:[],startObject:function(t,e){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=t,void(this.object.fromDeclaration=!1!==e);var i=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:t||"",fromDeclaration:!1!==e,geometry:{vertices:[],normals:[],colors:[],uvs:[]},materials:[],smooth:!0,startMaterial:function(t,e){var i=this._finalize(!1);i&&(i.inherited||i.groupCount<=0)&&this.materials.splice(i.index,1);var r={index:this.materials.length,name:t||"",mtllib:Array.isArray(e)&&e.length>0?e[e.length-1]:"",smooth:void 0!==i?i.smooth:this.smooth,groupStart:void 0!==i?i.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(t){var e={index:"number"==typeof t?t:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return e.clone=this.clone.bind(e),e}};return this.materials.push(r),r},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(t){var e=this.currentMaterial();if(e&&-1===e.groupEnd&&(e.groupEnd=this.geometry.vertices.length/3,e.groupCount=e.groupEnd-e.groupStart,e.inherited=!1),t&&this.materials.length>1)for(var i=this.materials.length-1;i>=0;i--)this.materials[i].groupCount<=0&&this.materials.splice(i,1);return t&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),e}},i&&i.name&&"function"==typeof i.clone){var r=i.clone(0);r.inherited=!0,this.object.materials.push(r)}this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(t,e){var i=parseInt(t,10);return 3*(i>=0?i-1:i+e/3)},parseNormalIndex:function(t,e){var i=parseInt(t,10);return 3*(i>=0?i-1:i+e/3)},parseUVIndex:function(t,e){var i=parseInt(t,10);return 2*(i>=0?i-1:i+e/2)},addVertex:function(t,e,i){var r=this.vertices,n=this.object.geometry.vertices;n.push(r[t+0],r[t+1],r[t+2]),n.push(r[e+0],r[e+1],r[e+2]),n.push(r[i+0],r[i+1],r[i+2])},addVertexLine:function(t){var e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addNormal:function(t,e,i){var r=this.normals,n=this.object.geometry.normals;n.push(r[t+0],r[t+1],r[t+2]),n.push(r[e+0],r[e+1],r[e+2]),n.push(r[i+0],r[i+1],r[i+2])},addColor:function(t,e,i){var r=this.colors,n=this.object.geometry.colors;n.push(r[t+0],r[t+1],r[t+2]),n.push(r[e+0],r[e+1],r[e+2]),n.push(r[i+0],r[i+1],r[i+2])},addUV:function(t,e,i){var r=this.uvs,n=this.object.geometry.uvs;n.push(r[t+0],r[t+1]),n.push(r[e+0],r[e+1]),n.push(r[i+0],r[i+1])},addUVLine:function(t){var e=this.uvs;this.object.geometry.uvs.push(e[t+0],e[t+1])},addFace:function(t,e,i,r,n,a,o,s,c){var h=this.vertices.length,l=this.parseVertexIndex(t,h),u=this.parseVertexIndex(e,h),p=this.parseVertexIndex(i,h);if(this.addVertex(l,u,p),void 0!==r){var d=this.uvs.length;l=this.parseUVIndex(r,d),u=this.parseUVIndex(n,d),p=this.parseUVIndex(a,d),this.addUV(l,u,p)}if(void 0!==o){var f=this.normals.length;l=this.parseNormalIndex(o,f),u=o===s?l:this.parseNormalIndex(s,f),p=o===c?l:this.parseNormalIndex(c,f),this.addNormal(l,u,p)}this.colors.length>0&&this.addColor(l,u,p)},addLineGeometry:function(t,e){this.object.geometry.type="Line";for(var i=this.vertices.length,r=this.uvs.length,n=0,a=t.length;n<a;n++)this.addVertexLine(this.parseVertexIndex(t[n],i));for(var o=0,a=e.length;o<a;o++)this.addUVLine(this.parseUVIndex(e[o],r))}};return t.startObject("",!1),t}function e(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager,this.materials=null}var i=/^[og]\s*(.+)?/,r=/^mtllib /,n=/^usemtl /;return e.prototype={constructor:e,load:function(t,e,i,r){var n=this,a=new THREE.FileLoader(n.manager);a.setPath(this.path),a.load(t,function(t){e(n.parse(t))},i,r)},setPath:function(t){this.path=t},setMaterials:function(t){return this.materials=t,this},parse:function(e){console.time("OBJLoader");var a=new t;-1!==e.indexOf("\r\n")&&(e=e.replace(/\r\n/g,"\n")),-1!==e.indexOf("\\\n")&&(e=e.replace(/\\\n/g,""));for(var o=e.split("\n"),s="",c="",h=[],l="function"==typeof"".trimLeft,u=0,p=o.length;u<p;u++)if(s=o[u],s=l?s.trimLeft():s.trim(),0!==s.length&&"#"!==(c=s.charAt(0)))if("v"===c){var d=s.split(/\s+/);switch(d[0]){case"v":a.vertices.push(parseFloat(d[1]),parseFloat(d[2]),parseFloat(d[3])),8===d.length&&a.colors.push(parseFloat(d[4]),parseFloat(d[5]),parseFloat(d[6]));break;case"vn":a.normals.push(parseFloat(d[1]),parseFloat(d[2]),parseFloat(d[3]));break;case"vt":a.uvs.push(parseFloat(d[1]),parseFloat(d[2]))}}else if("f"===c){for(var f=s.substr(1).trim(),m=f.split(/\s+/),g=[],v=0,y=m.length;v<y;v++){var x=m[v];if(x.length>0){var b=x.split("/");g.push(b)}}for(var _=g[0],v=1,y=g.length-1;v<y;v++){var w=g[v],E=g[v+1];a.addFace(_[0],w[0],E[0],_[1],w[1],E[1],_[2],w[2],E[2])}}else if("l"===c){var M=s.substring(1).trim().split(" "),T=[],S=[];if(-1===s.indexOf("/"))T=M;else for(var A=0,R=M.length;A<R;A++){var C=M[A].split("/");""!==C[0]&&T.push(C[0]),""!==C[1]&&S.push(C[1])}a.addLineGeometry(T,S)}else if(null!==(h=i.exec(s))){var P=(" "+h[0].substr(1).trim()).substr(1);a.startObject(P)}else if(n.test(s))a.object.startMaterial(s.substring(7).trim(),a.materialLibraries);else if(r.test(s))a.materialLibraries.push(s.substring(7).trim());else{if("s"!==c){if("\0"===s)continue;throw new Error('THREE.OBJLoader: Unexpected line: "'+s+'"')}if(h=s.split(" "),h.length>1){var L=h[1].trim().toLowerCase();a.object.smooth="0"!==L&&"off"!==L}else a.object.smooth=!0;var I=a.object.currentMaterial();I&&(I.smooth=a.object.smooth)}a.finalize();var k=new THREE.Group;k.materialLibraries=[].concat(a.materialLibraries);for(var u=0,p=a.objects.length;u<p;u++){var O=a.objects[u],D=O.geometry,U=O.materials,B="Line"===D.type;if(0!==D.vertices.length){var F=new THREE.BufferGeometry;F.addAttribute("position",new THREE.Float32BufferAttribute(D.vertices,3)),D.normals.length>0?F.addAttribute("normal",new THREE.Float32BufferAttribute(D.normals,3)):F.computeVertexNormals(),D.colors.length>0&&F.addAttribute("color",new THREE.Float32BufferAttribute(D.colors,3)),D.uvs.length>0&&F.addAttribute("uv",new THREE.Float32BufferAttribute(D.uvs,2));for(var N=[],z=0,H=U.length;z<H;z++){var G=U[z],I=void 0;if(null!==this.materials&&(I=this.materials.create(G.name),B&&I&&!(I instanceof THREE.LineBasicMaterial))){var V=new THREE.LineBasicMaterial;V.copy(I),I=V}I||(I=B?new THREE.LineBasicMaterial:new THREE.MeshPhongMaterial,I.name=G.name),I.flatShading=!G.smooth,N.push(I)}var j;if(N.length>1){for(var z=0,H=U.length;z<H;z++){var G=U[z];F.addGroup(G.groupStart,G.groupCount,z)}j=B?new THREE.LineSegments(F,N):new THREE.Mesh(F,N)}else j=B?new THREE.LineSegments(F,N[0]):new THREE.Mesh(F,N[0]);j.name=O.name,k.add(j)}}return k}},e}()},function(t,e){function i(t){return new THREE.Color(t[0],t[1],t[2],1)}PEEKS.texturesCache={},PEEKS.ThreeLoadTexture=function(t,e,i,r,n,a,o){if(""!=e){var s=e+"&textureRepeat="+(i?i.toString():"1,1")+"&flipX="+(r?r.toString():"false")+"&flipY="+(n?n.toString():"false")+"&removeBackground="+(a?a.toString():"false");if(o&&PEEKS.texturesCache[s])return void(t.map=PEEKS.texturesCache[s]);var c=new THREE.TextureLoader,h=t,l=a;t.map=c.load(e,function(t){var e=t.image.width,i=t.image.height;if(0!==e&&0!==i&&l){var r=document.createElement("canvas"),n=r.getContext("2d");r.width=e,r.height=i,n.clearRect(0,0,e,i),n.drawImage(t.image,0,0);var a=n.getImageData(0,0,e,i),o=a.data;if(o[0]===o[4*e-4]&&o[1]===o[4*e-3]&&o[2]===o[4*e-2]&&o[3]===o[4*e-1]){for(var s=[o[0],o[1],o[2]],c=0,u=o.length;c<u;c+=4){if(o[c+3]<255){l=!1;break}var p=(o[c]-s[0])/255,d=(o[c+1]-s[1])/255,f=(o[c+2]-s[2])/255,m=p*p+d*d+f*f;m<.005&&(o[c+3]=255*Math.pow(m/.005,2))}l&&(n.putImageData(a,0,0),t=new THREE.Texture(r),t.needsUpdate=!0,t.premultiplyAlpha=!0,h.map=t)}}},function(t){},function(t){}),o&&(PEEKS.texturesCache[s]=t.map),t.map.minFilter=THREE.LinearMipMapLinearFilter,t.map.wrapS=THREE.RepeatWrapping,t.map.wrapT=THREE.RepeatWrapping,i&&t.map.repeat.set(i[0],i[1]),r&&(t.map.repeat.x=-1),n&&(t.map.repeat.y=-1)}},PEEKS.ThreeSetObjectQuaternion=function(t,e,i,r,n){var a=new THREE.Vector3(0,0,1),o=new THREE.Euler,s=new THREE.Quaternion,c=new THREE.Quaternion(-Math.sqrt(.5),0,0,Math.sqrt(.5));o.set(i,e,-r,"YXZ"),t.setFromEuler(o),t.multiply(c),t.multiply(s.setFromAxisAngle(a,-n))},PEEKS.ThreeTextureLoader=function(t){if(t){if(PEEKS.texturesCache[t])return PEEKS.texturesCache[t];var e=new THREE.TextureLoader;/^data:/.test(t)?e.setCrossOrigin(t):e.setCrossOrigin("");var i=e.load(t);return i.name=t,PEEKS.texturesCache[t]=i,i}},PEEKS.ThreeColor=function(t,e){return t=t||e||[0,0,0],new THREE.Color(t[0],t[1],t[2],1)},PEEKS.ThreeFloat=function(t,e){return t||e||0},PEEKS.Asset.prototype.threeSynchXform=function(t){if(void 0===t&&(t=this.threeObject),t){var e=this.getCamera(),i=this.getScene();if(this.position&&(t.position.set(this.position[0],this.position[1],this.position[2]),this.quaternion?t.quaternion.copy(new THREE.Quaternion(this.quaternion[0],this.quaternion[1],this.quaternion[2],this.quaternion[3])):(t.rotation.set(THREE.Math.degToRad(this.rotation[0]),THREE.Math.degToRad(this.rotation[1]),THREE.Math.degToRad(this.rotation[2])),t.rotation.order=this.rotationOrder),t.scale.set(this.size[0],this.size[1],this.size[2])),this===e){if(i&&void 0!==i.deviceOrientation&&i.isGyroMode()){var r=i.deviceOrientation.alpha,n=i.deviceOrientation.beta,a=i.deviceOrientation.gamma,o=i.screenOrientation||0;t.rotation.order="YXZ",PEEKS.ThreeSetObjectQuaternion(t.quaternion,THREE.Math.degToRad(r),THREE.Math.degToRad(n),THREE.Math.degToRad(a),THREE.Math.degToRad(o))}}else if("Canvas"===this.type){var s=this.threeObjectPivot;s.position.copy(i.three.camera.position),i.isVrMode()&&!0!==this.vrFixed?(s.rotation.x=0,s.rotation.y=0,s.rotation.z=this.screenOrientation||0):s.quaternion.copy(i.three.camera.quaternion);var i=this.getScene(),c=Math.tan(THREE.Math.degToRad(i.cameraAngle/2)),h=.5/c;if(i.width<i.height){h*=i.height/i.width;var l=this.getAttr("valign");"bottom"===l?s.position.y-=.5*(i.height-i.width)/i.width:"top"===l&&(s.position.y+=.5*(i.height-i.width)/i.width)}t.position.z-=h}else this.threeObjectPivot.rotation.set(THREE.Math.degToRad(this.pivotRotation[0]),THREE.Math.degToRad(this.pivotRotation[1]),THREE.Math.degToRad(this.pivotRotation[2]));var u=this.getScreen();if(u&&u===this.parent){var p=u.radius,d=i.three.camera.position,r=THREE.Math.degToRad(90-180*t.position.x),n=THREE.Math.degToRad(90*t.position.y);t.rotation.order="YXZ",t.rotation.x=n,t.rotation.y=-Math.PI/2+r,t.rotation.z=0;var f=Math.abs(i.three.camera.quaternion.dot(t.quaternion));f<.95?f=0:(f=20*(f-.95),f*=f),t.position.x=d.x+p*Math.cos(r),t.position.y=d.y+p*Math.sin(n),t.position.z=d.z+-p*Math.sin(r);var m=2*(.3+.7*f);t.scale.set(t.scale.x*m,t.scale.y*m,t.scale.z*m)}}},PEEKS.Asset.prototype.threeSynchVideoTexture=function(){var t=this.threeObject;if(t&&this.useVideoTexture){var e,i=this.getScene();if(i){void 0===this.video&&this.DOMcreateElementVideo();var e=this.video,r=i.window,n=r.navigator;if(e&&n){if(this.checkVideoTexture&&!this.stopVideoTexture&&(this.checkVideoTexture=!1,e.texture=null),t.material&&(null===t.material.map||t.material.map!==e.texture)){if(!e.texture&&!this.stopVideoTexture)if(e.texture=new THREE.Texture(e),e.texture.minFilter=THREE.NearestFilter,e.texture.magFilter=THREE.NearestFilter,void 0!==this.videoUrl)e.src=this.videoUrl;else if(n.getUserMedia=n.getUserMedia||n.webkitGetUserMedia||n.mozGetUserMedia||n.msGetUserMedia,n.getUserMedia){var a={audio:!1,video:{facingMode:"user"}};n.mediaDevices.getUserMedia(a).then(function(t){e.srcObject=t,e.play()})}else this.error("getUserMedia not supported");t.material.map=e.texture}if(this.stopVideoTexture){if(e.srcObject){e.srcObject.stop&&e.srcObject.stop();var o=e.srcObject.getTracks();if(o)for(var s=0;s<o.length;s++){var c=o[s];c.stop&&c.stop()}}return this.checkVideoTexture=!0,!0}if(e.texture&&e.readyState===e.HAVE_ENOUGH_DATA){var h=this.parent.canvas;if(h&&0!==e.videoWidth&&0!==e.videoHeight){var l=h.getContext("2d");if(e.videoWidth!==h.width||e.videoHeight!==h.height){h.width=e.videoWidth,h.height=e.videoHeight;var u=h.width/h.height,p=this.parent.size[0]/this.parent.size[1];u>p?this.parent.setSize([this.parent.size[0]*(u/p),this.parent.size[1],1]):this.parent.setSize([this.parent.size[0],this.parent.size[1]*(p/u),1])}this.parent.sides="back",this.parent.setRotation([0,180,0]),l.clearRect(0,0,h.width,h.height),l.drawImage(e.texture.image,0,0),this.parent.canvasUpdated=!0}return e.texture.needsUpdate=!0,!0}}}}return!1},PEEKS.Asset.prototype.threeGetVisibility=function(){return!!this.visible&&(!this.threeObject||!this.useVideoTexture||this.threeSynchVideoTexture())},PEEKS.Scene.prototype.onGetCameraQuaternion=function(){var t=this.three.camera.quaternion;return[t.x,t.y,t.z,t.w]},PEEKS.Scene.prototype.onGetCameraTranslation=function(t){var e=this.three.camera.quaternion,i=new THREE.Vector3(t[0],t[1],t[2]);return i.applyQuaternion(e),[i.x,i.y,i.z]},PEEKS.Scene.prototype.isVrMode=function(){return this.vrMode&&(!this.isPhone||(-90===this.screenOrientation||90===this.screenOrientation))},PEEKS.Scene.prototype.onRender=function(){var t=this.three;if(this.camera.threeSynch(t.camera),this.threeSynch(),this.page){var e=this.page.getAttrColor("bgColor",[0,0,0]);t.renderer.setClearColor(i(e))}var r=this.width?this.width:500,n=this.height?this.height:500;if(this.isVrMode()){t.renderer.setScissorTest(!0),t.renderer.setViewport(r/2,0,r/2,n),t.renderer.setScissor(r/2,0,r/2,n);var r=this.width?this.width:500,n=this.height?this.height:500;this.three.camera.aspect=r/2/n,this.three.camera.updateProjectionMatrix(),t.renderer.render(t.scene,t.camera),t.cssRenderer&&t.cssRenderer.render(t.cssScene,t.camera),t.renderer.setViewport(0,0,r/2,n),t.renderer.setScissor(0,0,r/2,n),t.renderer.render(t.scene,t.camera),t.cssRenderer&&t.cssRenderer.render(t.cssScene,t.camera)}else{this.three.renderer.setViewport(0,0,r,n),this.three.renderer.setScissor(0,0,r,n),this.three.renderer.setScissorTest(!1);var r=this.width?this.width:500,n=this.height?this.height:500;this.three.camera.aspect=r/n,this.three.camera.updateProjectionMatrix(),this.three.renderer.render(this.three.scene,this.three.camera),this.three.cssRenderer&&this.three.cssRenderer.render(this.three.cssScene,this.three.camera)}},PEEKS.Asset.prototype.threeSynchGeometry=function(){var t=this,e=t.threeObject;if(e&&e.children.length>0){var i=e.children[0];for(meshI=0;meshI<i.children.length;meshI++){var r=i.children[meshI];if(void 0!==r.geometry){void 0===r.geometry.positionInitial?r.geometry.positionInitial=r.geometry.attributes.position.array.slice():(r.geometry.attributes.position.array=r.geometry.positionInitial.slice(),r.geometry.attributes.position.needsUpdate=!0);var n=r.geometry.attributes.position.array,a=r.geometry.positionInitial;for(var o in t.shapes)if(t.shapes.hasOwnProperty(o)){var s=t.shapes[o],c=s.weightEval;if(0!==c&&s.threeObject&&s.threeObject.children.length>0){var h=s.threeObject.children[0];if(meshI<h.children.length){var l=h.children[meshI];if(void 0!==l.geometry)for(var u=l.geometry.attributes.position.array,p=0;p<n.length;p++)n[p]+=(u[p]-a[p])*c}}}}}}},PEEKS.ThreeShaderAttr=function(t,e,i){"string"==typeof i&&(i=PEEKS.ThreeTextureLoader(i)),t[e]=i,t.uniforms[e].value=i},PEEKS.Asset.prototype.threeSynchMaterial=function(){var t=this,e=t.threeObject;if(e)for(var i=0;i<e.children.length;i++)for(var r=e.children[i],n=0;n<r.children.length;n++){var a=r.children[n];if(a instanceof THREE.Mesh&&a.geometry&&a.material){var o=t.material||{};if("velvet"===o.type){var s=THREE.ShaderPeeks.fabric,c=s.fragmentShader,h=s.vertexShader,l=THREE.UniformsUtils.clone(s.uniforms);l.enableSpecular.value=!0,l.tBeckmann.value=PEEKS.ThreeTextureLoader(o.specularMap),l.tDiffuse.value=PEEKS.ThreeTextureLoader(t.textureUrl),l.diffuse.value.setHex(16777215),l.specular.value.setHex(10526880),l.uRoughness.value=.2,l.uSpecularBrightness.value=.5,l.bumpScale.value=8;var u=new THREE.ShaderMaterial({fragmentShader:c,vertexShader:h,uniforms:l,lights:!0});u.extensions.derivatives=!0,a.material=u,"velvet"===o.type?(l.uFresnelBias.value=.01,l.uFresnelPower.value=2,l.uFresnelScale.value=.4,l.uFresnelColor.value=[1,1,1]):l.uFresnelScale.value=0}else if("phong"===o.type){var s=THREE.ShaderPeeks.phong,c=s.fragmentShader,h=s.vertexShader,l=THREE.UniformsUtils.clone(s.uniforms),u=new THREE.ShaderMaterial({fragmentShader:c,vertexShader:h,uniforms:l,lights:!0});a.material=u,u.extensions.derivatives=!0,u.extensions.fragDepth=!0,u.extensions.drawBuffers=!0,u.extensions.shaderTextureLOD=!0,u.color=16777215,u.transparent=!0,u.side=THREE.FrontSide,u.depthTest=!0,PEEKS.ThreeShaderAttr(u,"map",t.textureUrl),PEEKS.ThreeShaderAttr(u,"normalMap",o.normalMap),PEEKS.ThreeShaderAttr(u,"alphaMap",o.alphaMap),PEEKS.ThreeShaderAttr(u,"bumpMap",o.bumpMap),PEEKS.ThreeShaderAttr(u,"opacity",PEEKS.ThreeFloat(t.alpha,1)),PEEKS.ThreeShaderAttr(u,"reflectivity",PEEKS.ThreeFloat(o.reflectivity,.2)),PEEKS.ThreeShaderAttr(u,"shininess",PEEKS.ThreeFloat(o.shininess,10)),PEEKS.ThreeShaderAttr(u,"emissive",PEEKS.ThreeColor(o.emissive,[.05,.05,.05])),PEEKS.ThreeShaderAttr(u,"specular",PEEKS.ThreeColor(o.specular,[.05,.05,.05]))}else{var u=a.material;"MeshPhongMaterial"!==u.type&&(u=new THREE.MeshPhongMaterial({color:16777215,transparent:!0,side:THREE.FrontSide,depthTest:!0}),a.material=u),u.map=PEEKS.ThreeTextureLoader(t.textureUrl),u.transparent=!0,u.opacity=PEEKS.ThreeFloat(t.alpha,1),u.reflectivity=PEEKS.ThreeFloat(o.reflectivity,.2),u.shininess=PEEKS.ThreeFloat(o.shininess,10),u.emissive=PEEKS.ThreeColor(o.emissive,[.05,.05,.05]),u.specular=PEEKS.ThreeColor(o.specular,[.05,.05,.05]),u.normalMap=PEEKS.ThreeTextureLoader(o.normalMap),u.alphaMap=PEEKS.ThreeTextureLoader(o.alphaMap),u.bumpMap=PEEKS.ThreeTextureLoader(o.bumpMap);t.getAttrColor("color",[1,1,1,1]);u.color=PEEKS.ThreeColor(t.color,[1,1,1]),u.side=THREE.FrontSide}}}},PEEKS.Asset.prototype.threeSynch=function(t){if(this.threeObject)this.primitive===PEEKS.Asset.PrimitiveMesh&&(this.materialNeedsUpdate&&(this.materialNeedsUpdate=!1,this.threeSynchMaterial()),this.shapes&&this.threeSynchGeometry());else{if(this.primitive){for(var e=!1,i=this;i;){if("Canvas"===i.type){e=!0;break}i=i.parent}if(this.primitive===PEEKS.Asset.PrimitiveCube){var r=new THREE.CubeGeometry(1,1,1),n=new THREE.MeshPhongMaterial({color:16777215,transparent:!1,side:THREE.FrontSide,depthTest:!e});this.threeObject=new THREE.Mesh(r,n)}else if(this.primitive===PEEKS.Asset.PrimitiveRibbon){var a=[];if(this.points)for(var o=0;o<this.points.length;o++)a.push(new THREE.Vector3(this.points[o][0],this.points[o][1],this.points[o][2]));var r=(new THREE.BufferGeometry).setFromPoints(a),n=new THREE.LineBasicMaterial;this.threeObject=new THREE.Line(r,n)}else if(this.primitive===PEEKS.Asset.PrimitiveSphere){var r=new THREE.SphereGeometry(1,32,32),n=new THREE.MeshBasicMaterial({color:16711680,transparent:!0,side:"back"===this.getAttr("sides")?THREE.BackSide:THREE.FrontSide,depthTest:!e,depthWrite:"false"!==this.getAttr("depthWrite")});this.threeObject=new THREE.Mesh(r,n),PEEKS.ThreeLoadTexture(n,this.getAttr("textureUrl"),this.textureRepeat)}else if(this.primitive===PEEKS.Asset.PrimitiveCurvedPanel){var r=new THREE.SphereGeometry(1,32,32,1.45*Math.PI,.1*Math.PI,.45*Math.PI,.1*Math.PI),n=new THREE.MeshBasicMaterial({color:16711680,transparent:!0,side:"back"===this.getAttr("sides")?THREE.BackSide:THREE.FrontSide,depthTest:!e,depthWrite:"false"!==this.getAttr("depthWrite")});this.threeObject=new THREE.Mesh(r,n),PEEKS.ThreeLoadTexture(n,this.getAttr("textureUrl"),this.textureRepeat,!0)}else if(this.primitive===PEEKS.Asset.PrimitiveDisc){var r=new THREE.CircleGeometry(.5,32),n=new THREE.MeshBasicMaterial({color:16777215,transparent:!0,depthTest:!e});PEEKS.ThreeLoadTexture(n,this.getAttr("textureUrl"),this.textureRepeat,!1,!1,this.imageDetour),this.threeObject=new THREE.Mesh(r,n)}else if(this.primitive===PEEKS.Asset.PrimitiveRing){var r=new THREE.RingGeometry(.4,.5,32),n=new THREE.MeshBasicMaterial({color:16777215,transparent:!0,depthTest:!e});this.threeObject=new THREE.Mesh(r,n)}else if(this.primitive===PEEKS.Asset.PrimitiveCircle){var r=new THREE.RingGeometry(.48,.5,32),n=new THREE.MeshBasicMaterial({color:16777215,transparent:!0,depthTest:!e});this.threeObject=new THREE.Mesh(r,n)}else if(this.primitive===PEEKS.Asset.PrimitiveMesh){this.threeObject=new THREE.Object3D;var s=new THREE.LoadingManager;s.onProgress=function(t,e,i){};var c=function(t){},h=function(t){},l=this,u=this.threeObject;this.threeObject.peeksAsset=l;var p=this.getAttr("autofit"),d=new THREE.OBJLoader(s);d.load(this.geometryUrl,function(t){if(u.add(t),p){var e;t.traverse(function(t){t instanceof THREE.Mesh&&t.geometry&&(t.geometry.computeBoundingSphere(),void 0===e&&(e=t.geometry.boundingSphere),t.position.set(-e.center.x,-e.center.y,-e.center.z))})}t.traverse(function(t){t instanceof THREE.Mesh&&t.geometry&&t.geometry.computeFaceNormals()}),t.parent.peeksAsset.threeSynchMaterial()},c,h)}else if(this.primitive===PEEKS.Asset.PrimitivePlane)if(this.getAttr("text")){this.threeObject=new THREE.Object3D;var r=new THREE.PlaneGeometry(1,1),n=new THREE.MeshBasicMaterial({color:16777215,transparent:!0,side:THREE.FrontSide,depthTest:!e}),f=new THREE.Mesh(r,n);if(this.threeObject.add(f),textTexture=this.createTextTexture(),textTexture){var m=new THREE.Texture(textTexture.canvas);if(m.needsUpdate=!0,m.premultiplyAlpha=!0,n.map=m,textTexture.size){textTexture.size[0]>textTexture.size[1]?(f.scale.x=textTexture.size[0]/textTexture.textSize[0],f.scale.y=f.scale.x*textTexture.size[1]/textTexture.size[0]):(f.scale.y=textTexture.size[1]/textTexture.textSize[1],f.scale.x=f.scale.y*textTexture.size[0]/textTexture.size[1]),f.scale.x=5e-4*textTexture.size[0],f.scale.y=5e-4*textTexture.size[1];var g=this.getPropagatedSize();g[0]>g[1]?f.scale.y*=g[0]/g[1]:f.scale.y*=g[1]/g[0];var v=(textTexture.relativeTop-textTexture.relativeBot)/2;v/=textTexture.size[1],f.position.y=f.scale.y*v}}}else{var y;if(""!==this.textureBackUrl){var r=new THREE.PlaneGeometry(1,1),n=new THREE.MeshBasicMaterial({color:16777215,transparent:!0,side:THREE.FrontSide});y=new THREE.Mesh(r,n),y.rotation.y=THREE.Math.degToRad(180),PEEKS.ThreeLoadTexture(n,this.textureBackUrl,this.textureRepeat,!1,!1,this.imageDetour)}var r=new THREE.PlaneGeometry(1,1),n=new THREE.MeshBasicMaterial({color:16777215,transparent:!0,side:y?THREE.FrontSide:THREE.DoubleSide,depthTest:!e}),f=new THREE.Mesh(r,n);this.threeObject=f,PEEKS.ThreeLoadTexture(n,this.getAttr("textureUrl"),this.textureRepeat,!1,!1,this.imageDetour),y&&this.threeObject.add(y)}else this.threeObject=new THREE.Object3D}else this.threeObject=new THREE.Object3D;this.threeObjectPivot=new THREE.Object3D,this.threeObjectPivot.add(this.threeObject),this.threeObject.peeksAsset=this}if(this.threeSynchVideoTexture(),this.threeObject.visible=this.threeGetVisibility(),void 0===t&&(t=this.threeObject),t.visible){if(this.threeSynchXform(t),t.material){var x=this.getAttrColor("color",[1,1,1,1]);void 0!==this.getAttr("textureUrl")&&""!==this.getAttr("textureUrl")||(x=this.getAttrColor("viewBgColor")),x&&t.material.color&&(t.material.color.r=x[0],t.material.color.g=x[1],t.material.color.b=x[2]),t.material.opacity=this.getAttr("alpha",1);switch(this.getAttr("sides")){case"back":t.material.side=THREE.BackSide;break;case"both":t.material.side=THREE.DoubleSide;break;default:case"front":t.material.side=THREE.FrontSide}if(t.material.depthWrite="false"!==this.getAttr("depthWrite"),this.primitive===PEEKS.Asset.PrimitivePlane&&t.material&&t.material.map&&t.material.map.image){var b=t.material.map.image;if(0!==b.width&&0!==b.height){var _=b.width/b.height,w=t.scale.x/t.scale.y;if(_!==w){var E=this.valign;if(_<w)t.scale.x=_*t.scale.y;else if(t.scale.y=t.scale.x/_,E)switch(E){case"top":t.position.y+=(1-t.scale.y)/2;break;case"bottom":t.position.y-=(1-t.scale.y)/2}}}}}for(var M=0;M<this.children.length;M++){var T=this.children[M];T.threeObject?T.threeSynch():(T.threeSynch(),this.threeObject.add(T.threeObjectPivot))}return this.threeObject}},PEEKS.Asset.prototype.threeGetNode=function(){return this.threeSynch(),this.threeObject},PEEKS.Asset.prototype.onUnload=function(){this.threeObjectPivot&&(this.threeObjectPivot.parent&&this.threeObjectPivot.parent.remove(this.threeObjectPivot),delete this.threeObjectPivot,delete this.threeObject)},PEEKS.Scene.prototype.onPickNode=function(t){if(void 0!==t){var e=new THREE.Raycaster;e.setFromCamera(new THREE.Vector3(t[0],t[1],0),this.three.camera);for(var i=e.intersectObjects(this.threeObject.children,!0),r=0;r<i.length;r++)for(var n=i[r].object;n;){if(n.peeksAsset&&void 0!==n.peeksAsset.onClick&&n.peeksAsset!==this&&n.peeksAsset.isInCanvas())return n.peeksAsset;n=n.parent}for(var r=0;r<i.length;r++)for(var n=i[r].object;n;){if(n.peeksAsset&&void 0!==n.peeksAsset.onClick&&n.peeksAsset!==this)return n.peeksAsset;n=n.parent}for(var r=0;r<i.length;r++)for(var n=i[r].object;n;){if(n.peeksAsset&&n.peeksAsset!==this)return n.peeksAsset;n=n.parent}}},PEEKS.Scene.prototype.onResize=function(){var t=this.width?this.width:500,e=this.height?this.height:500;this.three.camera.aspect=t/e,this.three.camera.updateProjectionMatrix(),this.three.renderer.setSize(t,e),this.three.cssRenderer&&this.three.cssRenderer.setSize(t,e)},PEEKS.Scene.prototype.onStart=function(){this.three={};var t=new THREE.Scene,e=document.querySelector("a-scene");e&&(console.log(e),t=e.object3D);var i=new THREE.AmbientLight(1052688);t.add(i);var r=new THREE.DirectionalLight(14540253);r.position.set(0,0,-1),t.add(r);var r=new THREE.DirectionalLight(14540253);r.position.set(0,0,1),t.add(r);var n=new THREE.WebGLRenderer({alpha:!0,antialias:!0});n.sortObjects=!1,n.setClearColor(16777215,1),n.setPixelRatio(window.devicePixelRatio),this.cameraAngle=55;var a=new THREE.PerspectiveCamera(this.cameraAngle,1,.1,1e3),o=document.querySelector("a-camera");if(o&&(console.log(o),o.object3D&&o.object3D.children[0])){var s=o.object3D.children[0];"PerspectiveCamera"===s.type&&(a=s)}this.three.scene=t,this.three.camera=a,this.three.renderer=n,this.domElement=this.three.renderer.domElement,
this.three.scene.add(this.threeGetNode()),this.onResize()},THREE.ShaderPeeks={fabric:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.lights,{enableBump:{value:0},enableSpecular:{value:0},tDiffuse:{value:null},tBeckmann:{value:null},diffuse:{value:new THREE.Color(15658734)},specular:{value:new THREE.Color(1118481)},opacity:{value:1},uRoughness:{value:.15},uSpecularBrightness:{value:.75},bumpMap:{value:null},bumpScale:{value:1},offsetRepeat:{value:new THREE.Vector4(0,0,1,1)},uWrapRGB:{value:new THREE.Vector3(.75,.375,.1875)},uFresnelBias:{value:.1},uFresnelPower:{value:2},uFresnelScale:{value:1},uFresnelColor:{value:[1,1,1]}}]),fragmentShader:["#define USE_BUMPMAP","uniform bool enableBump;","uniform bool enableSpecular;","uniform vec3 diffuse;","uniform vec3 specular;","uniform float opacity;","uniform float uRoughness;","uniform float uSpecularBrightness;","uniform vec3 uWrapRGB;","uniform sampler2D tDiffuse;","uniform sampler2D tBeckmann;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vViewPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.bsdfs,THREE.ShaderChunk.packing,THREE.ShaderChunk.lights_pars,THREE.ShaderChunk.bumpmap_pars_fragment,"float fresnelReflectance( vec3 H, vec3 V, float F0 ) {","float base = 1.0 - dot( V, H );","float exponential = pow( base, 5.0 );","return exponential + F0 * ( 1.0 - exponential );","}","float KS_Skin_Specular(vec3 N, vec3 L, vec3 V, float m, float rho_s) {","float result = 0.0;","float ndotl = dot( N, L );","if( ndotl > 0.0 ) {","vec3 h = L + V;","vec3 H = normalize( h );","float ndoth = dot( N, H );","float PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );","float F = fresnelReflectance( H, V, 0.028 );","float frSpec = max( PH * F / dot( h, h ), 0.0 );","result = ndotl * rho_s * frSpec;","}","return result;","}","uniform vec3 uFresnelColor;","varying float vReflectionFactor;","varying float vSpecularFactor;","#if NUM_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[NUM_DIR_LIGHTS];","uniform vec3 directionalLightDirection[NUM_DIR_LIGHTS];","#endif","void main() {","vec3 outgoingLight = vec3( 0.0 );","vec4 diffuseColor = vec4( diffuse, opacity );","vec4 colDiffuse = texture2D( tDiffuse, vUv );","colDiffuse.rgb *= colDiffuse.rgb;","diffuseColor = diffuseColor * colDiffuse;","vec3 normal = normalize( vNormal );","vec3 viewerDirection = normalize( vViewPosition );","float specularStrength = 1.0;","vec3 totalSpecularLight = vec3( 0.0 );","vec3 totalDiffuseLight = vec3( 0.0 );","#if NUM_DIR_LIGHTS > 0","for( int i = 0; i < NUM_DIR_LIGHTS; i++ ) {","vec3 dirVector = directionalLights[ i ].direction;","float dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );","float dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), 0.5 );","totalDiffuseLight += directionalLights[ i ].color * dirDiffuseWeight;","float dirSpecularWeight = KS_Skin_Specular( normal, dirVector, viewerDirection, uRoughness, uSpecularBrightness );","totalSpecularLight += directionalLights[ i ].color * ( dirSpecularWeight * specularStrength );","}","#endif","outgoingLight += diffuseColor.rgb * ( totalDiffuseLight + ambientLightColor * diffuse ) + totalSpecularLight;","gl_FragColor = vec4(outgoingLight, 1.0);","gl_FragColor = mix( gl_FragColor, vec4( uFresnelColor, 1.0 ), clamp( vReflectionFactor, 0.0, 1.0 ) );","}"].join("\n"),vertexShader:["uniform vec4 offsetRepeat;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vViewPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.lights_pars,"uniform float uFresnelBias;","uniform float uFresnelScale;","uniform float uFresnelPower;","varying float vReflectionFactor;","void main() {","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","vViewPosition = -mvPosition.xyz;","vNormal = normalize( normalMatrix * normal );","vUv = uv * offsetRepeat.zw + offsetRepeat.xy;","gl_Position = projectionMatrix * mvPosition;","vec3 worldNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );","vec3 I = worldPosition.xyz - cameraPosition;","vReflectionFactor = uFresnelBias + uFresnelScale * pow( 1.0 + dot( normalize( I ), worldNormal ), uFresnelPower );","}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.specularmap,THREE.UniformsLib.envmap,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.bumpmap,THREE.UniformsLib.normalmap,THREE.UniformsLib.displacementmap,THREE.UniformsLib.gradientmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,{emissive:{value:new THREE.Color(0)},specular:{value:new THREE.Color(1118481)},shininess:{value:30}}]),fragmentShader:["uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.packing,THREE.ShaderChunk.dithering_pars_fragment,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.uv_pars_fragment,THREE.ShaderChunk.uv2_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.aomap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.emissivemap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.gradientmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.bsdfs,THREE.ShaderChunk.lights_pars,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,THREE.ShaderChunk.clipping_planes_pars_fragment,"void main() {",THREE.ShaderChunk.clipping_planes_fragment,"vec4 diffuseColor = vec4( diffuse, opacity );","ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );","vec3 totalEmissiveRadiance = emissive;",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.normal_fragment,THREE.ShaderChunk.emissivemap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lights_template,THREE.ShaderChunk.aomap_fragment,"vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;",THREE.ShaderChunk.envmap_fragment,"gl_FragColor = vec4( outgoingLight, diffuseColor.a );",THREE.ShaderChunk.tonemapping_fragment,THREE.ShaderChunk.encodings_fragment,THREE.ShaderChunk.fog_fragment,THREE.ShaderChunk.premultiplied_alpha_fragment,THREE.ShaderChunk.dithering_fragment,"}"].join("\n"),vertexShader:["varying vec3 vViewPosition;","#ifndef FLAT_SHADED","varying vec3 vNormal;","#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.uv_pars_vertex,THREE.ShaderChunk.uv2_pars_vertex,THREE.ShaderChunk.displacementmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.fog_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,THREE.ShaderChunk.clipping_planes_pars_vertex,"void main() {",THREE.ShaderChunk.uv_vertex,THREE.ShaderChunk.uv2_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.beginnormal_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#ifndef FLAT_SHADED","vNormal = normalize( transformedNormal );","#endif",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.displacementmap_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.clipping_planes_vertex,"vViewPosition = - mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,THREE.ShaderChunk.fog_vertex,"}"].join("\n")}}},function(t,e){!function(t,e){t.tracking=t.tracking||{},tracking.inherits=function(t,e){function i(){}i.prototype=e.prototype,t.superClass_=e.prototype,t.prototype=new i,t.prototype.constructor=t,t.base=function(t,i){var r=Array.prototype.slice.call(arguments,2);return e.prototype[i].apply(t,r)}},tracking.initUserMedia_=function(e,i){t.navigator.mediaDevices.getUserMedia({video:!0,audio:!(!i||!i.audio)}).then(function(t){e.srcObject=t}).catch(function(t){throw Error("Cannot capture user camera.")})},tracking.isNode=function(t){return t.nodeType||this.isWindow(t)},tracking.isWindow=function(t){return!!(t&&t.alert&&t.document)},tracking.one=function(t,e){return this.isNode(t)?t:(e||document).querySelector(t)},tracking.track=function(t,e,i){if(!(t=tracking.one(t)))throw new Error("Element not found, try a different element or selector.");if(!e)throw new Error("Tracker not specified, try `tracking.track(element, new tracking.FaceTracker())`.");switch(t.nodeName.toLowerCase()){case"canvas":return this.trackCanvas_(t,e,i);case"img":return this.trackImg_(t,e,i);case"video":return i&&i.camera&&this.initUserMedia_(t,i),this.trackVideo_(t,e,i);default:throw new Error("Element not supported, try in a canvas, img, or video.")}},tracking.trackCanvas_=function(t,e){var i=this,r=new tracking.TrackerTask(e);return r.on("run",function(){i.trackCanvasInternal_(t,e)}),r.run()},tracking.trackCanvasInternal_=function(t,e){var i=t.width,r=t.height,n=t.getContext("2d"),a=n.getImageData(0,0,i,r);e.track(a.data,i,r)},tracking.trackImg_=function(t,e){var i=t.width,r=t.height,n=document.createElement("canvas");n.width=i,n.height=r;var a=new tracking.TrackerTask(e);return a.on("run",function(){tracking.Canvas.loadImage(n,t.src,0,0,i,r,function(){tracking.trackCanvasInternal_(n,e)})}),a.run()},tracking.trackVideo_=function(e,i){var r,n,a=document.createElement("canvas"),o=a.getContext("2d"),s=function(){r=e.offsetWidth,n=e.offsetHeight,a.width=r,a.height=n};s(),e.addEventListener("resize",s);var c,h=function(){c=t.requestAnimationFrame(function(){if(e.readyState===e.HAVE_ENOUGH_DATA){try{o.drawImage(e,0,0,r,n)}catch(t){}tracking.trackCanvasInternal_(a,i)}h()})},l=new tracking.TrackerTask(i);return l.on("stop",function(){t.cancelAnimationFrame(c)}),l.on("run",function(){h()}),l.run()},t.URL||(t.URL=t.URL||t.webkitURL||t.msURL||t.oURL),navigator.getUserMedia||(navigator.getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia)}(window),function(){tracking.EventEmitter=function(){},tracking.EventEmitter.prototype.events_=null,tracking.EventEmitter.prototype.addListener=function(t,e){if("function"!=typeof e)throw new TypeError("Listener must be a function");return this.events_||(this.events_={}),this.emit("newListener",t,e),this.events_[t]||(this.events_[t]=[]),this.events_[t].push(e),this},tracking.EventEmitter.prototype.listeners=function(t){return this.events_&&this.events_[t]},tracking.EventEmitter.prototype.emit=function(t){var e=this.listeners(t);if(e){for(var i=Array.prototype.slice.call(arguments,1),r=0;r<e.length;r++)e[r]&&e[r].apply(this,i);return!0}return!1},tracking.EventEmitter.prototype.on=tracking.EventEmitter.prototype.addListener,tracking.EventEmitter.prototype.once=function(t,e){var i=this;i.on(t,function r(){i.removeListener(t,r),e.apply(this,arguments)})},tracking.EventEmitter.prototype.removeAllListeners=function(t){return this.events_?(t?delete this.events_[t]:delete this.events_,this):this},tracking.EventEmitter.prototype.removeListener=function(t,e){if("function"!=typeof e)throw new TypeError("Listener must be a function");if(!this.events_)return this;var i=this.listeners(t);if(Array.isArray(i)){var r=i.indexOf(e);if(r<0)return this;i.splice(r,1)}return this},tracking.EventEmitter.prototype.setMaxListeners=function(){throw new Error("Not implemented")}}(),function(){tracking.Canvas={},tracking.Canvas.loadImage=function(t,e,i,r,n,a,o){var s=this,c=new window.Image;c.crossOrigin="*",c.onload=function(){var e=t.getContext("2d");t.width=n,t.height=a,e.drawImage(c,i,r,n,a),o&&o.call(s),c=null},c.src=e}}(),function(){tracking.DisjointSet=function(t){if(void 0===t)throw new Error("DisjointSet length not specified.");this.length=t,this.parent=new Uint32Array(t);for(var e=0;e<t;e++)this.parent[e]=e},tracking.DisjointSet.prototype.length=null,tracking.DisjointSet.prototype.parent=null,tracking.DisjointSet.prototype.find=function(t){return this.parent[t]===t?t:this.parent[t]=this.find(this.parent[t])},tracking.DisjointSet.prototype.union=function(t,e){var i=this.find(t),r=this.find(e);this.parent[i]=r}}(),function(){tracking.Image={},tracking.Image.blur=function(t,e,i,r){if((r=Math.abs(r))<=1)throw new Error("Diameter should be greater than 1.");for(var n=r/2,a=Math.ceil(r)+(1-Math.ceil(r)%2),o=new Float32Array(a),s=(n+.5)/3,c=s*s,h=1/Math.sqrt(2*Math.PI*c),l=-1/(2*s*s),u=0,p=Math.floor(a/2),d=0;d<a;d++){var f=d-p,m=h*Math.exp(f*f*l);o[d]=m,u+=m}for(var g=0;g<o.length;g++)o[g]/=u;return this.separableConvolve(t,e,i,o,o,!1)},tracking.Image.computeIntegralImage=function(t,e,i,r,n,a,o){if(arguments.length<4)throw new Error("You should specify at least one output array in the order: sum, square, tilted, sobel.");var s;o&&(s=tracking.Image.sobel(t,e,i));for(var c=0;c<i;c++)for(var h=0;h<e;h++){var l=c*e*4+4*h,u=~~(.299*t[l]+.587*t[l+1]+.114*t[l+2]);if(r&&this.computePixelValueSAT_(r,e,c,h,u),n&&this.computePixelValueSAT_(n,e,c,h,u*u),a){var p=l-4*e,d=~~(.299*t[p]+.587*t[p+1]+.114*t[p+2]);this.computePixelValueRSAT_(a,e,c,h,u,d||0)}o&&this.computePixelValueSAT_(o,e,c,h,s[l])}},tracking.Image.computePixelValueRSAT_=function(t,e,i,r,n,a){var o=i*e+r;t[o]=(t[o-e-1]||0)+(t[o-e+1]||0)-(t[o-e-e]||0)+n+a},tracking.Image.computePixelValueSAT_=function(t,e,i,r,n){var a=i*e+r;t[a]=(t[a-e]||0)+(t[a-1]||0)+n-(t[a-e-1]||0)},tracking.Image.grayscale=function(t,e,i,r){for(var n=new Uint8ClampedArray(r?t.length:t.length>>2),a=0,o=0,s=0;s<i;s++)for(var c=0;c<e;c++){var h=.299*t[o]+.587*t[o+1]+.114*t[o+2];n[a++]=h,r&&(n[a++]=h,n[a++]=h,n[a++]=t[o+3]),o+=4}return n},tracking.Image.horizontalConvolve=function(t,e,i,r,n){for(var a=r.length,o=Math.floor(a/2),s=new Float32Array(e*i*4),c=n?1:0,h=0;h<i;h++)for(var l=0;l<e;l++){for(var u=h,p=l,d=4*(h*e+l),f=0,m=0,g=0,v=0,y=0;y<a;y++){var x=u,b=Math.min(e-1,Math.max(0,p+y-o)),_=4*(x*e+b),w=r[y];f+=t[_]*w,m+=t[_+1]*w,g+=t[_+2]*w,v+=t[_+3]*w}s[d]=f,s[d+1]=m,s[d+2]=g,s[d+3]=v+c*(255-v)}return s},tracking.Image.verticalConvolve=function(t,e,i,r,n){for(var a=r.length,o=Math.floor(a/2),s=new Float32Array(e*i*4),c=n?1:0,h=0;h<i;h++)for(var l=0;l<e;l++){for(var u=h,p=l,d=4*(h*e+l),f=0,m=0,g=0,v=0,y=0;y<a;y++){var x=Math.min(i-1,Math.max(0,u+y-o)),b=p,_=4*(x*e+b),w=r[y];f+=t[_]*w,m+=t[_+1]*w,g+=t[_+2]*w,v+=t[_+3]*w}s[d]=f,s[d+1]=m,s[d+2]=g,s[d+3]=v+c*(255-v)}return s},tracking.Image.separableConvolve=function(t,e,i,r,n,a){var o=this.verticalConvolve(t,e,i,n,a);return this.horizontalConvolve(o,e,i,r,a)},tracking.Image.sobel=function(t,e,i){t=this.grayscale(t,e,i,!0);for(var r=new Float32Array(e*i*4),n=new Float32Array([-1,0,1]),a=new Float32Array([1,2,1]),o=this.separableConvolve(t,e,i,n,a),s=this.separableConvolve(t,e,i,a,n),c=0;c<r.length;c+=4){var h=o[c],l=s[c],u=Math.sqrt(l*l+h*h);r[c]=u,r[c+1]=u,r[c+2]=u,r[c+3]=255}return r},tracking.Image.equalizeHist=function(t,e,i){for(var r=new Uint8ClampedArray(t.length),n=new Array(256),a=0;a<256;a++)n[a]=0;for(var a=0;a<t.length;a++)r[a]=t[a],n[t[a]]++;for(var o=n[0],a=0;a<256;a++)n[a]+=o,o=n[a];for(var s=255/t.length,a=0;a<t.length;a++)r[a]=n[t[a]]*s+.5|0;return r}}(),function(){tracking.ViolaJones={},tracking.ViolaJones.REGIONS_OVERLAP=.5,tracking.ViolaJones.classifiers={},tracking.ViolaJones.detect=function(t,e,i,r,n,a,o,s){var c,h=0,l=[],u=new Int32Array(e*i),p=new Int32Array(e*i),d=new Int32Array(e*i);o>0&&(c=new Int32Array(e*i)),tracking.Image.computeIntegralImage(t,e,i,u,p,d,c);for(var f=s[0],m=s[1],g=r*n,v=g*f|0,y=g*m|0;v<e&&y<i;){for(var x=g*a+.5|0,b=0;b<i-y;b+=x)for(var _=0;_<e-v;_+=x)o>0&&this.isTriviallyExcluded(o,c,b,_,e,v,y)||this.evalStages_(s,u,p,d,b,_,e,v,y,g)&&(l[h++]={width:v,height:y,x:_,y:b});g*=n,v=g*f|0,y=g*m|0}return this.mergeRectangles_(l)},tracking.ViolaJones.isTriviallyExcluded=function(t,e,i,r,n,a,o){var s=i*n+r,c=s+a,h=s+o*n,l=h+a;return(e[s]-e[c]-e[h]+e[l])/(a*o*255)<t},tracking.ViolaJones.evalStages_=function(t,e,i,r,n,a,o,s,c,h){var l=1/(s*c),u=n*o+a,p=u+s,d=u+c*o,f=d+s,m=(e[u]-e[p]-e[d]+e[f])*l,g=(i[u]-i[p]-i[d]+i[f])*l-m*m,v=1;g>0&&(v=Math.sqrt(g));for(var y=t.length,x=2;x<y;){for(var b=0,_=t[x++],w=t[x++];w--;){for(var E=0,M=t[x++],T=t[x++],S=0;S<T;S++){var A,R,C,P,L=a+t[x++]*h+.5|0,I=n+t[x++]*h+.5|0,k=t[x++]*h+.5|0,O=t[x++]*h+.5|0,D=t[x++];M?(A=L-O+k+(I+k+O-1)*o,R=L+(I-1)*o,C=L-O+(I+O-1)*o,P=L+k+(I+k-1)*o,E+=(r[A]+r[R]-r[C]-r[P])*D):(A=I*o+L,R=A+k,C=A+O*o,P=C+k,E+=(e[A]-e[R]-e[C]+e[P])*D)}var U=t[x++],B=t[x++],F=t[x++];b+=E*l<U*v?B:F}if(b<_)return!1}return!0},tracking.ViolaJones.mergeRectangles_=function(t){for(var e=new tracking.DisjointSet(t.length),i=0;i<t.length;i++)for(var r=t[i],n=0;n<t.length;n++){var a=t[n];if(tracking.Math.intersectRect(r.x,r.y,r.x+r.width,r.y+r.height,a.x,a.y,a.x+a.width,a.y+a.height)){var o=Math.max(r.x,a.x),s=Math.max(r.y,a.y),c=Math.min(r.x+r.width,a.x+a.width),h=Math.min(r.y+r.height,a.y+a.height),l=(o-c)*(s-h),u=r.width*r.height,p=a.width*a.height;l/(u*(u/p))>=this.REGIONS_OVERLAP&&l/(p*(u/p))>=this.REGIONS_OVERLAP&&e.union(i,n)}}for(var d={},f=0;f<e.length;f++){var m=e.find(f);d[m]?(d[m].total++,d[m].width+=t[f].width,d[m].height+=t[f].height,d[m].x+=t[f].x,d[m].y+=t[f].y):d[m]={total:1,width:t[f].width,height:t[f].height,x:t[f].x,y:t[f].y}}var g=[];return Object.keys(d).forEach(function(t){var e=d[t];g.push({total:e.total,width:e.width/e.total+.5|0,height:e.height/e.total+.5|0,x:e.x/e.total+.5|0,y:e.y/e.total+.5|0})}),g}}(),function(){tracking.Brief={},tracking.Brief.N=512,tracking.Brief.randomImageOffsets_={},tracking.Brief.randomWindowOffsets_=null,tracking.Brief.getDescriptors=function(t,e,i){for(var r=new Int32Array((i.length>>1)*(this.N>>5)),n=0,a=this.getRandomOffsets_(e),o=0,s=0;s<i.length;s+=2)for(var c=e*i[s+1]+i[s],h=0,l=0,u=this.N;l<u;l++)t[a[h++]+c]<t[a[h++]+c]&&(n|=1<<(31&l)),l+1&31||(r[o++]=n,n=0);return r},tracking.Brief.match=function(t,e,i,r){for(var n=t.length>>1,a=i.length>>1,o=new Array(n),s=0;s<n;s++){for(var c=1/0,h=0,l=0;l<a;l++){for(var u=0,p=0,d=this.N>>5;p<d;p++)u+=tracking.Math.hammingWeight(e[s*d+p]^r[l*d+p]);u<c&&(c=u,h=l)}o[s]={index1:s,index2:h,keypoint1:[t[2*s],t[2*s+1]],keypoint2:[i[2*h],i[2*h+1]],confidence:1-c/this.N}}return o},tracking.Brief.reciprocalMatch=function(t,e,i,r){var n=[];if(0===t.length||0===i.length)return n;for(var a=tracking.Brief.match(t,e,i,r),o=tracking.Brief.match(i,r,t,e),s=0;s<a.length;s++)o[a[s].index2].index2===s&&n.push(a[s]);return n},tracking.Brief.getRandomOffsets_=function(t){if(!this.randomWindowOffsets_){for(var e=0,i=new Int32Array(4*this.N),r=0;r<this.N;r++)i[e++]=Math.round(tracking.Math.uniformRandom(-15,16)),i[e++]=Math.round(tracking.Math.uniformRandom(-15,16)),i[e++]=Math.round(tracking.Math.uniformRandom(-15,16)),i[e++]=Math.round(tracking.Math.uniformRandom(-15,16));this.randomWindowOffsets_=i}if(!this.randomImageOffsets_[t]){for(var n=0,a=new Int32Array(2*this.N),o=0;o<this.N;o++)a[n++]=this.randomWindowOffsets_[4*o]*t+this.randomWindowOffsets_[4*o+1],a[n++]=this.randomWindowOffsets_[4*o+2]*t+this.randomWindowOffsets_[4*o+3];this.randomImageOffsets_[t]=a}return this.randomImageOffsets_[t]}}(),function(){tracking.Fast={},tracking.Fast.THRESHOLD=40,tracking.Fast.circles_={},tracking.Fast.findCorners=function(t,e,i,r){var n=this.getCircleOffsets_(e),a=new Int32Array(16),o=[];void 0===r&&(r=this.THRESHOLD);for(var s=3;s<i-3;s++)for(var c=3;c<e-3;c++){for(var h=s*e+c,l=t[h],u=0;u<16;u++)a[u]=t[h+n[u]];this.isCorner(l,a,r)&&(o.push(c,s),c+=3)}return o},tracking.Fast.isBrighter=function(t,e,i){return t-e>i},tracking.Fast.isCorner=function(t,e,i){if(this.isTriviallyExcluded(e,t,i))return!1;for(var r=0;r<16;r++){for(var n=!0,a=!0,o=0;o<9;o++){var s=e[r+o&15];if(!this.isBrighter(t,s,i)&&(a=!1,!1===n))break;if(!this.isDarker(t,s,i)&&(n=!1,!1===a))break}if(a||n)return!0}return!1},tracking.Fast.isDarker=function(t,e,i){return e-t>i},tracking.Fast.isTriviallyExcluded=function(t,e,i){var r=0,n=t[8],a=t[12],o=t[4],s=t[0];return this.isBrighter(s,e,i)&&r++,this.isBrighter(o,e,i)&&r++,this.isBrighter(n,e,i)&&r++,this.isBrighter(a,e,i)&&r++,r<3&&(r=0,this.isDarker(s,e,i)&&r++,this.isDarker(o,e,i)&&r++,this.isDarker(n,e,i)&&r++,this.isDarker(a,e,i)&&r++,r<3)},tracking.Fast.getCircleOffsets_=function(t){if(this.circles_[t])return this.circles_[t];var e=new Int32Array(16);return e[0]=-t-t-t,e[1]=e[0]+1,e[2]=e[1]+t+1,e[3]=e[2]+t+1,e[4]=e[3]+t,e[5]=e[4]+t,e[6]=e[5]+t-1,e[7]=e[6]+t-1,e[8]=e[7]-1,e[9]=e[8]-1,e[10]=e[9]-t-1,e[11]=e[10]-t-1,e[12]=e[11]-t,e[13]=e[12]-t,e[14]=e[13]-t+1,e[15]=e[14]-t+1,this.circles_[t]=e,e}}(),function(){tracking.Math={},tracking.Math.distance=function(t,e,i,r){var n=i-t,a=r-e;return Math.sqrt(n*n+a*a)},tracking.Math.hammingWeight=function(t){return t-=t>>1&1431655765,16843009*((t=(858993459&t)+(t>>2&858993459))+(t>>4)&252645135)>>24},tracking.Math.uniformRandom=function(t,e){return t+Math.random()*(e-t)},tracking.Math.intersectRect=function(t,e,i,r,n,a,o,s){return!(n>i||o<t||a>r||s<e)}}(),function(){tracking.Matrix={},tracking.Matrix.forEach=function(t,e,i,r,n){n=n||1;for(var a=0;a<i;a+=n)for(var o=0;o<e;o+=n){var s=a*e*4+4*o;r.call(this,t[s],t[s+1],t[s+2],t[s+3],s,a,o)}},tracking.Matrix.sub=function(t,e){for(var i=tracking.Matrix.clone(t),r=0;r<i.length;r++)for(var n=0;n<i[r].length;n++)i[r][n]-=e[r][n];return i},tracking.Matrix.add=function(t,e){for(var i=tracking.Matrix.clone(t),r=0;r<i.length;r++)for(var n=0;n<i[r].length;n++)i[r][n]+=e[r][n];return i},tracking.Matrix.clone=function(t,e,i){e=e||t[0].length,i=i||t.length;for(var r=new Array(i),n=i;n--;){r[n]=new Array(e);for(var a=e;a--;)r[n][a]=t[n][a]}return r},tracking.Matrix.mulScalar=function(t,e){for(var i=tracking.Matrix.clone(e),r=0;r<e.length;r++)for(var n=0;n<e[r].length;n++)i[r][n]*=t;return i},tracking.Matrix.transpose=function(t){for(var e=new Array(t[0].length),i=0;i<t[0].length;i++){e[i]=new Array(t.length);for(var r=0;r<t.length;r++)e[i][r]=t[r][i]}return e},tracking.Matrix.mul=function(t,e){for(var i=new Array(t.length),r=0;r<t.length;r++){i[r]=new Array(e[0].length);for(var n=0;n<e[0].length;n++){i[r][n]=0;for(var a=0;a<t[0].length;a++)i[r][n]+=t[r][a]*e[a][n]}}return i},tracking.Matrix.norm=function(t){for(var e=0,i=0;i<t.length;i++)for(var r=0;r<t[i].length;r++)e+=t[i][r]*t[i][r];return Math.sqrt(e)},tracking.Matrix.calcCovarMatrix=function(t){for(var e=new Array(t.length),i=0;i<t.length;i++){e[i]=[0];for(var r=0;r<t[i].length;r++)e[i][0]+=t[i][r]/t[i].length}for(var n=tracking.Matrix.clone(e),i=0;i<n.length;i++)for(var r=0;r<t[0].length-1;r++)n[i].push(n[i][0]);var a=tracking.Matrix.sub(t,n),o=tracking.Matrix.transpose(a);return[tracking.Matrix.mul(o,a),e]}}(),function(){tracking.EPnP={},tracking.EPnP.solve=function(t,e,i){}}(),function(){tracking.Tracker=function(){tracking.Tracker.base(this,"constructor")},tracking.inherits(tracking.Tracker,tracking.EventEmitter),tracking.Tracker.prototype.track=function(){}}(),function(){tracking.TrackerTask=function(t){if(tracking.TrackerTask.base(this,"constructor"),!t)throw new Error("Tracker instance not specified.");this.setTracker(t)},tracking.inherits(tracking.TrackerTask,tracking.EventEmitter),tracking.TrackerTask.prototype.tracker_=null,tracking.TrackerTask.prototype.running_=!1,tracking.TrackerTask.prototype.getTracker=function(){return this.tracker_},tracking.TrackerTask.prototype.inRunning=function(){return this.running_},tracking.TrackerTask.prototype.setRunning=function(t){this.running_=t},tracking.TrackerTask.prototype.setTracker=function(t){this.tracker_=t},tracking.TrackerTask.prototype.run=function(){var t=this;if(!this.inRunning())return this.setRunning(!0),this.reemitTrackEvent_=function(e){t.emit("track",e)},this.tracker_.on("track",this.reemitTrackEvent_),this.emit("run"),this},tracking.TrackerTask.prototype.stop=function(){if(this.inRunning())return this.setRunning(!1),this.emit("stop"),this.tracker_.removeListener("track",this.reemitTrackEvent_),this}}(),function(){tracking.ColorTracker=function(t){tracking.ColorTracker.base(this,"constructor"),"string"==typeof t&&(t=[t]),t&&(t.forEach(function(t){if(!tracking.ColorTracker.getColor(t))throw new Error('Color not valid, try `new tracking.ColorTracker("magenta")`.')}),this.setColors(t))},tracking.inherits(tracking.ColorTracker,tracking.Tracker),tracking.ColorTracker.knownColors_={},tracking.ColorTracker.neighbours_={},tracking.ColorTracker.registerColor=function(t,e){tracking.ColorTracker.knownColors_[t]=e},tracking.ColorTracker.getColor=function(t){return tracking.ColorTracker.knownColors_[t]},tracking.ColorTracker.prototype.colors=["magenta"],tracking.ColorTracker.prototype.minDimension=20,tracking.ColorTracker.prototype.maxDimension=1/0,tracking.ColorTracker.prototype.minGroupSize=30,tracking.ColorTracker.prototype.calculateDimensions_=function(t,e){for(var i=-1,r=-1,n=1/0,a=1/0,o=0;o<e;o+=2){var s=t[o],c=t[o+1];s<n&&(n=s),s>i&&(i=s),c<a&&(a=c),c>r&&(r=c)}return{width:i-n,height:r-a,x:n,y:a}},tracking.ColorTracker.prototype.getColors=function(){return this.colors},tracking.ColorTracker.prototype.getMinDimension=function(){return this.minDimension},tracking.ColorTracker.prototype.getMaxDimension=function(){return this.maxDimension},tracking.ColorTracker.prototype.getMinGroupSize=function(){return this.minGroupSize},tracking.ColorTracker.prototype.getNeighboursForWidth_=function(t){if(tracking.ColorTracker.neighbours_[t])return tracking.ColorTracker.neighbours_[t];var e=new Int32Array(8);return e[0]=4*-t,e[1]=4*-t+4,e[2]=4,e[3]=4*t+4,e[4]=4*t,e[5]=4*t-4,e[6]=-4,e[7]=4*-t-4,tracking.ColorTracker.neighbours_[t]=e,e},tracking.ColorTracker.prototype.mergeRectangles_=function(t){for(var e,i=[],r=this.getMinDimension(),n=this.getMaxDimension(),a=0;a<t.length;a++){var o=t[a];e=!0;for(var s=a+1;s<t.length;s++){var c=t[s];if(tracking.Math.intersectRect(o.x,o.y,o.x+o.width,o.y+o.height,c.x,c.y,c.x+c.width,c.y+c.height)){e=!1;var h=Math.min(o.x,c.x),l=Math.min(o.y,c.y),u=Math.max(o.x+o.width,c.x+c.width),p=Math.max(o.y+o.height,c.y+c.height);c.height=p-l,c.width=u-h,c.x=h,c.y=l;break}}e&&o.width>=r&&o.height>=r&&o.width<=n&&o.height<=n&&i.push(o)}return i},tracking.ColorTracker.prototype.setColors=function(t){this.colors=t},tracking.ColorTracker.prototype.setMinDimension=function(t){this.minDimension=t},tracking.ColorTracker.prototype.setMaxDimension=function(t){this.maxDimension=t},tracking.ColorTracker.prototype.setMinGroupSize=function(t){this.minGroupSize=t},tracking.ColorTracker.prototype.track=function(t,e,i){var r=this,n=this.getColors();if(!n)throw new Error('Colors not specified, try `new tracking.ColorTracker("magenta")`.');var a=[];n.forEach(function(n){a=a.concat(r.trackColor_(t,e,i,n))}),this.emit("track",{data:a})},tracking.ColorTracker.prototype.trackColor_=function(i,r,n,a){var o,s,c,h,l,u=tracking.ColorTracker.knownColors_[a],p=new Int32Array(i.length>>2),d=new Int8Array(i.length),f=this.getMinGroupSize(),m=this.getNeighboursForWidth_(r),g=new Int32Array(i.length),v=[],y=-4;if(!u)return v;for(var x=0;x<n;x++)for(var b=0;b<r;b++)if(y+=4,!d[y]){for(o=0,l=-1,g[++l]=y,g[++l]=x,g[++l]=b,d[y]=1;l>=0;)if(c=g[l--],s=g[l--],h=g[l--],u(i[h],i[h+1],i[h+2],i[h+3],h,s,c)){p[o++]=c,p[o++]=s;for(var _=0;_<m.length;_++){var w=h+m[_],E=s+t[_],M=c+e[_];!d[w]&&E>=0&&E<n&&M>=0&&M<r&&(g[++l]=w,g[++l]=E,g[++l]=M,d[w]=1)}}if(o>=f){var T=this.calculateDimensions_(p,o);T&&(T.color=a,v.push(T))}}return this.mergeRectangles_(v)},tracking.ColorTracker.registerColor("cyan",function(t,e,i){var r=t-0,n=e-255,a=i-255;return e-t>=50&&i-t>=70||r*r+n*n+a*a<6400}),tracking.ColorTracker.registerColor("magenta",function(t,e,i){var r=t-255,n=e-0,a=i-255;return t-e>=50&&i-e>=50||r*r+n*n+a*a<19600}),tracking.ColorTracker.registerColor("yellow",function(t,e,i){var r=t-255,n=e-255,a=i-0;return t-i>=50&&e-i>=50||r*r+n*n+a*a<1e4});var t=new Int32Array([-1,-1,0,1,1,1,0,-1]),e=new Int32Array([0,1,1,1,0,-1,-1,-1])}(),function(){tracking.ObjectTracker=function(t){tracking.ObjectTracker.base(this,"constructor"),t&&(Array.isArray(t)||(t=[t]),Array.isArray(t)&&t.forEach(function(e,i){if("string"==typeof e&&(t[i]=tracking.ViolaJones.classifiers[e]),!t[i])throw new Error('Object classifier not valid, try `new tracking.ObjectTracker("face")`.')})),this.setClassifiers(t)},tracking.inherits(tracking.ObjectTracker,tracking.Tracker),tracking.ObjectTracker.prototype.edgesDensity=.2,tracking.ObjectTracker.prototype.initialScale=1,tracking.ObjectTracker.prototype.scaleFactor=1.25,tracking.ObjectTracker.prototype.stepSize=1.5,tracking.ObjectTracker.prototype.getClassifiers=function(){return this.classifiers},tracking.ObjectTracker.prototype.getEdgesDensity=function(){return this.edgesDensity},tracking.ObjectTracker.prototype.getInitialScale=function(){return this.initialScale},tracking.ObjectTracker.prototype.getScaleFactor=function(){return this.scaleFactor},tracking.ObjectTracker.prototype.getStepSize=function(){return this.stepSize},tracking.ObjectTracker.prototype.track=function(t,e,i){var r=this,n=this.getClassifiers();if(!n)throw new Error('Object classifier not specified, try `new tracking.ObjectTracker("face")`.');var a=[];n.forEach(function(n){a=a.concat(tracking.ViolaJones.detect(t,e,i,r.getInitialScale(),r.getScaleFactor(),r.getStepSize(),r.getEdgesDensity(),n))}),this.emit("track",{data:a})},tracking.ObjectTracker.prototype.setClassifiers=function(t){this.classifiers=t},tracking.ObjectTracker.prototype.setEdgesDensity=function(t){this.edgesDensity=t},tracking.ObjectTracker.prototype.setInitialScale=function(t){this.initialScale=t},tracking.ObjectTracker.prototype.setScaleFactor=function(t){this.scaleFactor=t},tracking.ObjectTracker.prototype.setStepSize=function(t){this.stepSize=t}}(),function(){tracking.LandmarksTracker=function(){tracking.LandmarksTracker.base(this,"constructor")},tracking.inherits(tracking.LandmarksTracker,tracking.ObjectTracker),tracking.LandmarksTracker.prototype.track=function(t,e,i){var r=tracking.ViolaJones.classifiers.face,n=tracking.ViolaJones.detect(t,e,i,this.getInitialScale(),this.getScaleFactor(),this.getStepSize(),this.getEdgesDensity(),r),a=tracking.LBF.align(t,e,i,n);this.emit("track",{data:{faces:n,landmarks:a}})}}(),function(){tracking.LBF={},tracking.LBF.Regressor=function(t){this.maxNumStages=t,this.rfs=new Array(t),this.models=new Array(t);for(var e=0;e<t;e++)this.rfs[e]=new tracking.LBF.RandomForest(e),this.models[e]=tracking.LBF.RegressorData[e].models;this.meanShape=tracking.LBF.LandmarksData},tracking.LBF.Regressor.prototype.predict=function(t,e,i,r){var n=[],a=[],o=[],s=tracking.Matrix.clone(this.meanShape);n.push({data:t,width:e,height:i}),o.push(r),a.push(tracking.LBF.projectShapeToBoundingBox_(s,r));for(var c=0;c<this.maxNumStages;c++){var h=tracking.LBF.Regressor.deriveBinaryFeat(this.rfs[c],n,a,o,s);this.applyGlobalPrediction(h,this.models[c],a,o)}return a[0]},tracking.LBF.Regressor.prototype.applyGlobalPrediction=function(t,e,i,r){for(var n=2*i[0].length,a=new Array(n/2),o=0;o<n/2;o++)a[o]=[0,0];for(var o=0;o<i.length;o++){for(var s=0;s<n;s++){for(var c=0,h=0,l=0;-1!=(l=t[o][h].index);h++)l<=e[s].nr_feature&&(c+=e[s].data[l-1]*t[o][h].value);s<n/2?a[s][0]=c:a[s-n/2][1]=c}
var u=tracking.LBF.similarityTransform_(tracking.LBF.unprojectShapeToBoundingBox_(i[o],r[o]),this.meanShape),p=(tracking.Matrix.transpose(u[0]),tracking.LBF.unprojectShapeToBoundingBox_(i[o],r[o]));p=tracking.Matrix.add(p,a),i[o]=tracking.LBF.projectShapeToBoundingBox_(p,r[o])}},tracking.LBF.Regressor.deriveBinaryFeat=function(t,e,i,r,n){for(var a=new Array(e.length),o=0;o<e.length;o++){var s=t.maxNumTrees*t.landmarkNum+1;a[o]=new Array(s);for(var c=0;c<s;c++)a[o][c]={}}for(var h=1<<t.maxDepth-1,o=0;o<e.length;o++){for(var l=tracking.LBF.unprojectShapeToBoundingBox_(i[o],r[o]),u=tracking.LBF.similarityTransform_(l,n),c=0;c<t.landmarkNum;c++)for(var p=0;p<t.maxNumTrees;p++){var d=tracking.LBF.Regressor.getCodeFromTree(t.rfs[c][p],e[o],i[o],r[o],u[0],u[1]),f=c*t.maxNumTrees+p;a[o][f].index=h*f+d,a[o][f].value=1}a[o][t.landmarkNum*t.maxNumTrees].index=-1,a[o][t.landmarkNum*t.maxNumTrees].value=-1}return a},tracking.LBF.Regressor.getCodeFromTree=function(t,e,i,r,n,a){for(var o=0,s=0;;){var c=Math.cos(t.nodes[o].feats[0])*t.nodes[o].feats[2]*t.maxRadioRadius*r.width,h=Math.sin(t.nodes[o].feats[0])*t.nodes[o].feats[2]*t.maxRadioRadius*r.height,l=Math.cos(t.nodes[o].feats[1])*t.nodes[o].feats[3]*t.maxRadioRadius*r.width,u=Math.sin(t.nodes[o].feats[1])*t.nodes[o].feats[3]*t.maxRadioRadius*r.height,p=n[0][0]*c+n[0][1]*h,d=n[1][0]*c+n[1][1]*h,f=Math.floor(p+i[t.landmarkID][0]),m=Math.floor(d+i[t.landmarkID][1]);f=Math.max(0,Math.min(f,e.height-1)),m=Math.max(0,Math.min(m,e.width-1));var g=n[0][0]*l+n[0][1]*u,v=n[1][0]*l+n[1][1]*u,y=Math.floor(g+i[t.landmarkID][0]),x=Math.floor(v+i[t.landmarkID][1]);y=Math.max(0,Math.min(y,e.height-1)),x=Math.max(0,Math.min(x,e.width-1));if(o=Math.floor(e.data[m*e.width+f])-Math.floor(e.data[x*e.width+y])<t.nodes[o].thresh?t.nodes[o].cnodes[0]:t.nodes[o].cnodes[1],1==t.nodes[o].is_leafnode){s=1;for(var b=0;b<t.leafnodes.length;b++){if(t.leafnodes[b]==o)return s;s++}return s}}return s}}(),function(){tracking.LBF.maxNumStages=4,tracking.LBF.regressor_=null,tracking.LBF.align=function(t,e,i,r){null==tracking.LBF.regressor_&&(tracking.LBF.regressor_=new tracking.LBF.Regressor(tracking.LBF.maxNumStages)),t=tracking.Image.grayscale(t,e,i,!1),t=tracking.Image.equalizeHist(t,e,i);var n=new Array(r.length);for(var a in r){r[a].height=r[a].width;var o={};o.startX=r[a].x,o.startY=r[a].y,o.width=r[a].width,o.height=r[a].height,n[a]=tracking.LBF.regressor_.predict(t,e,i,o)}return n},tracking.LBF.unprojectShapeToBoundingBox_=function(t,e){for(var i=new Array(t.length),r=0;r<t.length;r++)i[r]=[(t[r][0]-e.startX)/e.width,(t[r][1]-e.startY)/e.height];return i},tracking.LBF.projectShapeToBoundingBox_=function(t,e){for(var i=new Array(t.length),r=0;r<t.length;r++)i[r]=[t[r][0]*e.width+e.startX,t[r][1]*e.height+e.startY];return i},tracking.LBF.similarityTransform_=function(t,e){for(var i=[0,0],r=[0,0],n=0;n<t.length;n++)i[0]+=t[n][0],i[1]+=t[n][1],r[0]+=e[n][0],r[1]+=e[n][1];i[0]/=t.length,i[1]/=t.length,r[0]/=e.length,r[1]/=e.length;for(var a=tracking.Matrix.clone(t),o=tracking.Matrix.clone(e),n=0;n<t.length;n++)a[n][0]-=i[0],a[n][1]-=i[1],o[n][0]-=r[0],o[n][1]-=r[1];var s,c,h=tracking.Matrix.calcCovarMatrix(a);s=h[0],h[1],h=tracking.Matrix.calcCovarMatrix(o),c=h[0],h[1];var l=Math.sqrt(tracking.Matrix.norm(s)),u=Math.sqrt(tracking.Matrix.norm(c)),p=l/u;a=tracking.Matrix.mulScalar(1/l,a),o=tracking.Matrix.mulScalar(1/u,o);for(var d=0,f=0,n=0;n<t.length;n++)d=d+a[n][1]*o[n][0]-a[n][0]*o[n][1],f=f+a[n][0]*o[n][0]+a[n][1]*o[n][1];var m=Math.sqrt(d*d+f*f),g=d/m,v=f/m;return[[[v,-g],[g,v]],p]},tracking.LBF.RandomForest=function(t){this.maxNumTrees=tracking.LBF.RegressorData[t].max_numtrees,this.landmarkNum=tracking.LBF.RegressorData[t].num_landmark,this.maxDepth=tracking.LBF.RegressorData[t].max_depth,this.stages=tracking.LBF.RegressorData[t].stages,this.rfs=new Array(this.landmarkNum);for(var e=0;e<this.landmarkNum;e++){this.rfs[e]=new Array(this.maxNumTrees);for(var i=0;i<this.maxNumTrees;i++)this.rfs[e][i]=new tracking.LBF.Tree(t,e,i)}},tracking.LBF.Tree=function(t,e,i){var r=tracking.LBF.RegressorData[t].landmarks[e][i];this.maxDepth=r.max_depth,this.maxNumNodes=r.max_numnodes,this.nodes=r.nodes,this.landmarkID=r.landmark_id,this.numLeafnodes=r.num_leafnodes,this.numNodes=r.num_nodes,this.maxNumFeats=r.max_numfeats,this.maxRadioRadius=r.max_radio_radius,this.leafnodes=r.id_leafnodes}}()},function(t,e){
tracking.ViolaJones.classifiers.eye=new Float64Array([20,20,-1.4562760591506958,6,0,2,0,8,20,12,-1,0,14,20,6,2,.129639595746994,-.7730420827865601,.6835014820098877,0,2,9,1,4,15,-1,9,6,4,5,3,-.0463268086314201,.5735275149345398,-.4909768998622894,0,2,6,10,9,2,-1,9,10,3,2,3,-.0161730907857418,.6025434136390686,-.3161070942878723,0,2,7,0,10,9,-1,7,3,10,3,3,-.0458288416266441,.6417754888534546,-.1554504036903381,0,2,12,2,2,18,-1,12,8,2,6,3,-.0537596195936203,.5421931743621826,-.2048082947731018,0,2,8,6,8,6,-1,8,9,8,3,2,.0341711901128292,-.2338819056749344,.4841090142726898,-1.2550230026245117,12,0,2,2,0,17,18,-1,2,6,17,6,3,-.2172762006521225,.7109889984130859,-.5936073064804077,0,2,10,10,1,8,-1,10,14,1,4,2,.0120719699189067,-.2824048101902008,.5901355147361755,0,2,7,10,9,2,-1,10,10,3,2,3,-.0178541392087936,.5313752293586731,-.2275896072387695,0,2,5,1,6,6,-1,5,3,6,2,3,.0223336108028889,-.1755609959363937,.633561372756958,0,2,3,1,15,9,-1,3,4,15,3,3,-.091420017182827,.6156309247016907,-.1689953058958054,0,2,6,3,9,6,-1,6,5,9,2,3,.028973650187254,-.1225007995963097,.7440117001533508,0,2,8,17,6,3,-1,10,17,2,3,3,.007820346392691135,.1697437018156052,-.6544165015220642,0,2,9,10,9,1,-1,12,10,3,1,3,.0203404892235994,-.1255664974451065,.8271045088768005,0,2,1,7,6,11,-1,3,7,2,11,3,-.0119261499494314,.3860568106174469,-.2099234014749527,0,2,9,18,3,1,-1,10,18,1,1,3,-.000972811016254127,-.6376119256019592,.129523903131485,0,2,16,16,1,2,-1,16,17,1,1,2,18322050891583785e-21,-.3463147878646851,.2292426973581314,0,2,9,17,6,3,-1,11,17,2,3,3,-.008085441775619984,-.6366580128669739,.1307865977287293,-1.372818946838379,9,0,2,8,0,5,18,-1,8,6,5,6,3,-.1181226968765259,.6784452199935913,-.5004578232765198,0,2,6,7,9,7,-1,9,7,3,7,3,-.0343327596783638,.6718636155128479,-.3574487864971161,0,2,14,6,6,10,-1,16,6,2,10,3,-.0215307995676994,.7222070097923279,-.1819241940975189,0,2,9,8,9,5,-1,12,8,3,5,3,-.0219099707901478,.6652938723564148,-.2751022875308991,0,2,3,7,9,6,-1,6,7,3,6,3,-.0287135392427444,.6995570063591003,-.1961558014154434,0,2,1,7,6,6,-1,3,7,2,6,3,-.0114674801006913,.5926734805107117,-.2209735065698624,0,2,16,0,4,18,-1,16,6,4,6,3,-.0226111691445112,.3448306918144226,-.3837955892086029,0,2,0,17,3,3,-1,0,18,3,1,3,-.0019308089977130294,-.794457197189331,.1562865972518921,0,2,16,0,2,1,-1,17,0,1,1,2,5641991083393805e-20,-.3089601099491119,.3543108999729157,-1.2879480123519897,16,0,2,0,8,20,12,-1,0,14,20,6,2,.1988652050495148,-.5286070108413696,.3553672134876251,0,2,6,6,9,8,-1,9,6,3,8,3,-.0360089391469955,.4210968911647797,-.393489807844162,0,2,5,3,12,9,-1,5,6,12,3,3,-.0775698497891426,.4799154102802277,-.2512216866016388,0,2,4,16,1,2,-1,4,17,1,1,2,8263085328508168e-20,-.3847548961639404,.318492203950882,0,2,18,10,2,1,-1,19,10,1,1,2,.00032773229759186506,-.2642731964588165,.3254724144935608,0,2,9,8,6,5,-1,11,8,2,5,3,-.0185748506337404,.4673658907413483,-.1506727039813995,0,2,0,0,2,1,-1,1,0,1,1,2,-7000876212259755e-20,.2931315004825592,-.2536509931087494,0,2,6,8,6,6,-1,8,8,2,6,3,-.0185521300882101,.4627366065979004,-.1314805001020432,0,2,11,7,6,7,-1,13,7,2,7,3,-.0130304200574756,.4162721931934357,-.1775148957967758,0,2,19,14,1,2,-1,19,15,1,1,2,6569414108525962e-20,-.2803510129451752,.2668074071407318,0,2,6,17,1,2,-1,6,18,1,1,2,.00017005260451696813,-.2702724933624268,.2398165017366409,0,2,14,7,2,7,-1,15,7,1,7,2,-.0033129199873656034,.4441143870353699,-.1442888975143433,0,2,6,8,2,4,-1,7,8,1,4,2,.0017583490116521716,-.1612619012594223,.4294076859951019,0,2,5,8,12,6,-1,5,10,12,2,3,-.0251947492361069,.4068729877471924,-.1820258051156998,0,2,2,17,1,3,-1,2,18,1,1,3,.0014031709870323539,.0847597867250443,-.8001856803894043,0,2,6,7,3,6,-1,7,7,1,6,3,-.007399172987788916,.5576609969139099,-.1184315979480743,-1.2179850339889526,23,0,2,6,7,9,12,-1,9,7,3,12,3,-.0299430806189775,.3581081032752991,-.3848763108253479,0,2,6,2,11,12,-1,6,6,11,4,3,-.1256738007068634,.3931693136692047,-.3001225888729096,0,2,1,12,5,8,-1,1,16,5,4,2,.0053635272197425365,-.4390861988067627,.1925701051950455,0,2,14,7,6,7,-1,16,7,2,7,3,-.008097182027995586,.399066686630249,-.2340787053108215,0,2,10,8,6,6,-1,12,8,2,6,3,-.0165979098528624,.4209528863430023,-.2267484068870544,0,2,16,18,4,2,-1,16,19,4,1,2,-.0020199299324303865,-.7415673136711121,.1260118931531906,0,2,18,17,2,3,-1,18,18,2,1,3,-.0015202340437099338,-.7615460157394409,.0863736122846603,0,2,9,7,3,7,-1,10,7,1,7,3,-.004966394044458866,.4218223989009857,-.1790491938591003,0,2,5,6,6,8,-1,7,6,2,8,3,-.0192076005041599,.4689489901065826,-.1437875032424927,0,2,2,6,6,11,-1,4,6,2,11,3,-.0122226802632213,.3284207880496979,-.218021497130394,0,2,8,10,12,8,-1,8,14,12,4,2,.0575486682355404,-.3676880896091461,.2435711026191711,0,2,7,17,6,3,-1,9,17,2,3,3,-.00957940798252821,-.7224506735801697,.0636645630002022,0,2,10,9,3,3,-1,11,9,1,3,3,-.002954574069008231,.358464390039444,-.1669632941484451,0,2,8,8,3,6,-1,9,8,1,6,3,-.004201799165457487,.390948086977005,-.1204179003834724,0,2,7,0,6,5,-1,9,0,2,5,3,-.0136249903589487,-.5876771807670593,.0884047299623489,0,2,6,17,1,3,-1,6,18,1,1,3,6285311246756464e-20,-.2634845972061157,.2141927927732468,0,2,0,18,4,2,-1,0,19,4,1,2,-.0026782939676195383,-.7839016914367676,.0805269628763199,0,2,4,1,11,9,-1,4,4,11,3,3,-.0705971792340279,.414692610502243,-.1398995965719223,0,2,3,1,14,9,-1,3,4,14,3,3,.0920936465263367,-.1305518001317978,.5043578147888184,0,2,0,9,6,4,-1,2,9,2,4,3,-.008800438605248928,.3660975098609924,-.1403664946556091,0,2,18,13,1,2,-1,18,14,1,1,2,750809776945971e-19,-.2970443964004517,.207029402256012,0,2,13,5,3,11,-1,14,5,1,11,3,-.002987045096233487,.3561570048332214,-.1544596999883652,0,3,0,18,8,2,-1,0,18,4,1,2,4,19,4,1,2,-.002644150983542204,-.5435351729393005,.1029511019587517,-1.2905240058898926,27,0,2,5,8,12,5,-1,9,8,4,5,3,-.0478624701499939,.4152823984622955,-.3418582081794739,0,2,4,7,11,10,-1,4,12,11,5,2,.087350532412529,-.3874978125095367,.2420420050621033,0,2,14,9,6,4,-1,16,9,2,4,3,-.0168494991958141,.5308247804641724,-.1728291064500809,0,2,0,7,6,8,-1,3,7,3,8,2,-.0288700293749571,.3584350943565369,-.2240259051322937,0,2,0,16,3,3,-1,0,17,3,1,3,.00256793899461627,.1499049961566925,-.6560940742492676,0,2,7,11,12,1,-1,11,11,4,1,3,-.0241166595369577,.5588967800140381,-.148102805018425,0,2,4,8,9,4,-1,7,8,3,4,3,-.0328266583383083,.4646868109703064,-.1078552976250649,0,2,5,16,6,4,-1,7,16,2,4,3,-.0152330603450537,-.7395442724227905,.056236881762743,0,2,18,17,1,3,-1,18,18,1,1,3,-.0003020951116923243,-.4554882049560547,.0970698371529579,0,2,18,17,1,3,-1,18,18,1,1,3,.0007536510820500553,.0951472967863083,-.5489501953125,0,3,4,9,4,10,-1,4,9,2,5,2,6,14,2,5,2,-.0106389503926039,.4091297090053558,-.1230840981006622,0,2,4,8,6,4,-1,6,8,2,4,3,-.007521783001720905,.4028914868831635,-.1604878008365631,0,2,10,2,2,18,-1,10,8,2,6,3,-.1067709997296333,.6175932288169861,-.0730911865830421,0,3,0,5,8,6,-1,0,5,4,3,2,4,8,4,3,2,.0162569191306829,-.1310368031263351,.3745365142822266,0,2,6,0,6,5,-1,8,0,2,5,3,-.020679360255599,-.71402907371521,.0523900091648102,0,2,18,0,2,14,-1,18,7,2,7,2,.0170523691922426,.1282286047935486,-.3108068108558655,0,2,8,18,4,2,-1,10,18,2,2,2,-.0057122060097754,-.605565071105957,.0818847566843033,0,2,1,17,6,3,-1,1,18,6,1,3,20851430235779844e-21,-.2681298851966858,.1445384025573731,0,2,11,8,3,5,-1,12,8,1,5,3,.007928443141281605,-.078795351088047,.5676258206367493,0,2,11,8,3,4,-1,12,8,1,4,3,-.0025217379443347454,.3706862926483154,-.1362057030200958,0,2,11,0,6,5,-1,13,0,2,5,3,-.0224261991679668,-.6870499849319458,.0510628595948219,0,2,1,7,6,7,-1,3,7,2,7,3,-.007645144127309322,.2349222004413605,-.1790595948696137,0,2,0,13,1,3,-1,0,14,1,1,3,-.0011175329564139247,-.5986905097961426,.0743244364857674,0,2,3,2,9,6,-1,3,4,9,2,3,.0192127898335457,-.1570255011320114,.2973746955394745,0,2,8,6,9,2,-1,8,7,9,1,2,.00562934298068285,-.0997690185904503,.4213027060031891,0,2,0,14,3,6,-1,0,16,3,2,3,-.00956718623638153,-.6085879802703857,.0735062584280968,0,2,1,11,6,4,-1,3,11,2,4,3,.0112179601565003,-.103208102285862,.4190984964370728,-1.160048007965088,28,0,2,6,9,9,3,-1,9,9,3,3,3,-.0174864400178194,.3130728006362915,-.3368118107318878,0,2,6,0,9,6,-1,6,2,9,2,3,.0307146497070789,-.1876619011163712,.5378080010414124,0,2,8,5,6,6,-1,8,7,6,2,3,-.0221887193620205,.3663788139820099,-.1612481027841568,0,2,1,12,2,1,-1,2,12,1,1,2,-50700771680567414e-21,.2124571055173874,-.2844462096691132,0,2,10,10,6,2,-1,12,10,2,2,3,-.007017042022198439,.3954311013221741,-.1317359060049057,0,2,13,8,6,6,-1,15,8,2,6,3,-.00685636093840003,.3037385940551758,-.2065781950950623,0,2,6,16,6,4,-1,8,16,2,4,3,-.0141292596235871,-.7650300860404968,.0982131883502007,0,2,8,0,9,9,-1,8,3,9,3,3,-.047915481030941,.483073890209198,-.1300680935382843,0,2,18,17,1,3,-1,18,18,1,1,3,47032979637151584e-21,-.2521657049655914,.2438668012619019,0,2,18,17,1,3,-1,18,18,1,1,3,.0010221180273219943,.0688576027750969,-.6586114168167114,0,2,7,10,3,3,-1,8,10,1,3,3,-.002605610992759466,.4294202923774719,-.1302246004343033,0,3,9,14,2,2,-1,9,14,1,1,2,10,15,1,1,2,5450534081319347e-20,-.1928862035274506,.2895849943161011,0,3,9,14,2,2,-1,9,14,1,1,2,10,15,1,1,2,-6672115705441684e-20,.3029071092605591,-.1985436975955963,0,2,0,8,19,12,-1,0,14,19,6,2,.2628143131732941,-.2329394072294235,.2369246035814285,0,2,7,6,9,14,-1,10,6,3,14,3,-.0235696695744991,.1940104067325592,-.2848461866378784,0,2,13,8,3,4,-1,14,8,1,4,3,-.003912017215043306,.5537897944450378,-.0956656783819199,0,2,4,17,1,3,-1,4,18,1,1,3,5078879985376261e-20,-.239126592874527,.217994898557663,0,2,4,9,6,3,-1,6,9,2,3,3,-.007873201742768288,.4069742858409882,-.1276804059743881,0,2,2,18,5,2,-1,2,19,5,1,2,-.0016778609715402126,-.5774465799331665,.0973247885704041,0,3,7,8,2,2,-1,7,8,1,1,2,8,9,1,1,2,-.0002683243073988706,.2902188003063202,-.1683126986026764,0,3,7,8,2,2,-1,7,8,1,1,2,8,9,1,1,2,7868718239478767e-20,-.1955157071352005,.2772096991539002,0,2,5,10,13,2,-1,5,11,13,1,2,.0129535002633929,-.0968383178114891,.4032387137413025,0,2,10,8,1,9,-1,10,11,1,3,3,-.0130439596250653,.4719856977462769,-.0892875492572784,0,3,15,8,2,12,-1,15,8,1,6,2,16,14,1,6,2,.0030261781066656113,-.1362338066101074,.3068627119064331,0,2,4,0,3,5,-1,5,0,1,5,3,-.006043803878128529,-.779541015625,.0573163107037544,0,2,12,6,3,7,-1,13,6,1,7,3,-.0022507249377667904,.3087705969810486,-.1500630974769592,0,2,7,16,6,4,-1,9,16,2,4,3,.0158268101513386,.0645518898963928,-.7245556712150574,0,2,9,16,2,1,-1,10,16,1,1,2,6586450763279572e-20,-.1759884059429169,.2321038991212845,-1.2257250547409058,36,0,2,6,10,9,2,-1,9,10,3,2,3,-.0278548691421747,.4551844894886017,-.1809991002082825,0,2,0,6,15,14,-1,0,13,15,7,2,.1289504021406174,-.5256553292274475,.1618890017271042,0,2,9,1,5,6,-1,9,3,5,2,3,.0244031809270382,-.1497496068477631,.4235737919807434,0,2,3,9,3,4,-1,4,9,1,4,3,-.0024458570405840874,.3294866979122162,-.1744769066572189,0,2,5,7,3,6,-1,6,7,1,6,3,-.0035336529836058617,.4742664098739624,-.0736183598637581,0,2,17,16,1,2,-1,17,17,1,1,2,5135815081303008e-20,-.3042193055152893,.1563327014446259,0,2,9,8,6,12,-1,11,8,2,12,3,-.0162256807088852,.2300218045711517,-.2035982012748718,0,2,6,10,6,1,-1,8,10,2,1,3,-.004600700922310352,.4045926928520203,-.1348544061183929,0,2,7,17,9,3,-1,10,17,3,3,3,-.0219289995729923,-.6872448921203613,.0806842669844627,0,2,14,18,6,2,-1,14,19,6,1,2,-.002897121012210846,-.6961960792541504,.0485452190041542,0,2,9,5,3,14,-1,10,5,1,14,3,-.0044074649922549725,.2516626119613648,-.1623664945363998,0,2,8,16,9,4,-1,11,16,3,4,3,.0284371692687273,.0603942610323429,-.6674445867538452,0,2,0,0,4,14,-1,0,7,4,7,2,.0832128822803497,.0643579214811325,-.5362604260444641,0,2,8,1,6,3,-1,10,1,2,3,3,-.0124193299561739,-.708168625831604,.0575266107916832,0,2,6,8,3,4,-1,7,8,1,4,3,-.004699259996414185,.5125433206558228,-.0873508006334305,0,2,4,8,3,4,-1,5,8,1,4,3,-.0007802580948919058,.266876608133316,-.1796150952577591,0,2,5,1,6,5,-1,7,1,2,5,3,-.0197243392467499,-.6756373047828674,.0729419067502022,0,2,1,18,1,2,-1,1,19,1,1,2,.001026925048790872,.0539193190634251,-.5554018020629883,0,2,7,0,6,6,-1,7,2,6,2,3,-.0259571895003319,.5636252760887146,-.0718983933329582,0,2,0,18,4,2,-1,0,19,4,1,2,-.0012552699772641063,-.5034663081169128,.0896914526820183,0,2,12,3,8,12,-1,12,7,8,4,3,-.0499705784022808,.1768511980772018,-.2230195999145508,0,2,12,9,3,4,-1,13,9,1,4,3,-.002989961067214608,.391224205493927,-.1014975011348724,0,2,12,8,3,5,-1,13,8,1,5,3,.004854684229940176,-.1177017986774445,.4219093918800354,0,2,16,0,2,1,-1,17,0,1,1,2,.0001044886012095958,-.1733397990465164,.223444402217865,0,2,5,17,1,3,-1,5,18,1,1,3,5968926052446477e-20,-.2340963035821915,.1655824035406113,0,2,10,2,3,6,-1,10,4,3,2,3,-.0134239196777344,.4302381873130798,-.0997236520051956,0,2,4,17,2,3,-1,4,18,2,1,3,.002258199965581298,.0727209895849228,-.5750101804733276,0,2,12,7,1,9,-1,12,10,1,3,3,-.0125462803989649,.3618457913398743,-.1145701035857201,0,2,7,6,3,9,-1,8,6,1,9,3,-.002870576921850443,.2821053862571716,-.1236755028367043,0,2,17,13,3,6,-1,17,15,3,2,3,.0197856407612562,.0478767491877079,-.806662380695343,0,2,7,7,3,8,-1,8,7,1,8,3,.004758893046528101,-.1092538982629776,.3374697864055634,0,2,5,0,3,5,-1,6,0,1,5,3,-.006997426971793175,-.8029593825340271,.0457067005336285,0,2,4,6,9,8,-1,7,6,3,8,3,-.0130334803834558,.18680439889431,-.176889106631279,0,2,2,9,3,3,-1,3,9,1,3,3,-.0013742579612880945,.2772547900676727,-.1280900985002518,0,2,16,18,4,2,-1,16,19,4,1,2,.0027657810132950544,.0907589420676231,-.4259473979473114,0,2,17,10,3,10,-1,17,15,3,5,2,.0002894184144679457,-.388163298368454,.089267797768116,-1.2863140106201172,47,0,2,8,9,6,4,-1,10,9,2,4,3,-.0144692296162248,.3750782907009125,-.2492828965187073,0,2,5,2,10,12,-1,5,6,10,4,3,-.1331762969493866,.3016637861728668,-.2241407036781311,0,2,6,9,6,3,-1,8,9,2,3,3,-.010132160037756,.3698559105396271,-.1785001009702683,0,2,11,7,3,7,-1,12,7,1,7,3,-.007851118221879005,.4608676135540009,-.1293139010667801,0,2,12,8,6,4,-1,14,8,2,4,3,-.0142958397045732,.4484142959117889,-.1022624000906944,0,2,14,8,6,5,-1,16,8,2,5,3,-.005960694048553705,.279279887676239,-.1532382965087891,0,2,12,12,2,4,-1,12,14,2,2,2,.010932769626379,-.1514174044132233,.3988964855670929,0,2,3,15,1,2,-1,3,16,1,1,2,50430990086169913e-21,-.2268157005310059,.2164438962936401,0,2,12,7,3,4,-1,13,7,1,4,3,-.0058431681245565414,.4542014896869659,-.1258715987205505,0,2,10,0,6,6,-1,12,0,2,6,3,-.0223462097346783,-.6269019246101379,.0824031233787537,0,2,10,6,3,8,-1,11,6,1,8,3,-.00488366698846221,.2635925114154816,-.1468663066625595,0,2,16,17,1,2,-1,16,18,1,1,2,7550600275862962e-20,-.2450702041387558,.1667888015508652,0,2,16,16,1,3,-1,16,17,1,1,3,-.0004902699729427695,-.426499605178833,.0899735614657402,0,2,11,11,1,2,-1,11,12,1,1,2,.0014861579984426498,-.1204025000333786,.3009765148162842,0,2,3,7,6,9,-1,5,7,2,9,3,-.0119883399456739,.278524786233902,-.122443400323391,0,2,4,18,9,1,-1,7,18,3,1,3,.0105022396892309,.0404527597129345,-.7405040860176086,0,2,0,11,4,9,-1,0,14,4,3,3,-.0309630092233419,-.6284269094467163,.048013761639595,0,2,9,17,6,3,-1,11,17,2,3,3,.0114145204424858,.0394052118062973,-.7167412042617798,0,2,7,8,6,12,-1,9,8,2,12,3,-.0123370001092553,.1994132995605469,-.1927430033683777,0,2,6,8,3,4,-1,7,8,1,4,3,-.005994226783514023,.5131816267967224,-.0616580583155155,0,2,3,17,1,3,-1,3,18,1,1,3,-.0011923230485990644,-.72605299949646,.0506527200341225,0,2,11,9,6,4,-1,13,9,2,4,3,-.0074582789093256,.2960307896137238,-.1175478994846344,0,2,6,1,3,2,-1,7,1,1,2,3,.0027877509128302336,.0450687110424042,-.6953541040420532,0,2,1,0,2,1,-1,2,0,1,1,2,-.0002250320976600051,.200472503900528,-.1577524989843369,0,3,1,0,2,14,-1,1,0,1,7,2,2,7,1,7,2,-.005036788992583752,.292998194694519,-.1170049980282784,0,2,5,5,11,8,-1,5,9,11,4,2,.0747421607375145,-.1139231994748116,.3025662004947662,0,2,9,3,5,6,-1,9,5,5,2,3,.0202555190771818,-.1051589027047157,.4067046046257019,0,2,7,9,5,10,-1,7,14,5,5,2,.0442145094275475,-.2763164043426514,.1236386969685555,0,2,15,10,2,2,-1,16,10,1,2,2,-.0008725955849513412,.2435503005981445,-.1330094933509827,0,2,0,18,8,2,-1,0,19,8,1,2,-.0024453739169985056,-.5386617183685303,.062510646879673,0,2,7,17,1,3,-1,7,18,1,1,3,827253534225747e-19,-.2077220976352692,.1627043932676315,0,2,7,2,11,6,-1,7,4,11,2,3,-.036627110093832,.3656840920448303,-.0903302803635597,0,2,8,3,9,3,-1,8,4,9,1,3,.0030996399000287056,-.1318302005529404,.2535429894924164,0,2,0,9,2,2,-1,0,10,2,1,2,-.0024709280114620924,-.5685349702835083,.0535054318606853,0,2,0,5,3,6,-1,0,7,3,2,3,-.0141146704554558,-.4859901070594788,.0584852509200573,0,3,6,7,2,2,-1,6,7,1,1,2,7,8,1,1,2,.0008453726186417043,-.0800936371088028,.4026564955711365,0,2,7,6,3,6,-1,8,6,1,6,3,-.007109863217920065,.4470323920249939,-.0629474371671677,0,2,12,1,6,4,-1,14,1,2,4,3,-.0191259607672691,-.6642286777496338,.0498227700591087,0,2,9,11,6,8,-1,11,11,2,8,3,-.005077301058918238,.1737940013408661,-.168505996465683,0,2,17,15,3,3,-1,17,16,3,1,3,-.002919828984886408,-.6011028289794922,.0574279390275478,0,2,6,6,3,9,-1,6,9,3,3,3,-.0249021500349045,.233979806303978,-.1181845963001251,0,3,0,5,8,6,-1,0,5,4,3,2,4,8,4,3,2,.02014777995646,-.0894598215818405,.3602440059185028,0,2,0,6,1,3,-1,0,7,1,1,3,.001759764039888978,.0494584403932095,-.6310262084007263,0,2,17,0,2,6,-1,18,0,1,6,2,.0013812039978802204,-.1521805971860886,.1897173970937729,0,2,10,17,6,3,-1,12,17,2,3,3,-.0109045403078198,-.5809738039970398,.0448627285659313,0,3,13,15,2,2,-1,13,15,1,1,2,14,16,1,1,2,7515717879869044e-20,-.1377734988927841,.1954316049814224,0,2,4,0,12,3,-1,4,1,12,1,3,.003864977043122053,-.1030222997069359,.2537496984004974,-1.1189440488815308,48,0,2,5,3,10,9,-1,5,6,10,3,3,-.102158896625042,.4168125987052918,-.1665562987327576,0,2,7,7,9,7,-1,10,7,3,7,3,-.051939819008112,.3302395045757294,-.2071571052074432,0,2,5,8,9,6,-1,8,8,3,6,3,-.0427177809178829,.2609373033046722,-.1601389050483704,0,2,0,16,6,2,-1,0,17,6,1,2,.00043890418601222336,-.3475053012371063,.1391891986131668,0,2,12,6,7,14,-1,12,13,7,7,2,.0242643896490335,-.4255205988883972,.1357838064432144,0,2,13,7,6,8,-1,15,7,2,8,3,-.0238205995410681,.3174980878829956,-.1665204018354416,0,2,2,10,6,3,-1,4,10,2,3,3,-.007051818072795868,.3094717860221863,-.1333830058574677,0,2,18,17,1,3,-1,18,18,1,1,3,-.0006851715734228492,-.6008226275444031,.0877470001578331,0,2,7,1,6,2,-1,7,2,6,1,2,.0053705149330198765,-.1231144964694977,.3833355009555817,0,2,6,0,6,4,-1,6,2,6,2,2,-.0134035395458341,.3387736976146698,-.1014048978686333,0,2,8,18,6,2,-1,10,18,2,2,3,-.006685636006295681,-.6119359731674194,.0477402210235596,0,2,7,6,5,2,-1,7,7,5,1,2,-.0042887418530881405,.2527579069137573,-.1443451046943665,0,2,6,7,3,6,-1,7,7,1,6,3,-.0108767496421933,.5477573275566101,-.0594554804265499,0,3,18,18,2,2,-1,18,18,1,1,2,19,19,1,1,2,.0003788264002650976,.0834103003144264,-.4422636926174164,0,2,16,8,3,7,-1,17,8,1,7,3,-.002455014968290925,.2333099991083145,-.1396448016166687,0,2,0,16,2,3,-1,0,17,2,1,3,.0012721839593723416,.0604802891612053,-.4945608973503113,0,2,5,19,6,1,-1,7,19,2,1,3,-.004893315955996513,-.6683326959609985,.0462184995412827,0,2,9,5,6,6,-1,9,7,6,2,3,.0264499895274639,-.0732353627681732,.4442596137523651,0,2,0,10,2,4,-1,0,12,2,2,2,-.003370607038959861,-.4246433973312378,.0686765611171722,0,2,0,9,4,3,-1,2,9,2,3,2,-.0029559480026364326,.1621803939342499,-.1822299957275391,0,2,1,10,6,9,-1,3,10,2,9,3,.0306199099868536,-.0586433410644531,.532636284828186,0,2,9,0,6,2,-1,11,0,2,2,3,-.009576590731739998,-.6056268215179443,.0533459894359112,0,2,14,1,2,1,-1,15,1,1,1,2,6637249316554517e-20,-.1668083965778351,.1928416043519974,0,2,0,8,1,4,-1,0,10,1,2,2,.005097595043480396,.0441195107996464,-.574588418006897,0,3,15,6,2,2,-1,15,6,1,1,2,16,7,1,1,2,.0003711271856445819,-.1108639985322952,.2310539036989212,0,2,7,5,3,6,-1,8,5,1,6,3,-.008660758845508099,.4045628905296326,-.062446091324091,0,2,19,17,1,3,-1,19,18,1,1,3,.0008748915861360729,.0648751482367516,-.4487104117870331,0,2,7,10,3,1,-1,8,10,1,1,3,.0011120870476588607,-.09386146068573,.3045391142368317,0,2,12,1,6,6,-1,14,1,2,6,3,-.0238378196954727,-.5888742804527283,.0466594211757183,0,2,15,5,2,1,-1,16,5,1,1,2,.00022272899514064193,-.1489859968423843,.1770195066928864,0,2,8,2,7,4,-1,8,4,7,2,2,.0244674701243639,-.0557896010577679,.4920830130577087,0,2,4,0,14,15,-1,4,5,14,5,3,-.1423932015895844,.1519200056791306,-.1877889931201935,0,2,7,8,6,6,-1,9,8,2,6,3,-.0201231203973293,.2178010046482086,-.1208190023899078,0,2,11,17,1,3,-1,11,18,1,1,3,.00011513679783092812,-.1685658991336823,.1645192950963974,0,3,12,16,2,4,-1,12,16,1,2,2,13,18,1,2,2,-.0027556740678846836,-.6944203972816467,.039449468255043,0,2,10,13,2,1,-1,11,13,1,1,2,-7584391278214753e-20,.1894136965274811,-.151838406920433,0,2,11,8,3,3,-1,12,8,1,3,3,-.0070697711780667305,.4706459939479828,-.0579276196658611,0,2,2,0,6,8,-1,4,0,2,8,3,-.0373931787908077,-.7589244842529297,.0341160483658314,0,3,3,5,6,6,-1,3,5,3,3,2,6,8,3,3,2,-.0159956105053425,.3067046999931335,-.0875255763530731,0,2,10,8,3,3,-1,11,8,1,3,3,-.003118399064987898,.2619537115097046,-.0912148877978325,0,2,5,17,4,2,-1,5,18,4,1,2,.001065136049874127,-.1742756068706513,.1527764052152634,0,2,8,16,5,2,-1,8,17,5,1,2,-.0016029420075938106,.3561263084411621,-.0766299962997437,0,2,0,4,3,3,-1,0,5,3,1,3,.004361990839242935,.04935697093606,-.5922877192497253,0,2,6,3,6,2,-1,8,3,2,2,3,-.0107799097895622,-.6392217874526978,.0332045406103134,0,2,4,4,9,3,-1,7,4,3,3,3,-.004359086975455284,.1610738933086395,-.1522132009267807,0,2,0,13,1,4,-1,0,15,1,2,2,.007459606975317001,.0331729613244534,-.7500774264335632,0,2,0,17,8,3,-1,0,18,8,1,3,.008138544857501984,.0263252798467875,-.7173116207122803,0,2,6,1,11,6,-1,6,3,11,2,3,-.0333384908735752,.3353661000728607,-.070803590118885,-1.1418989896774292,55,0,2,4,10,6,2,-1,6,10,2,2,3,.0195539798587561,-.1043972000479698,.5312895178794861,0,2,10,8,1,12,-1,10,14,1,6,2,.0221229195594788,-.2474727034568787,.2084725052118301,0,2,5,8,3,4,-1,6,8,1,4,3,-.004182938951998949,.3828943967819214,-.1471157968044281,0,2,0,17,1,3,-1,0,18,1,1,3,-.0008638172876089811,-.6263288855552673,.1199325993657112,0,2,0,17,1,3,-1,0,18,1,1,3,.0007995861233212054,.0925734713673592,-.5516883134841919,0,2,13,8,3,4,-1,14,8,1,4,3,.009152757003903389,-.0729298070073128,.5551251173019409,0,2,1,5,5,4,-1,1,7,5,2,2,-.003938868176192045,.2019603997468948,-.2091203927993774,0,2,18,14,1,2,-1,18,15,1,1,2,.00014613410166930407,-.278618186712265,.1381741017103195,0,2,13,8,2,4,-1,14,8,1,4,2,-.0031691689509898424,.3668589890003204,-.0763082429766655,0,2,10,6,6,8,-1,12,6,2,8,3,-.0221893899142742,.39096599817276,-.1097154021263123,0,2,8,6,6,10,-1,10,6,2,10,3,-.007452360820025206,.1283859014511108,-.2415986955165863,0,2,17,16,1,3,-1,17,17,1,1,3,.000779970025178045,.0719780698418617,-.4397650063037872,0,2,1,7,2,10,-1,2,7,1,10,2,-.004678363911807537,.2156984955072403,-.1420592069625855,0,2,5,9,6,3,-1,7,9,2,3,3,-.0151886399835348,.364587813615799,-.08267592638731,0,2,0,8,5,12,-1,0,14,5,6,2,.0050619798712432384,-.3438040912151337,.0920682325959206,0,2,0,11,1,3,-1,0,12,1,1,3,-.0017351920250803232,-.6172549724578857,.0492144785821438,0,2,6,16,6,4,-1,8,16,2,4,3,-.012423450127244,-.5855895280838013,.0461126007139683,0,2,0,6,2,6,-1,0,8,2,2,3,-.0130314296111465,-.5971078872680664,.0406724587082863,0,2,11,18,2,1,-1,12,18,1,1,2,-.0012369629694148898,-.6833416819572449,.0331561788916588,0,2,5,1,9,2,-1,5,2,9,1,2,.006102210842072964,-.0947292372584343,.3010224103927612,0,2,0,0,1,2,-1,0,1,1,1,2,.0006695284973829985,.0818168669939041,-.351960301399231,0,2,15,9,3,3,-1,16,9,1,3,3,-.001797058037482202,.2371897995471954,-.1176870986819267,0,2,18,16,1,3,-1,18,17,1,1,3,-.0007107452838681638,-.4476378858089447,.0576824806630611,0,2,11,10,6,1,-1,13,10,2,1,3,-.005912647116929293,.4342541098594666,-.0668685734272003,0,2,1,3,4,4,-1,3,3,2,4,2,-.003313214983791113,.181500107049942,-.1418032050132752,0,2,11,2,1,18,-1,11,8,1,6,3,-.0608146600425243,.4722171127796173,-.0614106394350529,0,2,9,1,5,12,-1,9,5,5,4,3,-.0967141836881638,.2768316864967346,-.0944900363683701,0,2,12,0,8,1,-1,16,0,4,1,2,.003907355014234781,-.1227853000164032,.2105740010738373,0,2,8,6,3,10,-1,9,6,1,10,3,-.009043186902999878,.3564156889915466,-.0778062269091606,0,2,19,2,1,6,-1,19,4,1,2,3,-.004880003165453672,-.4103479087352753,.0696943774819374,0,2,18,6,2,2,-1,18,7,2,1,2,-.00435474282130599,-.7301788926124573,.0366551503539085,0,2,7,7,3,4,-1,8,7,1,4,3,-.009650062769651413,.5518112778663635,-.0531680807471275,0,2,5,0,6,5,-1,7,0,2,5,3,-.0173973105847836,-.5708423256874084,.0502140894532204,0,2,0,3,7,3,-1,0,4,7,1,3,-.006830432917922735,-.4618028104305267,.0502026900649071,0,2,1,6,2,1,-1,2,6,1,1,2,.00033255619928240776,-.0953627303242683,.2598375976085663,0,3,4,8,2,10,-1,4,8,1,5,2,5,13,1,5,2,-.0023100529797375202,.2287247031927109,-.1053353026509285,0,3,2,18,18,2,-1,2,18,9,1,2,11,19,9,1,2,-.0075426651164889336,-.5699051022529602,.0488634593784809,0,3,2,7,4,4,-1,2,7,2,2,2,4,9,2,2,2,-.0052723060362041,.3514518141746521,-.0823901072144508,0,2,17,3,3,4,-1,18,3,1,4,3,-.004857896827161312,-.6041762232780457,.0445394404232502,0,3,16,9,2,8,-1,16,9,1,4,2,17,13,1,4,2,.001586731057614088,-.1034090965986252,.2328201979398727,0,2,15,7,1,6,-1,15,9,1,2,3,-.004742781165987253,.284902811050415,-.0980904996395111,0,2,14,2,2,2,-1,14,3,2,1,2,-.0013515240279957652,.2309643030166626,-.113618403673172,0,2,17,0,2,3,-1,17,1,2,1,3,.0022526069078594446,.0644783228635788,-.4220589101314545,0,3,16,18,2,2,-1,16,18,1,1,2,17,19,1,1,2,-.0003803865984082222,-.3807620108127594,.0600432902574539,0,2,10,4,4,3,-1,10,5,4,1,3,.004904392175376415,-.076104998588562,.3323217034339905,0,2,0,2,8,6,-1,4,2,4,6,2,-.009096967056393623,.1428779065608978,-.1688780039548874,0,2,7,14,6,6,-1,7,16,6,2,3,-.0069317929446697235,.2725540995597839,-.0928795635700226,0,2,11,15,2,2,-1,11,16,2,1,2,.0011471060570329428,-.1527305990457535,.1970240026712418,0,2,7,1,9,4,-1,10,1,3,4,3,-.0376628898084164,-.5932043790817261,.0407386012375355,0,2,9,7,3,7,-1,10,7,1,7,3,-.006816557142883539,.2549408972263336,-.0940819606184959,0,3,6,17,2,2,-1,6,17,1,1,2,7,18,1,1,2,.0006620556232519448,.0467957183718681,-.4845437109470367,0,2,4,6,3,9,-1,5,6,1,9,3,-.004220255184918642,.2468214929103851,-.0946739763021469,0,2,0,10,19,10,-1,0,15,19,5,2,-.0689865127205849,-.6651480197906494,.0359263904392719,0,2,5,17,6,1,-1,7,17,2,1,3,.006170760840177536,.0258333198726177,-.7268627285957336,0,2,0,12,6,3,-1,3,12,3,3,2,.0105362497270107,-.0818289965391159,.2976079881191254,-1.1255199909210205,32,0,2,2,5,18,5,-1,8,5,6,5,3,-.0627587288618088,.2789908051490784,-.2965610921382904,0,2,1,15,6,4,-1,1,17,6,2,2,.003451647935435176,-.3463588058948517,.2090384066104889,0,2,14,10,6,6,-1,16,10,2,6,3,-.007869948633015156,.2414488941431046,-.1920557022094727,0,2,0,14,4,3,-1,0,15,4,1,3,-.0034624869003891945,-.5915178060531616,.1248644962906838,0,2,1,7,6,11,-1,3,7,2,11,3,-.009481876157224178,.1839154064655304,-.2485826015472412,0,2,13,17,7,2,-1,13,18,7,1,2,.00023226840130519122,-.3304725885391235,.1099926009774208,0,2,0,14,2,3,-1,0,15,2,1,3,.0018101120367646217,.0987440124154091,-.4963478147983551,0,2,0,0,6,2,-1,3,0,3,2,2,-.005442243069410324,.2934441864490509,-.1309475004673004,0,2,0,1,6,3,-1,3,1,3,3,2,.007414812222123146,-.1476269960403442,.3327716886997223,0,2,0,8,2,6,-1,0,10,2,2,3,-.0155651401728392,-.6840490102767944,.0998726934194565,0,3,1,2,6,14,-1,1,2,3,7,2,4,9,3,7,2,.0287205204367638,-.148332804441452,.3090257942676544,0,3,17,5,2,2,-1,17,5,1,1,2,18,6,1,1,2,9668739221524447e-20,-.1743104010820389,.2140295952558518,0,2,11,10,9,4,-1,14,10,3,4,3,.0523710586130619,-.0701568573713303,.4922299087047577,0,2,2,9,12,4,-1,6,9,4,4,3,-.0864856913685799,.5075724720954895,-.0752942115068436,0,2,7,10,12,2,-1,11,10,4,2,3,-.0421698689460754,.4568096101284027,-.0902199000120163,0,2,2,13,1,2,-1,2,14,1,1,2,45369830331765115e-21,-.2653827965259552,.1618953943252564,0,2,16,7,4,3,-1,16,8,4,1,3,.0052918000146746635,.0748901516199112,-.540546715259552,0,2,19,16,1,3,-1,19,17,1,1,3,-.0007551165181212127,-.4926199018955231,.0587239488959312,0,2,18,11,1,2,-1,18,12,1,1,2,7510813884437084e-20,-.2143210023641586,.1407776027917862,0,3,12,7,8,2,-1,12,7,4,1,2,16,8,4,1,2,.004998120944947004,-.0905473381280899,.3571606874465942,0,2,14,9,2,4,-1,15,9,1,4,2,-.0014929979806765914,.2562345862388611,-.1422906965017319,0,3,14,2,6,4,-1,14,2,3,2,2,17,4,3,2,2,.0027239411137998104,-.1564925014972687,.2108871042728424,0,2,14,0,6,1,-1,17,0,3,1,2,.002221832051873207,-.1507298946380615,.2680186927318573,0,2,3,12,2,1,-1,4,12,1,1,2,-.0007399307214654982,.2954699099063873,-.1069239005446434,0,2,17,2,3,1,-1,18,2,1,1,3,.0020113459322601557,.0506143495440483,-.7168337106704712,0,2,1,16,18,2,-1,7,16,6,2,3,.0114528704434633,-.1271906942129135,.241527795791626,0,2,2,19,8,1,-1,6,19,4,1,2,-.0010782170575112104,.2481300979852676,-.1346119940280914,0,2,1,17,4,3,-1,1,18,4,1,3,.00334176910109818,.0535783097147942,-.5227416753768921,0,2,19,13,1,2,-1,19,14,1,1,2,6939865124877542e-20,-.2169874012470245,.1281217932701111,0,3,9,16,10,4,-1,9,16,5,2,2,14,18,5,2,2,-.0040982551872730255,.2440188974142075,-.1157058998942375,0,3,12,9,2,4,-1,12,9,1,2,2,13,11,1,2,2,-.0016289720078930259,.2826147079467773,-.1065946966409683,0,2,19,11,1,9,-1,19,14,1,3,3,.0139848599210382,.0427158996462822,-.7364631295204163,-1.1729990243911743,30,0,2,6,6,14,14,-1,6,13,14,7,2,.164165198802948,-.4896030128002167,.1760770976543427,0,2,2,17,4,2,-1,2,18,4,1,2,.0008341306238435209,-.2822043001651764,.2419957965612412,0,2,0,2,1,3,-1,0,3,1,1,3,-.0017193210078403354,-.714858889579773,.0861622169613838,0,2,0,12,1,3,-1,0,13,1,1,3,-.001565495040267706,-.7297238111495972,.0940706729888916,0,2,15,15,4,4,-1,15,17,4,2,2,.0019124479731544852,-.3118715882301331,.1814339011907578,0,2,2,5,18,7,-1,8,5,6,7,3,-.1351236999034882,.2957729995250702,-.2217925041913986,0,2,1,16,5,3,-1,1,17,5,1,3,-.004030054900795221,-.6659513711929321,.0854310169816017,0,2,0,4,2,3,-1,0,5,2,1,3,-.002864046022295952,-.6208636164665222,.0531060211360455,0,2,0,6,2,6,-1,1,6,1,6,2,-.0014065420255064964,.2234628945589066,-.2021100968122482,0,2,16,14,4,3,-1,16,15,4,1,3,-.0035820449702441692,-.5403040051460266,.0682136192917824,0,3,0,0,10,6,-1,0,0,5,3,2,5,3,5,3,2,.04154447093606,-.0652158409357071,.6210923194885254,0,2,2,2,3,6,-1,3,2,1,6,3,-.009170955047011375,-.75553297996521,.0526404492557049,0,2,2,0,3,10,-1,3,0,1,10,3,.006155273877084255,.0909394025802612,-.4424613118171692,0,2,5,5,2,2,-1,5,6,2,1,2,-.0010043520014733076,.242923304438591,-.1866979002952576,0,2,12,6,4,4,-1,12,8,4,2,2,.0115198297426105,-.1176315024495125,.3672345876693726,0,2,13,5,7,3,-1,13,6,7,1,3,-.008904073387384415,-.4893133044242859,.1089702025055885,0,2,10,13,1,2,-1,10,14,1,1,2,.0005397367058321834,-.2185039967298508,.1848998963832855,0,2,16,16,4,2,-1,18,16,2,2,2,.0013727260520681739,-.1507291048765183,.2917312979698181,0,2,16,12,4,7,-1,18,12,2,7,2,-.0108073903247714,.4289745092391968,-.1028013974428177,0,2,16,17,1,3,-1,16,18,1,1,3,.0012670770520344377,.0741921588778496,-.6420825123786926,0,2,19,9,1,3,-1,19,10,1,1,3,.002299112966284156,.0471002794802189,-.723352313041687,0,2,18,7,2,6,-1,19,7,1,6,2,.002718751085922122,-.1708686947822571,.235135093331337,0,2,8,1,3,4,-1,9,1,1,4,3,-.006661918014287949,-.7897542715072632,.0450846701860428,0,2,14,0,6,9,-1,16,0,2,9,3,-.0482666492462158,-.6957991719245911,.0419760793447495,0,2,4,2,10,2,-1,9,2,5,2,2,.0152146900072694,-.1081828027963638,.3646062016487122,0,3,2,12,8,4,-1,2,12,4,2,2,6,14,4,2,2,-.006008013151586056,.309709906578064,-.1135921031236649,0,2,0,4,7,3,-1,0,5,7,1,3,.006612715777009726,.0806653425097466,-.4665853083133698,0,2,14,14,3,3,-1,15,14,1,3,3,-.007960701361298561,-.8720194101333618,.0367745906114578,0,2,0,3,4,3,-1,2,3,2,3,2,.003884719917550683,-.11666289716959,.3307026922702789,0,2,1,0,2,7,-1,2,0,1,7,2,-.001098881009966135,.2387257069349289,-.1765675991773605,-1.036829948425293,44,0,2,15,16,4,4,-1,15,18,4,2,2,.0035903379321098328,-.2368807941675186,.2463164031505585,0,2,5,8,12,4,-1,5,10,12,2,2,.006481593009084463,-.3137362003326416,.1867575943470001,0,2,3,17,1,2,-1,3,18,1,1,2,7304840255528688e-20,-.2764435112476349,.1649623960256577,0,2,6,1,3,4,-1,7,1,1,4,3,-.00385146401822567,-.5601450800895691,.1129473969340324,0,2,6,2,3,4,-1,7,2,1,4,3,.003858821000903845,.0398489981889725,-.5807185769081116,0,2,6,8,9,12,-1,9,8,3,12,3,-.0246512200683355,.1675501018762589,-.2534367144107819,0,2,8,1,8,6,-1,8,3,8,2,3,.0472455210983753,-.1066208034753799,.3945198059082031,0,2,14,2,6,3,-1,17,2,3,3,2,.00659646512940526,-.1774425059556961,.2728019058704376,0,2,0,6,1,3,-1,0,7,1,1,3,-.0013177490327507257,-.5427265167236328,.0486065894365311,0,2,10,0,10,2,-1,15,0,5,2,2,-.005026170983910561,.2439424991607666,-.1314364969730377,0,2,11,0,3,2,-1,12,0,1,2,3,.003463276894763112,.0690493434667587,-.7033624053001404,0,2,3,19,10,1,-1,8,19,5,1,2,.0021692588925361633,-.1328946053981781,.2209852933883667,0,2,0,4,7,16,-1,0,12,7,8,2,.0293958708643913,-.2853052020072937,.1354399025440216,0,2,2,16,1,3,-1,2,17,1,1,3,-.0009618144831620157,-.580413818359375,.0374506488442421,0,2,7,8,12,6,-1,11,8,4,6,3,-.1082099974155426,.3946728110313416,-.078655943274498,0,2,14,9,6,7,-1,16,9,2,7,3,-.0180248692631722,.2735562920570374,-.1341529935598373,0,2,12,17,6,1,-1,14,17,2,1,3,.006250984035432339,.023388059809804,-.8008859157562256,0,2,16,1,3,1,-1,17,1,1,1,3,-.0016088379779830575,-.5676252245903015,.0412156693637371,0,3,0,17,8,2,-1,0,17,4,1,2,4,18,4,1,2,.0007756475242786109,-.1489126980304718,.1908618062734604,0,2,17,0,2,1,-1,18,0,1,1,2,8712233830010518e-20,-.155575305223465,.194282203912735,0,2,4,15,6,5,-1,6,15,2,5,3,-.0207553207874298,-.6300653219223022,.0361343808472157,0,2,7,2,8,2,-1,7,3,8,1,2,-.0062931738793849945,.2560924887657166,-.1058826968073845,0,2,4,1,8,4,-1,4,3,8,2,2,.0108441496267915,-.1012485027313232,.3032212853431702,0,2,5,19,2,1,-1,6,19,1,1,2,-6375277735060081e-20,.1911157965660095,-.1384923011064529,0,2,5,19,2,1,-1,6,19,1,1,2,6648096314165741e-20,-.1520525068044663,.2170630991458893,0,2,16,17,1,3,-1,16,18,1,1,3,.0013560829684138298,.0494317896664143,-.6427984237670898,0,2,0,11,2,3,-1,1,11,1,3,2,-.0009066255879588425,.1798201054334641,-.1404460966587067,0,2,0,19,4,1,-1,2,19,2,1,2,.0010473709553480148,-.1093354970216751,.242659404873848,0,2,0,18,4,2,-1,2,18,2,2,2,-.0010243969736620784,.2716268002986908,-.1182091981172562,0,2,2,17,1,3,-1,2,18,1,1,3,-.0012024149764329195,-.701511025428772,.0394898988306522,0,2,5,7,11,2,-1,5,8,11,1,2,.007691164966672659,-.0922189131379128,.3104628920555115,0,2,9,2,4,10,-1,9,7,4,5,2,-.139665499329567,.6897938847541809,-.0397061184048653,0,2,0,2,4,3,-1,0,3,4,1,3,.0021276050247251987,.0972776114940643,-.2884179949760437,0,2,10,19,10,1,-1,15,19,5,1,2,-.0027594310231506824,.2416867017745972,-.1127782016992569,0,2,11,17,8,3,-1,15,17,4,3,2,.005223613232374191,-.1143027991056442,.2425678074359894,0,2,8,19,3,1,-1,9,19,1,1,3,-.0012590440455824137,-.5967938899993896,.0476639606058598,0,2,14,0,3,4,-1,15,0,1,4,3,-.0037192099262028933,-.464141309261322,.0528476908802986,0,2,10,6,4,3,-1,10,7,4,1,3,.005969615187495947,-.0732442885637283,.3874309062957764,0,2,0,8,3,2,-1,0,9,3,1,2,-.005177672021090984,-.7419322729110718,.0404967106878757,0,2,7,12,3,6,-1,7,14,3,2,3,.005003510043025017,-.1388880014419556,.1876762062311173,0,2,1,18,1,2,-1,1,19,1,1,2,-.0005201345775276423,-.5494061708450317,.0494178496301174,0,2,0,12,4,4,-1,2,12,2,4,2,.00531687680631876,-.0824829787015915,.3174056112766266,0,2,1,8,6,7,-1,3,8,2,7,3,-.0147745897993445,.2081609964370728,-.1211555972695351,0,2,0,8,4,5,-1,2,8,2,5,2,-.0414164513349533,-.8243780732154846,.0333291888237,-1.0492420196533203,53,0,2,19,16,1,3,-1,19,17,1,1,3,.0009096252033486962,.0845799669623375,-.5611841082572937,0,2,1,5,18,6,-1,7,5,6,6,3,-.0561397895216942,.1534174978733063,-.2696731984615326,0,2,2,15,4,2,-1,2,16,4,1,2,.0010292009683325887,-.2048998028039932,.2015317976474762,0,2,18,6,2,11,-1,19,6,1,11,2,.00287830107845366,-.1735114008188248,.2129794955253601,0,2,0,12,2,6,-1,0,14,2,2,3,-.0074144392274320126,-.5962486863136292,.0470779500901699,0,2,12,5,3,2,-1,12,6,3,1,2,-.0014831849839538336,.1902461051940918,-.1598639041185379,0,2,1,3,2,3,-1,1,4,2,1,3,.0045968941412866116,.0314471311867237,-.6869434118270874,0,2,16,14,4,4,-1,16,16,4,2,2,.0024255330208688974,-.23609359562397,.1103610992431641,0,2,6,8,12,5,-1,10,8,4,5,3,-.0849505662918091,.2310716062784195,-.1377653032541275,0,2,13,7,2,7,-1,14,7,1,7,2,-.005014568101614714,.3867610991001129,-.0562173798680305,0,2,1,8,2,6,-1,2,8,1,6,2,-.002148206112906337,.1819159984588623,-.1761569976806641,0,2,15,0,3,7,-1,16,0,1,7,3,-.0103967702016234,-.7535138130187988,.0240919701755047,0,2,4,2,6,2,-1,6,2,2,2,3,-.0134667502716184,-.7211886048316956,.0349493697285652,0,2,0,9,20,9,-1,0,12,20,3,3,-.0844354778528214,-.3379263877868652,.0711138173937798,0,2,10,14,2,2,-1,10,15,2,1,2,.00247714901342988,-.1176510974764824,.225419893860817,0,2,6,5,10,4,-1,6,7,10,2,2,.015828050673008,-.0695362165570259,.313953697681427,0,2,6,1,5,9,-1,6,4,5,3,3,.0649169832468033,-.0750435888767242,.4067733883857727,0,3,16,18,2,2,-1,16,18,1,1,2,17,19,1,1,2,.00029652469675056636,.0739533603191376,-.3454400897026062,0,2,0,14,2,4,-1,0,16,2,2,2,.001312952022999525,-.1690943986177445,.1525837033987045,0,2,10,8,2,5,-1,11,8,1,5,2,-.0058032129891216755,.3526014983654022,-.0834440663456917,0,2,3,7,12,7,-1,7,7,4,7,3,-.1479167938232422,.4300465881824493,-.0573099292814732,0,2,0,0,6,6,-1,3,0,3,6,2,-.016584150493145,.2343268990516663,-.1090764030814171,0,2,1,0,4,4,-1,3,0,2,4,2,.003018327057361603,-.1360093951225281,.264092892408371,0,2,0,0,6,8,-1,2,0,2,8,3,-.0364719182252884,-.628097414970398,.0435451082885265,0,2,0,0,2,1,-1,1,0,1,1,2,-7311922672670335e-20,.1647063046693802,-.1646378040313721,0,2,0,0,3,3,-1,0,1,3,1,3,-.003671945072710514,-.4742136001586914,.0485869199037552,0,2,5,4,2,4,-1,5,6,2,2,2,-.004015117883682251,.1822218000888825,-.1409751027822495,0,2,2,10,9,1,-1,5,10,3,1,3,.0199480205774307,-.0697876587510109,.3670746088027954,0,2,1,17,1,3,-1,1,18,1,1,3,.0007669943734072149,.0557292997837067,-.4458543062210083,0,2,0,17,2,3,-1,0,18,2,1,3,-.0011806039838120341,-.4687662124633789,.0489022210240364,0,2,0,15,16,3,-1,8,15,8,3,2,.0158473495393991,-.1212020963430405,.2056653052568436,0,2,0,5,4,1,-1,2,5,2,1,2,-.0011985700111836195,.2026209980249405,-.1282382011413574,0,2,1,0,6,20,-1,3,0,2,20,3,-.1096495985984802,-.8661919236183167,.0303518492728472,0,3,2,5,4,6,-1,2,5,2,3,2,4,8,2,3,2,-.009253260679543018,.2934311926364899,-.0853619500994682,0,2,9,16,6,3,-1,11,16,2,3,3,.0146865304559469,.0327986218035221,-.7755656242370605,0,2,11,17,6,1,-1,14,17,3,1,2,-.0013514430029317737,.244269996881485,-.1150325015187264,0,2,3,17,15,2,-1,8,17,5,2,3,-.004372809082269669,.2168767005205154,-.1398448050022125,0,2,18,0,2,3,-1,18,1,2,1,3,.0034263390116393566,.0456142202019691,-.545677125453949,0,2,13,1,7,4,-1,13,3,7,2,2,-.0038404068909585476,.149495005607605,-.1506250947713852,0,3,13,6,4,4,-1,13,6,2,2,2,15,8,2,2,2,.0037988980766385794,-.0873016268014908,.2548153102397919,0,2,17,6,3,4,-1,17,8,3,2,2,-.0020094281062483788,.1725907027721405,-.1428847014904022,0,2,14,9,2,2,-1,15,9,1,2,2,-.002437070943415165,.2684809863567352,-.0818982198834419,0,2,17,17,1,3,-1,17,18,1,1,3,.001048539998009801,.0461132600903511,-.4724327921867371,0,2,3,19,8,1,-1,7,19,4,1,2,.00174607802182436,-.1103043034672737,.2037972956895828,0,2,0,9,3,6,-1,0,12,3,3,2,.005860862787812948,-.1561965942382813,.1592743992805481,0,2,4,7,15,5,-1,9,7,5,5,3,-.0277249794453382,.1134911999106407,-.2188514024019241,0,2,6,9,9,5,-1,9,9,3,5,3,.0470806397497654,-.0416887290775776,.5363004803657532,0,2,8,1,6,2,-1,10,1,2,2,3,-.007928377017378807,-.5359513163566589,.0442375093698502,0,2,4,0,12,2,-1,10,0,6,2,2,-.0128805404528975,.2323794960975647,-.102462500333786,0,2,7,0,10,3,-1,12,0,5,3,2,.0236047692596912,-.0882914364337921,.3056105971336365,0,2,5,0,9,6,-1,5,2,9,2,3,.0159022007137537,-.1223810985684395,.1784912049770355,0,2,8,3,6,4,-1,8,5,6,2,2,.007993949577212334,-.0837290063500404,.3231959044933319,0,2,17,4,2,3,-1,17,5,2,1,3,.005710086785256863,.038479208946228,-.6813815236091614,-1.1122100353240967,51,0,2,5,2,4,3,-1,5,3,4,1,3,.002248072065412998,-.1641687005758286,.4164853096008301,0,2,5,9,2,6,-1,6,9,1,6,2,.004581355024129152,-.1246595978736877,.4038512110710144,0,2,14,10,2,6,-1,15,10,1,6,2,-.0016073239967226982,.260824590921402,-.202825203537941,0,2,7,4,3,3,-1,7,5,3,1,3,.0025205370038747787,-.1055722981691361,.3666911125183106,0,3,12,4,8,2,-1,12,4,4,1,2,16,5,4,1,2,.0024119189474731684,-.1387760043144226,.2995991110801697,0,2,15,8,1,6,-1,15,10,1,2,3,.005715617910027504,-.0776834636926651,.4848192036151886,0,2,4,17,11,3,-1,4,18,11,1,3,.0031093840952962637,-.1122900024056435,.2921550869941711,0,2,3,0,16,20,-1,3,10,16,10,2,-.0868366286158562,-.367796003818512,.0725972428917885,0,2,12,4,4,6,-1,12,6,4,2,3,.0052652182057499886,-.1089029014110565,.3179126083850861,0,2,11,0,6,6,-1,13,0,2,6,3,-.0199135299772024,-.5337343811988831,.0705857127904892,0,3,13,1,6,4,-1,13,1,3,2,2,16,3,3,2,2,.00382978399284184,-.135759100317955,.2278887927532196,0,2,11,0,6,4,-1,13,0,2,4,3,.0104318596422672,.0887979120016098,-.4795897006988525,0,2,8,6,6,9,-1,10,6,2,9,3,-.0200404394418001,.1574553996324539,-.1777157038450241,0,2,7,0,3,4,-1,8,0,1,4,3,-.005296729039400816,-.6843491792678833,.0356714613735676,0,3,0,17,14,2,-1,0,17,7,1,2,7,18,7,1,2,-.0021624139044433832,.2831803858280182,-.098511278629303,0,3,6,18,2,2,-1,6,18,1,1,2,7,19,1,1,2,-.00035464888787828386,-.3707734048366547,.0809329524636269,0,2,18,17,1,3,-1,18,18,1,1,3,-.00018152060511056334,-.322070300579071,.0775510594248772,0,3,17,18,2,2,-1,17,18,1,1,2,18,19,1,1,2,-.000275630212854594,-.3244127929210663,.0879494771361351,0,2,5,7,1,9,-1,5,10,1,3,3,.006382381077855825,-.0889247134327888,.3172721862792969,0,2,5,3,6,4,-1,7,3,2,4,3,.0111509095877409,.0710198432207108,-.4049403965473175,0,3,1,9,6,2,-1,1,9,3,1,2,4,10,3,1,2,-.0010593760525807738,.2605066895484924,-.1176564022898674,0,2,6,9,2,3,-1,7,9,1,3,2,.002390648005530238,-.0843886211514473,.3123055100440979,0,2,6,8,6,12,-1,8,8,2,12,3,-.0110007496550679,.1915224939584732,-.1521002054214478,0,3,4,18,2,2,-1,4,18,1,1,2,5,19,1,1,2,-.00024643228971399367,-.3176515996456146,.0865822583436966,0,2,9,1,6,6,-1,9,3,6,2,3,.0230532698333263,-.1008976027369499,.2576929032802582,0,2,6,17,6,2,-1,6,18,6,1,2,-.0022135660983622074,.4568921029567719,-.0524047911167145,0,2,3,18,16,2,-1,3,19,16,1,2,-.000971397093962878,-.3551838099956513,.0800943821668625,0,2,3,0,3,11,-1,4,0,1,11,3,.0015676229959353805,.1009142026305199,-.2160304039716721,0,2,13,18,3,1,-1,14,18,1,1,3,.0007546080159954727,.0578961782157421,-.4046111106872559,0,2,6,0,9,6,-1,6,2,9,2,3,-.0206989701837301,.3154363036155701,-.0807130485773087,0,3,1,2,12,4,-1,1,2,6,2,2,7,4,6,2,2,-.0206199400126934,.271816611289978,-.0763586163520813,0,2,3,3,6,4,-1,5,3,2,4,3,.0216111298650503,.0394934490323067,-.5942965149879456,0,2,12,0,8,1,-1,16,0,4,1,2,.006567674223333597,-.0983536690473557,.2364927977323532,0,2,9,0,6,2,-1,11,0,2,2,3,-.008843479678034782,-.5252342820167542,.0430999211966991,0,2,3,3,12,1,-1,9,3,6,1,2,-.009426074102520943,.2466513067483902,-.0941307172179222,0,3,2,7,6,2,-1,2,7,3,1,2,5,8,3,1,2,-.001983023015782237,.2674370110034943,-.0900693163275719,0,2,0,8,4,6,-1,0,10,4,2,3,-.001735839992761612,.1594001948833466,-.157894104719162,0,2,9,6,3,7,-1,10,6,1,7,3,-.0135138696059585,.4079233109951019,-.0642231181263924,0,2,9,6,6,13,-1,11,6,2,13,3,-.0193940103054047,.1801564991474152,-.1373140066862106,0,2,11,12,6,1,-1,13,12,2,1,3,-.003268477041274309,.2908039093017578,-.0801619067788124,0,2,18,9,2,6,-1,18,12,2,3,2,.00041773589327931404,-.2141298055648804,.1127343997359276,0,2,17,2,3,9,-1,18,2,1,9,3,-.007635111920535564,-.4536595940589905,.0546250604093075,0,3,13,8,4,6,-1,13,8,2,3,2,15,11,2,3,2,-.008365297690033913,.2647292017936707,-.0943341106176376,0,2,4,2,12,6,-1,10,2,6,6,2,.027768449857831,-.1013671010732651,.2074397951364517,0,2,4,14,16,6,-1,12,14,8,6,2,-.0548912286758423,.2884030938148499,-.075312040746212,0,2,6,19,10,1,-1,11,19,5,1,2,.002579333959147334,-.1108852997422218,.2172496020793915,0,2,6,17,1,3,-1,6,18,1,1,3,6619651685468853e-20,-.1887210011482239,.1444068998098373,0,2,4,14,10,3,-1,4,15,10,1,3,.005090725142508745,-.0776012316346169,.2939837872982025,0,2,6,0,12,12,-1,6,4,12,4,3,-.1044425964355469,.2013310939073563,-.1090397015213966,0,3,5,7,4,2,-1,5,7,2,1,2,7,8,2,1,2,-.0006727309082634747,.1794590055942535,-.1202367022633553,0,2,17,5,3,2,-1,18,5,1,2,3,.0032412849832326174,.0406881310045719,-.5460057258605957,-1.2529590129852295,44,0,2,8,13,6,3,-1,8,14,6,1,3,.005296532064676285,-.1215452998876572,.6442037224769592,0,2,8,13,5,3,-1,8,14,5,1,3,-.002532626036554575,.5123322010040283,-.111082598567009,0,2,13,2,1,18,-1,13,11,1,9,2,-.0029183230362832546,-.5061542987823486,.1150197982788086,0,2,6,10,9,2,-1,9,10,3,2,3,-.0236923396587372,.3716728091239929,-.1467268019914627,0,2,11,0,7,4,-1,11,2,7,2,2,.0201774705201387,-.1738884001970291,.4775949120521545,0,2,1,0,6,8,-1,3,0,2,8,3,-.021723210811615,-.4388009011745453,.1357689946889877,0,2,9,15,3,3,-1,9,16,3,1,3,.0028369780629873276,-.1251206994056702,.4678902924060822,0,2,9,17,9,3,-1,9,18,9,1,3,.002714842092245817,-.0880188569426537,.3686651885509491,0,2,12,12,3,3,-1,12,13,3,1,3,.003262568963691592,-.0853353068232536,.5164473056793213,0,2,4,1,3,5,-1,5,1,1,5,3,-.0035618850961327553,-.445039302110672,.0917381718754768,0,2,10,14,2,3,-1,10,15,2,1,3,.001922774943523109,-.1107731014490128,.3941699862480164,0,3,18,17,2,2,-1,18,17,1,1,2,19,18,1,1,2,-.0003511196991894394,-.3777570128440857,.1216617003083229,0,3,18,18,2,2,-1,18,18,1,1,2,19,19,1,1,2,.0001912177976919338,.0748160183429718,-.4076710045337677,0,3,18,18,2,2,-1,18,18,1,1,2,19,19,1,1,2,-.00026525629800744355,-.3315171897411346,.1129112020134926,0,2,4,10,9,1,-1,7,10,3,1,3,.0200867000967264,-.0615981183946133,.5612881779670715,0,2,3,9,6,5,-1,5,9,2,5,3,.0367832481861115,-.0602513886988163,.5219249129295349,0,2,18,8,1,12,-1,18,14,1,6,2,.0013941619545221329,-.3550305068492889,.1086302027106285,0,3,0,2,8,6,-1,0,2,4,3,2,4,5,4,3,2,-.0151816699653864,.2273965030908585,-.1625299006700516,0,2,9,4,3,3,-1,9,5,3,1,3,.0046796840615570545,-.0575350411236286,.4812423884868622,0,3,3,18,2,2,-1,3,18,1,1,2,4,19,1,1,2,-.00017988319450523704,-.3058767020702362,.1086815968155861,0,2,6,4,4,3,-1,6,5,4,1,3,-.0035850999411195517,.3859694004058838,-.0921940729022026,0,3,16,7,4,2,-1,16,7,2,1,2,18,8,2,1,2,.001079336041584611,-.1119038984179497,.31125208735466,0,2,5,17,1,3,-1,5,18,1,1,3,7328580250032246e-20,-.2023991048336029,.155866801738739,0,2,2,0,15,20,-1,2,10,15,10,2,.1367873996496201,-.2167285978794098,.1442039012908936,0,3,8,11,6,4,-1,8,11,3,2,2,11,13,3,2,2,-.0117292599752545,.4350377023220062,-.0748865306377411,0,2,8,16,4,3,-1,8,17,4,1,3,.003923084121197462,-.0502893291413784,.5883116126060486,0,3,8,18,2,2,-1,8,18,1,1,2,9,19,1,1,2,-.0002981912111863494,-.3823240101337433,.0924511328339577,0,2,2,16,13,3,-1,2,17,13,1,3,-.004799277056008577,.4848878979682922,-.0731365233659744,0,3,16,16,2,2,-1,16,16,1,1,2,17,17,1,1,2,-.0003015589027199894,-.3575735986232758,.1058188006281853,0,2,8,1,6,3,-1,10,1,2,3,3,.0103907696902752,.0529204681515694,-.5724965929985046,0,3,16,7,2,2,-1,16,7,1,1,2,17,8,1,1,2,-.0009448804194107652,.449668288230896,-.0830755233764648,0,3,14,7,4,2,-1,14,7,2,1,2,16,8,2,1,2,.0012651870492845774,-.0966954380273819,.3130227029323578,0,2,4,0,14,1,-1,11,0,7,1,2,.0170945394784212,-.081248976290226,.3611383140087128,0,3,10,4,8,2,-1,10,4,4,1,2,14,5,4,1,2,.002597335958853364,-.1133835017681122,.2223394960165024,0,2,8,2,3,2,-1,9,2,1,2,3,.0014527440071105957,.0697504431009293,-.3672071099281311,0,2,12,11,6,3,-1,12,12,6,1,3,.00476386584341526,-.0657889619469643,.383285403251648,0,2,1,5,1,4,-1,1,7,1,2,2,-.006250108126550913,-.7075446844100952,.038350198417902,0,2,1,1,1,18,-1,1,7,1,6,3,-.003176532918587327,.1375540047883987,-.2324002981185913,0,2,11,13,3,2,-1,11,14,3,1,2,.003219116944819689,-.1293545067310333,.2273788005113602,0,3,0,1,12,2,-1,0,1,6,1,2,6,2,6,1,2,-.005636557936668396,.380671501159668,-.0672468394041061,0,3,10,18,2,2,-1,10,18,1,1,2,11,19,1,1,2,-.00023844049428589642,-.3112238049507141,.0838383585214615,0,3,4,5,4,4,-1,4,5,2,2,2,6,7,2,2,2,-.004101756028831005,.2606728076934815,-.1044974029064179,0,2,6,7,1,3,-1,6,8,1,1,3,.0013336989795789123,-.0582501403987408,.4768244028091431,0,2,14,10,6,2,-1,16,10,2,2,3,-.0012090239906683564,.148345097899437,-.1732946932315826,-1.118873953819275,72,0,2,16,8,3,6,-1,17,8,1,6,3,-.003176093101501465,.3333333134651184,-.166423499584198,0,2,4,10,6,2,-1,6,10,2,2,3,.0248580798506737,-.0727288722991943,.5667458176612854,0,2,6,5,3,7,-1,7,5,1,7,3,-.007759728003293276,.4625856876373291,-.0931121781468391,0,2,0,13,6,6,-1,0,16,6,3,2,.007823902182281017,-.2741461098194122,.1324304938316345,0,2,12,5,1,9,-1,12,8,1,3,3,-.010948839597404,.2234548032283783,-.1496544927358627,0,2,5,9,3,3,-1,6,9,1,3,3,-.0034349008928984404,.3872498869895935,-.0661217272281647,0,2,7,5,6,13,-1,9,5,2,13,3,-.0311562903225422,.2407827973365784,-.1140690967440605,0,2,19,8,1,10,-1,19,13,1,5,2,.001110051991418004,-.2820797860622406,.1327542960643768,0,2,11,18,6,1,-1,13,18,2,1,3,.003176274010911584,.0345859304070473,-.5137431025505066,0,2,9,7,6,12,-1,11,7,2,12,3,-.0279774591326714,.2392677962779999,-.1325591951608658,0,2,12,7,6,6,-1,14,7,2,6,3,-.0230979397892952,.3901962041854858,-.0784780085086823,0,2,15,8,3,4,-1,16,8,1,4,3,-.003973193001002073,.3069106936454773,-.0706014037132263,0,2,6,11,4,2,-1,6,12,4,1,2,.003033574903383851,-.1400219053030014,.191348597407341,0,2,1,6,6,8,-1,3,6,2,8,3,-.0108443703502417,.1654873043298721,-.1565777957439423,0,2,11,15,6,5,-1,13,15,2,5,3,-.0181505102664232,-.6324359178543091,.0395618192851543,0,2,15,17,4,2,-1,15,18,4,1,2,.0007105229888111353,-.1851557046175003,.1340880990028381,0,2,13,11,6,1,-1,15,11,2,1,3,.0108933402225375,-.0267302300781012,.6097180247306824,0,3,5,18,2,2,-1,5,18,1,1,2,6,19,1,1,2,-.0002878090017475188,-.3006514012813568,.0731714591383934,0,3,4,8,4,4,-1,4,8,2,2,2,6,10,2,2,2,-.0035855069290846586,.2621760964393616,-.0797140970826149,0,2,11,7,9,3,-1,11,8,9,1,3,-.0197592806071043,-.5903922915458679,.0406989715993404,0,3,0,3,10,4,-1,0,3,5,2,2,5,5,5,2,2,-.010845210403204,.1636455953121185,-.1258606016635895,0,2,7,18,6,1,-1,9,18,2,1,3,-.004318309016525745,-.5747488141059875,.0376443117856979,0,2,0,8,3,3,-1,0,9,3,1,3,.0014913700288161635,.0609134696424007,-.3022292852401733,0,3,0,0,6,8,-1,0,0,3,4,2,3,4,3,4,2,.0156756993383169,-.0731459110975266,.2937945127487183,0,2,7,6,3,8,-1,8,6,1,8,3,-.0110335601493716,.393188089132309,-.0470843203365803,0,2,13,7,7,3,-1,13,8,7,1,3,.008855575695633888,.0376013815402985,-.4910849034786224,0,2,3,3,2,2,-1,3,4,2,1,2,-.0008966567111201584,.1795202046632767,-.1108623966574669,0,2,0,3,3,3,-1,0,4,3,1,3,-.0030592409893870354,-.4442946016788483,.0510054305195808,0,2,9,3,5,2,-1,9,4,5,1,2,.006320117972791195,-.0528410896658897,.3719710111618042,0,2,6,5,9,4,-1,9,5,3,4,3,.020682830363512,.0576671697199345,-.3690159916877747,0,2,3,10,12,3,-1,7,10,4,3,3,.0998226627707481,-.037377018481493,.5816559195518494,0,2,8,7,3,6,-1,9,7,1,6,3,-.006585422903299332,.2850944101810455,-.0609780699014664,0,2,5,5,6,5,-1,8,5,3,5,2,-.0609003007411957,-.5103176832199097,.0377874001860619,0,2,0,5,2,3,-1,0,6,2,1,3,-.0029991709161549807,-.4794301092624664,.0388338901102543,0,2,9,7,3,4,-1,10,7,1,4,3,-.009890643879771233,.4060907959938049,-.047869648784399,0,2,1,0,6,15,-1,3,0,2,15,3,-.0826889276504517,-.7067118287086487,.0274877492338419,0,2,15,1,3,5,-1,16,1,1,5,3,.00500603998079896,.028208440169692,-.5290969014167786,0,2,9,2,3,10,-1,10,2,1,10,3,.006169503089040518,-.0545548610389233,.3283798098564148,0,2,8,8,6,12,-1,10,8,2,12,3,-.0033914761152118444,.0921176671981812,-.2163711041212082,0,2,16,4,3,4,-1,16,6,3,2,2,-.0026131230406463146,.1365101933479309,-.1378113031387329,0,3,16,7,2,2,-1,16,7,1,1,2,17,8,1,1,2,.0008049065945670009,-.0686371102929115,.3358106911182404,0,2,13,0,6,9,-1,13,3,6,3,3,-.0381065085530281,.2944543063640595,-.068239226937294,0,2,7,17,1,3,-1,7,18,1,1,3,7245079905260354e-20,-.167501300573349,.1217823028564453,0,2,12,1,4,2,-1,12,2,4,1,2,.0015837959945201874,-.0920428484678268,.213489904999733,0,2,17,3,1,3,-1,17,4,1,1,3,.0012924340553581715,.0629172325134277,-.3617450892925263,0,2,0,16,9,3,-1,0,17,9,1,3,.00991467759013176,.0195340607315302,-.8101503849029541,0,3,3,6,2,4,-1,3,6,1,2,2,4,8,1,2,2,-.0017086310544982553,.2552523910999298,-.0682294592261314,0,2,13,18,3,1,-1,14,18,1,1,3,.002184439916163683,.0233140494674444,-.8429678082466125,0,2,0,18,4,2,-1,2,18,2,2,2,-.003424433059990406,.2721368968486786,-.0763952285051346,0,2,1,19,2,1,-1,2,19,1,1,2,.00027591470279730856,-.1074284017086029,.2288897037506104,0,2,0,18,4,2,-1,0,19,4,1,2,-.0006000517751090229,-.2985421121120453,.0634797364473343,0,2,2,17,1,3,-1,2,18,1,1,3,-.00025001438916660845,-.2717896997928619,.0696150064468384,0,2,4,8,3,5,-1,5,8,1,5,3,.006875139195472002,-.0571858994662762,.3669595122337341,0,2,2,1,6,7,-1,4,1,2,7,3,.0127619002014399,.0679556876420975,-.2853415012359619,0,3,3,6,2,8,-1,3,6,1,4,2,4,10,1,4,2,-.0014752789866179228,.2068066000938416,-.1005939021706581,0,2,4,5,11,10,-1,4,10,11,5,2,.1213881969451904,-.0971267968416214,.1978961974382401,0,2,0,13,20,2,-1,10,13,10,2,2,-.0500812791287899,.2841717898845673,-.0678799971938133,0,2,1,13,16,3,-1,9,13,8,3,2,.0314549505710602,-.0894686728715897,.2129842042922974,0,3,16,4,4,4,-1,16,4,2,2,2,18,6,2,2,2,.0018878319533541799,-.1165644004940987,.166635200381279,0,3,16,0,4,12,-1,16,0,2,6,2,18,6,2,6,2,-.005721196066588163,.2370214015245438,-.0907766073942184,0,2,14,15,3,1,-1,15,15,1,1,3,-.00018076719425152987,.1795192956924439,-.1079348027706146,0,2,3,4,12,10,-1,3,9,12,5,2,-.1976184993982315,.4567429125308991,-.0404801592230797,0,3,9,18,2,2,-1,9,18,1,1,2,10,19,1,1,2,-.00023846809926908463,-.2373300939798355,.0759221613407135,0,3,9,18,2,2,-1,9,18,1,1,2,10,19,1,1,2,.00021540730085689574,.0816880166530609,-.2868503034114838,0,3,13,4,2,14,-1,13,4,1,7,2,14,11,1,7,2,.0101630901917815,-.0412500202655792,.4803834855556488,0,2,4,2,6,4,-1,7,2,3,4,2,-.007218487095087767,.1745858043432236,-.1014650017023087,0,3,0,0,18,20,-1,0,0,9,10,2,9,10,9,10,2,.2426317036151886,.05342648178339,-.3231852948665619,0,2,15,11,1,2,-1,15,12,1,1,2,.0006930410163477063,-.1149917989969254,.1479393988847733,0,3,16,10,2,4,-1,16,10,1,2,2,17,12,1,2,2,.003547519911080599,-.0394249781966209,.5312618017196655,0,3,18,17,2,2,-1,18,17,1,1,2,19,18,1,1,2,.00021403690334409475,.0697538331151009,-.2731958031654358,0,2,9,17,1,2,-1,9,18,1,1,2,-.0005711946287192404,.3436990082263947,-.0576990097761154,0,2,8,4,9,6,-1,11,4,3,6,3,-.006629006937146187,.1175848990678787,-.1502013951539993,-1.088881015777588,66,0,2,6,9,9,10,-1,9,9,3,10,3,-.0265134498476982,.2056864053010941,-.2647390067577362,0,2,5,0,5,4,-1,5,2,5,2,2,.00977274589240551,-.111928403377533,.325705498456955,0,2,5,7,11,4,-1,5,9,11,2,2,.0322903506457806,-.0985747575759888,.3177917003631592,0,2,2,4,2,14,-1,3,4,1,14,2,-.00281032407656312,.1521389931440353,-.1968640983104706,0,2,8,6,3,5,-1,9,6,1,5,3,-.0109914299100637,.5140765905380249,-.0437072105705738,0,2,8,4,3,9,-1,9,4,1,9,3,.006313383113592863,-.0927810221910477,.3470247089862824,0,2,0,8,20,6,-1,0,10,20,2,3,.0871059820055962,.030053649097681,-.8281481862068176,0,2,14,16,6,1,-1,17,16,3,1,2,.0011799359926953912,-.1292842030525208,.2064612060785294,0,2,17,18,2,2,-1,17,19,2,1,2,-.0009305689018219709,-.5002143979072571,.0936669930815697,0,2,8,17,6,3,-1,10,17,2,3,3,-.0136871701106429,-.793581485748291,-.006673363968729973,0,2,4,1,9,15,-1,7,1,3,15,3,-.0759174525737762,.3046964108943939,-.0796558931469917,0,2,11,5,3,12,-1,12,5,1,12,3,-.0028559709899127483,.2096146047115326,-.1273255050182343,0,2,0,15,4,3,-1,0,16,4,1,3,-.004023151006549597,-.6581727862358093,.0506836399435997,0,2,0,0,15,1,-1,5,0,5,1,3,.0175580400973558,-.0853826925158501,.3617455959320068,0,2,6,0,6,4,-1,8,0,2,4,3,.0219882391393185,.062943696975708,-.7089633941650391,0,2,2,0,9,3,-1,5,0,3,3,3,-.002859958913177252,.1468378007411957,-.1646597981452942,0,2,13,6,3,7,-1,14,6,1,7,3,-.0100308498367667,.4957993924617767,-.0271883402019739,0,2,7,6,4,2,-1,7,7,4,1,2,-.006956032942980528,.2797777950763702,-.0779533311724663,0,2,6,18,6,1,-1,8,18,2,1,3,-.0038356808945536613,-.58163982629776,.0357399396598339,0,2,18,6,2,2,-1,18,7,2,1,2,-.0032647319603711367,-.4994508028030396,.0469864904880524,0,2,6,4,7,3,-1,6,5,7,1,3,-.007841235026717186,.34532830119133,-.0688104033470154,0,2,12,7,3,1,-1,13,7,1,1,3,-8171811350621283e-20,.1504171043634415,-.1414667963981628,0,3,15,1,2,10,-1,15,1,1,5,2,16,6,1,5,2,-.0032448628917336464,.227245107293129,-.0928602069616318,0,2,0,18,2,2,-1,0,19,2,1,2,-.0007856115116737783,-.4431901872158051,.0578124411404133,0,2,19,4,1,8,-1,19,8,1,4,2,-.0006247424753382802,.1395238935947418,-.1466871947050095,0,2,1,17,1,3,-1,1,18,1,1,3,-.0003294294874649495,-.2990157008171082,.0760667398571968,0,3,0,15,6,4,-1,0,15,3,2,2,3,17,3,2,2,.0012605739757418633,-.1612560003995895,.1395380049943924,0,2,19,0,1,18,-1,19,6,1,6,3,-.0516670197248459,-.5314283967018127,.0407195203006268,0,2,10,2,6,2,-1,12,2,2,2,3,-.0152856195345521,-.7820637822151184,.0271837692707777,0,2,2,8,12,2,-1,6,8,4,2,3,.0690298229455948,-.0364270210266113,.7110251784324646,0,2,16,0,4,1,-1,18,0,2,1,2,.001452274969778955,-.0968905165791512,.2166842073202133,0,2,8,4,2,6,-1,8,7,2,3,2,-.0024765590205788612,.1164531037211418,-.1822797954082489,0,2,14,5,2,10,-1,15,5,1,10,2,-.0015134819550439715,.1786397993564606,-.1221496984362602,0,2,13,4,2,2,-1,13,5,2,1,2,-.0015099470037966967,.1808623969554901,-.1144606992602348,0,2,11,1,3,6,-1,11,3,3,2,3,-.006705462001264095,.2510659992694855,-.0918714627623558,0,2,6,9,12,2,-1,10,9,4,2,3,-.014075200073421,.1370750963687897,-.173335000872612,0,2,9,16,4,2,-1,9,17,4,1,2,-.0022400720044970512,.4009298086166382,-.0475768782198429,0,2,5,14,15,4,-1,5,16,15,2,2,.0197823699563742,-.1904035061597824,.1492341011762619,0,2,18,16,2,2,-1,18,17,2,1,2,.002600287087261677,.0469717681407928,-.4330765902996063,0,3,16,18,2,2,-1,16,18,1,1,2,17,19,1,1,2,-.0005344562814570963,-.4374423027038574,.0415201894938946,0,2,6,4,3,8,-1,7,4,1,8,3,-.0174665097147226,.6581817269325256,-.0344474911689758,0,2,5,9,3,1,-1,6,9,1,1,3,-.00204255897551775,.3965792953968048,-.044052429497242,0,2,0,8,1,6,-1,0,10,1,2,3,.0026661779265850782,.0587709583342075,-.3280636966228485,0,2,11,2,9,6,-1,14,2,3,6,3,-.0559823699295521,-.5173547267913818,.0357918404042721,0,2,12,2,6,4,-1,14,2,2,4,3,-.0015066330088302493,.1512386947870255,-.1252018064260483,0,2,1,7,2,4,-1,1,9,2,2,2,-.0114723695442081,-.6293053030967712,.0347043313086033,0,2,13,1,6,4,-1,13,3,6,2,2,.0234096292406321,-.0580633506178856,.3866822123527527,0,3,4,10,2,10,-1,4,10,1,5,2,5,15,1,5,2,-.002324372995644808,.1875409930944443,-.0983946695923805,0,2,2,16,9,3,-1,5,16,3,3,3,-.0290392991155386,-.5448690056800842,.0409263409674168,0,2,1,2,3,9,-1,2,2,1,9,3,-.014474649913609,-.6724839210510254,.0231288503855467,0,2,19,7,1,4,-1,19,9,1,2,2,-.005208609160035849,-.4327144026756287,.0437806509435177,0,3,14,11,6,8,-1,14,11,3,4,2,17,15,3,4,2,.004938289988785982,-.1087862029671669,.1934258937835693,0,3,15,12,4,6,-1,15,12,2,3,2,17,15,2,3,2,-.004319393076002598,.2408093065023422,-.1038080006837845,0,3,16,15,2,2,-1,16,15,1,1,2,17,16,1,1,2,.0002370566944591701,-.087349072098732,.2046623975038528,0,3,17,16,2,2,-1,17,16,1,1,2,18,17,1,1,2,.0004785807977896184,.0456245802342892,-.3885467052459717,0,3,17,16,2,2,-1,17,16,1,1,2,18,17,1,1,2,-.0008534283842891455,-.550779402256012,.0358258895576,0,3,2,3,2,2,-1,2,3,1,1,2,3,4,1,1,2,5477212107507512e-20,-.1122523993253708,.1750351935625076,0,2,10,10,3,3,-1,11,10,1,3,3,-.0038445889949798584,.2452670037746429,-.0811325684189796,0,2,5,9,7,8,-1,5,13,7,4,2,-.0401284582912922,-.6312270760536194,.0269726701080799,0,3,7,16,2,2,-1,7,16,1,1,2,8,17,1,1,2,-.0001788636000128463,.1985509991645813,-.1033368036150932,0,3,7,16,2,2,-1,7,16,1,1,2,8,17,1,1,2,.00017668239888735116,-.0913590118288994,.1984872072935104,0,2,9,8,10,3,-1,14,8,5,3,2,.0727633833885193,.0500755794346333,-.3385263085365295,0,3,6,7,4,8,-1,6,7,2,4,2,8,11,2,4,2,.0101816300302744,-.0932299792766571,.2005959004163742,0,2,1,6,4,3,-1,1,7,4,1,3,.0024409969337284565,.0646366328001022,-.2692174017429352,0,2,6,10,6,10,-1,8,10,2,10,3,-.003622748889029026,.1316989064216614,-.1251484006643295,0,2,4,6,3,6,-1,5,6,1,6,3,-.0013635610230267048,.1635046005249023,-.106659397482872,-1.0408929586410522,69,0,3,3,10,4,4,-1,3,10,2,2,2,5,12,2,2,2,-.009699116460978985,.6112532019615173,-.0662253126502037,0,3,3,10,4,4,-1,3,10,2,2,2,5,12,2,2,2,-.009642653167247772,-1,.0027699959464371204,0,3,3,10,4,4,-1,3,10,2,2,2,5,12,2,2,2,-.009638186544179916,1,-.00029904270195402205,0,2,14,8,2,6,-1,15,8,1,6,2,-.004255393985658884,.2846438884735107,-.1554012000560761,0,3,3,10,4,4,-1,3,10,2,2,2,5,12,2,2,2,-.009622352197766304,-1,.0439991801977158,0,3,3,10,4,4,-1,3,10,2,2,2,5,12,2,2,2,-.009123124182224274,.8686934113502502,-.0027267890982329845,0,2,12,4,3,9,-1,13,4,1,9,3,-.008624043315649033,.4535248875617981,-.0860713794827461,0,2,12,3,1,12,-1,12,7,1,4,3,-.008932414464652538,.1337555944919586,-.2601251900196075,0,2,2,0,18,1,-1,8,0,6,1,3,-.0142078101634979,.3207764029502869,-.0972264111042023,0,3,10,0,10,6,-1,10,0,5,3,2,15,3,5,3,2,.0259110108017921,-.1296408027410507,.2621864974498749,0,2,18,16,2,2,-1,18,17,2,1,2,.00020531509653665125,-.1240428015589714,.2106295973062515,0,3,3,5,4,2,-1,3,5,2,1,2,5,6,2,1,2,-54795680625829846e-21,.1197429969906807,-.2320127934217453,0,2,11,8,3,3,-1,12,8,1,3,3,.006855519954115152,-.0632761269807816,.4104425013065338,0,2,11,7,3,5,-1,12,7,1,5,3,-.0122530404478312,.5488333106040955,-.0397311002016068,0,2,3,19,15,1,-1,8,19,5,1,3,-.0039058770053088665,.2419098019599915,-.0970960110425949,0,2,8,13,3,2,-1,8,14,3,1,2,.0027560980524867773,-.1256967931985855,.1945665031671524,0,3,2,12,8,4,-1,2,12,4,2,2,6,14,4,2,2,-.0077662160620093346,.2976570129394531,-.0968181565403938,0,3,16,16,2,2,-1,16,16,1,1,2,17,17,1,1,2,.00038997188676148653,.0621884018182755,-.4204089939594269,0,2,7,0,3,2,-1,8,0,1,2,3,.0033579880837351084,.0474981404840946,-.6321688294410706,0,2,6,7,2,5,-1,7,7,1,5,2,-.0167455393821001,.7109813094139099,-.0391573496162891,0,2,18,0,2,17,-1,19,0,1,17,2,-.0065409899689257145,-.3504317104816437,.0706169530749321,0,2,16,16,1,3,-1,16,17,1,1,3,.0003001634031534195,.091902457177639,-.2461867034435272,0,2,14,8,3,7,-1,15,8,1,7,3,.0149189904332161,-.0519094504415989,.5663604140281677,0,3,10,17,2,2,-1,10,17,1,1,2,11,18,1,1,2,.00048153079114854336,.064659558236599,-.3659060895442963,0,2,4,9,1,3,-1,4,10,1,1,3,-.00030211321427486837,.1792656928300858,-.1141066029667854,0,2,18,10,2,3,-1,18,11,2,1,3,.0003852141962852329,.1034561991691589,-.2007246017456055,0,2,12,1,3,10,-1,13,1,1,10,3,.008083713240921497,-.0660734623670578,.3028424978256226,0,2,8,12,9,1,-1,11,12,3,1,3,-.0228049699217081,.5296235084533691,-.0401189997792244,0,3,5,18,2,2,-1,5,18,1,1,2,6,19,1,1,2,.00019440450705587864,.0818548202514648,-.2466336041688919,0,2,19,6,1,9,-1,19,9,1,3,3,-.0128480903804302,-.3497331142425537,.0569162294268608,0,3,4,7,2,4,-1,4,7,1,2,2,5,9,1,2,2,-.001093729049898684,.2336868047714233,-.0916048064827919,0,2,1,4,6,14,-1,3,4,2,14,3,.0010032650316134095,.1185218021273613,-.1846919059753418,0,2,10,5,9,3,-1,13,5,3,3,3,-.0446884296834469,-.6436246037483215,.0303632691502571,0,2,18,7,2,6,-1,18,9,2,2,3,.00816575437784195,.0436746589839458,-.4300208985805512,0,2,5,6,2,7,-1,6,6,1,7,2,-.0117178102955222,.4178147912025452,-.0482336990535259,0,2,10,4,6,8,-1,13,4,3,8,2,.0842771306633949,.053461279720068,-.379521906375885,0,2,0,8,2,9,-1,0,11,2,3,3,.0142118399962783,.0449009388685226,-.4298149943351746,0,2,0,7,5,3,-1,0,8,5,1,3,.001502834027633071,.0822276398539543,-.2470639944076538,0,2,8,1,7,2,-1,8,2,7,1,2,.0100035797804594,-.057221669703722,.3460937142372131,0,2,7,5,3,5,-1,8,5,1,5,3,-.009070632047951221,.450580894947052,-.0427953191101551,0,2,19,2,1,2,-1,19,3,1,1,2,-.0003314162022434175,.1833691000938416,-.1075994968414307,0,2,6,7,10,11,-1,11,7,5,11,2,.19723279774189,-.030363829806447,.6642342805862427,0,2,9,19,6,1,-1,11,19,2,1,3,-.007125880103558302,-.8922504782676697,.0256699901074171,0,2,3,0,12,1,-1,7,0,4,1,3,.00869213417172432,-.0707643702626228,.2821052968502045,0,2,4,1,6,5,-1,6,1,2,5,3,.008926212787628174,.0710782334208488,-.3023256063461304,0,2,6,12,12,6,-1,10,12,4,6,3,.0572860091924667,.0509741306304932,-.3919695019721985,0,2,16,13,2,3,-1,16,14,2,1,3,.0037920880131423473,.0338419415056705,-.510162889957428,0,2,7,14,4,2,-1,7,15,4,1,2,-.0014508679741993546,.3087914884090424,-.063845083117485,0,2,7,14,2,2,-1,7,15,2,1,2,.00098390132188797,-.1302956938743591,.1460441052913666,0,3,3,10,2,4,-1,3,10,1,2,2,4,12,1,2,2,-.0017221809830516577,.2915700972080231,-.0685495585203171,0,2,0,3,2,6,-1,0,5,2,2,3,.0109482500702143,.0343514084815979,-.4770225882530212,0,3,1,10,2,2,-1,1,10,1,1,2,2,11,1,1,2,-1717630948405713e-20,.1605526953935623,-.1169084012508392,0,2,16,4,4,3,-1,16,5,4,1,3,-.005488420836627483,-.4341588914394379,.0461062416434288,0,3,5,10,2,4,-1,5,10,1,2,2,6,12,1,2,2,-.0030975250992923975,.3794333934783936,-.05686055123806,0,2,5,11,13,2,-1,5,12,13,1,2,.006418208125978708,-.1585821062326431,.1233541965484619,0,2,10,2,3,11,-1,11,2,1,11,3,.0118312397971749,-.0409292913973331,.458789587020874,0,2,10,2,4,4,-1,10,4,4,2,2,.013540499843657,-.0537255592644215,.3505612015724182,0,2,8,8,6,2,-1,10,8,2,2,3,-.002593215089291334,.1101052016019821,-.1675221025943756,0,2,11,2,3,3,-1,12,2,1,3,3,.0016856270376592875,.0665743574500084,-.3083502054214478,0,3,6,18,14,2,-1,6,18,7,1,2,13,19,7,1,2,.002652469091117382,.0663184821605682,-.2786133885383606,0,2,17,7,1,12,-1,17,11,1,4,3,-.007734172977507114,.1971835941076279,-.1078291982412338,0,2,10,5,10,3,-1,10,6,10,1,3,.005094427149742842,.0853374898433685,-.2484700977802277,0,2,6,1,3,3,-1,7,1,1,3,3,-.0029162371065467596,-.4747635126113892,.033566489815712,0,2,13,8,3,1,-1,14,8,1,1,3,.0030121419113129377,-.0475753806531429,.4258680045604706,0,2,10,14,2,6,-1,10,16,2,2,3,.0031694869976490736,-.1051945015788078,.1716345995664597,0,2,4,1,12,14,-1,8,1,4,14,3,.2232756018638611,-.0143702095374465,.9248365163803101,0,2,14,1,6,14,-1,16,1,2,14,3,-.0955850481987,-.7420663833618164,.0278189703822136,0,3,3,16,2,2,-1,3,16,1,1,2,4,17,1,1,2,3477372956695035e-20,-.1276578009128571,.129266694188118,0,2,0,16,2,2,-1,0,17,2,1,2,7245977030834183e-20,-.1651857942342758,.1003680974245071,-1.0566600561141968,59,0,3,15,6,4,6,-1,15,6,2,3,2,17,9,2,3,2,-.006577827036380768,.3381525874137878,-.1528190970420837,0,2,12,5,2,2,-1,12,6,2,1,2,-.0010922809597104788,.2228236943483353,-.1930849999189377,0,2,7,6,6,13,-1,9,6,2,13,3,-.0297595895826817,.2595987021923065,-.1540940999984741,0,2,1,9,6,5,-1,3,9,2,5,3,-.0131475403904915,.1903381049633026,-.1654399931430817,0,2,0,5,3,4,-1,0,7,3,2,2,-.0014396329643204808,.200717106461525,-.1233894005417824,0,3,4,1,16,2,-1,4,1,8,1,2,12,2,8,1,2,-.0035928250290453434,.2398552000522614,-.129221498966217,0,3,1,18,4,2,-1,1,18,2,1,2,3,19,2,1,2,-.0015314699849113822,-.4901489913463593,.102750301361084,0,2,7,7,3,4,-1,8,7,1,4,3,-.0062372139655053616,.31214639544487,-.114056296646595,0,2,3,4,9,3,-1,6,4,3,3,3,-.033364649862051,-.4952087998390198,.0513284504413605,0,2,4,6,6,10,-1,6,6,2,10,3,-.0228276997804642,.3255882859230042,-.0650893077254295,0,2,9,0,8,10,-1,13,0,4,10,2,-.0861990973353386,-.6764633059501648,.0269856993108988,0,2,8,0,8,1,-1,12,0,4,1,2,-.002106598112732172,.2245243042707443,-.1261022984981537,0,3,6,2,8,16,-1,6,2,4,8,2,10,10,4,8,2,.0391201488673687,.1132939979434013,-.2686063051223755,0,3,14,10,2,10,-1,14,10,1,5,2,15,15,1,5,2,.0035082739777863026,-.1135995984077454,.2564977109432221,0,2,12,11,1,2,-1,12,12,1,1,2,.0005928989849053323,-.1494296938180924,.164098396897316,0,2,16,0,3,8,-1,17,0,1,8,3,.0007176685030572116,.0999056920409203,-.2196796983480454,0,2,14,0,6,10,-1,17,0,3,10,2,-.0218036007136106,-.3171172142028809,.082889586687088,0,2,16,0,3,5,-1,17,0,1,5,3,-.003296277951449156,-.3804872930049896,.0608193799853325,0,2,4,5,11,2,-1,4,6,11,1,2,.0024196270387619734,-.0960130169987679,.2854058146476746,0,2,1,0,2,1,-1,2,0,1,1,2,-.00044187481398694217,.2212793976068497,-.0974349081516266,0,2,0,0,2,3,-1,0,1,2,1,3,.0034523929934948683,.0375531204044819,-.5796905159950256,0,2,11,6,6,11,-1,13,6,2,11,3,-.0218346007168293,.295621395111084,-.0800483003258705,0,2,14,0,3,1,-1,15,0,1,1,3,-.00021309500152710825,.2281450927257538,-.1011418998241425,0,2,19,7,1,2,-1,19,8,1,1,2,-.0016166249988600612,-.5054119825363159,.0447645410895348,0,2,17,0,3,9,-1,18,0,1,9,3,.007595960982143879,.0459865406155586,-.4119768142700195,0,2,12,7,3,4,-1,13,7,1,4,3,.003860180964693427,-.0865631699562073,.2480999976396561,0,3,0,1,14,2,-1,0,1,7,1,2,7,2,7,1,2,.006062223110347986,-.0755573734641075,.2843326032161713,0,2,3,1,3,2,-1,4,1,1,2,3,-.0017097420059144497,-.3529582023620606,.0584104992449284,0,2,4,0,15,2,-1,9,0,5,2,3,.0165155790746212,-.0804869532585144,.2353743016719818,0,2,10,2,6,1,-1,12,2,2,1,3,.004846510011702776,.041895218193531,-.4844304919242859,0,2,9,4,6,11,-1,11,4,2,11,3,-.0311671700328588,.1919230967760086,-.1026815995573998,0,2,2,16,2,4,-1,2,18,2,2,2,.0006189228151924908,-.210857704281807,.0938869267702103,0,2,6,17,6,3,-1,8,17,2,3,3,.0119463102892041,.0390961691737175,-.6224862933158875,0,2,7,9,6,2,-1,9,9,2,2,3,-.0075677200220525265,.1593683958053589,-.1225078031420708,0,2,6,8,9,2,-1,9,8,3,2,3,-.0537474118173122,-.5562217831611633,.0411900095641613,0,3,6,6,2,10,-1,6,6,1,5,2,7,11,1,5,2,.0155135300010443,-.0398268811404705,.6240072846412659,0,2,0,11,2,3,-1,0,12,2,1,3,.0015246650436893106,.0701386779546738,-.3078907132148743,0,2,11,15,4,1,-1,13,15,2,1,2,-.0004831510013900697,.178876593708992,-.109586201608181,0,2,6,17,1,2,-1,6,18,1,1,2,.0027374739293009043,.0274785906076431,-.8848956823348999,0,2,0,0,6,20,-1,2,0,2,20,3,-.0657877177000046,-.4643214046955109,.0350371487438679,0,2,3,10,2,2,-1,4,10,1,2,2,.0012409730115905404,-.0964792370796204,.2877922058105469,0,2,4,7,3,5,-1,5,7,1,5,3,.0008139880956150591,.1151171997189522,-.1676616072654724,0,2,3,12,6,2,-1,5,12,2,2,3,.0239018201828003,-.0326031893491745,.6001734733581543,0,2,6,15,7,4,-1,6,17,7,2,2,.0275566000491381,-.0661373436450958,.2999447882175446,0,3,17,16,2,2,-1,17,16,1,1,2,18,17,1,1,2,-.00038070970913395286,-.3388118147850037,.0644507706165314,0,2,15,1,3,16,-1,16,1,1,16,3,-.0013335429830476642,.1458866000175476,-.1321762055158615,0,2,6,16,6,3,-1,8,16,2,3,3,-.009350799024105072,-.5117782950401306,.0349694713950157,0,2,15,14,3,2,-1,15,15,3,1,2,.00762152299284935,.0232495293021202,-.6961941123008728,0,2,12,16,1,2,-1,12,17,1,1,2,-5340786083252169e-20,.2372737973928452,-.0869107097387314,0,3,0,2,4,4,-1,0,2,2,2,2,2,4,2,2,2,-.0015332329785451293,.192284107208252,-.1042239964008331,0,3,1,1,6,4,-1,1,1,3,2,2,4,3,3,2,2,.004313589073717594,-.0962195470929146,.2560121119022369,0,2,1,18,1,2,-1,1,19,1,1,2,-.000230428806389682,-.3156475126743317,.0588385984301567,0,2,4,7,2,3,-1,4,8,2,1,3,-.007841182872653008,-.6634092926979065,.0245009995996952,0,2,1,0,9,14,-1,1,7,9,7,2,.1710374057292938,.033831499516964,-.4561594128608704,0,3,4,9,2,6,-1,4,9,1,3,2,5,12,1,3,2,-.001601114054210484,.2157489061355591,-.0836225301027298,0,2,3,9,4,3,-1,5,9,2,3,2,-.0105357803404331,.2455231994390488,-.0823844894766808,0,2,0,9,2,4,-1,0,11,2,2,2,-.005835163872689009,-.4780732989311218,.0440862216055393,0,2,16,6,3,10,-1,17,6,1,10,3,-.0187061093747616,-.6002402901649475,.0214100405573845,0,2,16,11,2,1,-1,17,11,1,1,2,-.0009330743923783302,.2432359009981155,-.0741657167673111,-.9769343137741089,88,0,2,5,7,4,4,-1,5,9,4,2,2,.0106462296098471,-.1386138945817947,.2649407088756561,0,2,10,11,9,2,-1,13,11,3,2,3,.0352982692420483,-.075821727514267,.3902106881141663,0,3,15,10,2,2,-1,15,10,1,1,2,16,11,1,1,2,.0007563838735222816,-.095521442592144,.2906199991703033,0,2,10,6,6,14,-1,10,13,6,7,2,.092497706413269,-.2770423889160156,.0794747024774551,0,2,14,7,3,5,-1,15,7,1,5,3,-.002934087999165058,.2298953980207443,-.0785500109195709,0,2,6,11,12,3,-1,10,11,4,3,3,-.0865358486771584,.4774481058120728,-.006823122035712004,0,2,17,16,1,2,-1,17,17,1,1,2,54699288739357144e-21,-.2264260947704315,.0881921127438545,0,2,8,5,5,4,-1,8,7,5,2,2,-.0365925207734108,.2735387086868286,-.0986067429184914,0,2,11,6,4,2,-1,11,7,4,1,2,.0026469118893146515,-.0440839789807796,.3144528865814209,0,3,3,4,8,2,-1,3,4,4,1,2,7,5,4,1,2,-.004427181091159582,.2382272928953171,-.0867842733860016,0,2,0,8,6,6,-1,2,8,2,6,3,-.005188248120248318,.1504276990890503,-.1267210990190506,0,2,7,4,6,2,-1,7,5,6,1,2,.004553040023893118,-.0559450201690197,.3650163114070892,0,2,7,3,6,3,-1,9,3,2,3,3,.0145624103024602,.0363977700471878,-.5355919003486633,0,2,2,17,3,3,-1,2,18,3,1,3,6867756746942177e-20,-.1747962981462479,.1106870993971825,0,2,3,10,6,1,-1,5,10,2,1,3,-.005974490195512772,.3107787072658539,-.0665302276611328,0,2,7,2,6,2,-1,9,2,2,2,3,-.0058691250160336494,-.3190149068832398,.063931830227375,0,2,4,11,9,1,-1,7,11,3,1,3,-.0111403102055192,.2436479032039642,-.0809351801872253,0,2,7,7,11,12,-1,7,13,11,6,2,-.0586435310542583,-.7608326077461243,.0308096297085285,0,2,3,2,3,4,-1,4,2,1,4,3,-.0046097282320261,-.45315021276474,.0298790596425533,0,2,9,7,9,3,-1,12,7,3,3,3,-.00930321030318737,.1451337933540344,-.1103316992521286,0,3,15,11,2,6,-1,15,11,1,3,2,16,14,1,3,2,.0013253629440441728,-.0976989567279816,.196464404463768,0,2,0,5,5,3,-1,0,6,5,1,3,.004980076104402542,.0336480811238289,-.3979220986366272,0,2,8,1,6,12,-1,10,1,2,12,3,-.007654216140508652,.090841993689537,-.1596754938364029,0,2,3,7,15,13,-1,8,7,5,13,3,-.3892059028148651,-.6657109260559082,.0190288294106722,0,2,0,9,9,9,-1,0,12,9,3,3,-.1001966968178749,-.5755926966667175,.0242827795445919,0,2,16,0,3,8,-1,17,0,1,8,3,.0007354121189564466,.0879198014736176,-.161953404545784,0,2,16,2,4,2,-1,18,2,2,2,2,-.0034802639856934547,.2606449127197266,-.0602008104324341,0,2,13,0,6,5,-1,16,0,3,5,2,.008400042541325092,-.1097972989082336,.1570730954408646,0,2,15,1,3,2,-1,16,1,1,2,3,.0023786011151969433,.0360582396388054,-.4727719128131867,0,2,11,8,3,2,-1,12,8,1,2,3,.007383168209344149,-.0357563607394695,.4949859082698822,0,3,1,8,2,12,-1,1,8,1,6,2,2,14,1,6,2,.003211562056094408,-.1012556031346321,.1574798971414566,0,2,0,1,6,12,-1,2,1,2,12,3,-.0782096683979034,-.7662708163261414,.0229658298194408,0,2,19,17,1,3,-1,19,18,1,1,3,5330398926162161e-20,-.1341435015201569,.1111491993069649,0,2,11,3,3,10,-1,12,3,1,10,3,-.009641915559768677,.2506802976131439,-.0666081383824348,0,2,8,1,9,8,-1,11,1,3,8,3,-.0710926726460457,-.4005681872367859,.0402977913618088,0,3,18,16,2,2,-1,18,16,1,1,2,19,17,1,1,2,.00035171560011804104,.041861180216074,-.3296119868755341,0,3,18,16,2,2,-1,18,16,1,1,2,19,17,1,1,2,-.0003345815057400614,-.2602983117103577,.0678927376866341,0,2,6,13,2,6,-1,6,15,2,2,3,-.0041451421566307545,.2396769970655441,-.0720933377742767,0,2,9,14,2,2,-1,9,15,2,1,2,.003175450023263693,-.0712352693080902,.241284504532814,0,3,14,10,2,4,-1,14,10,1,2,2,15,12,1,2,2,-.005518449004739523,.5032023787498474,-.0296866800636053,0,3,0,15,2,2,-1,0,15,1,1,2,1,16,1,1,2,-.00030242869979701936,.2487905025482178,-.0567585788667202,0,3,6,7,2,2,-1,6,7,1,1,2,7,8,1,1,2,-.0013125919504091144,.3174780011177063,-.0418458618223667,0,3,11,18,2,2,-1,11,18,1,1,2,12,19,1,1,2,-.00027123570907860994,-.2704207003116608,.0568289905786514,0,3,0,0,6,4,-1,0,0,3,2,2,3,2,3,2,2,-.007324177771806717,.2755667865276337,-.0542529709637165,0,2,4,1,6,6,-1,6,1,2,6,3,-.0168517101556063,-.3485291004180908,.0453689992427826,0,2,15,13,5,4,-1,15,15,5,2,2,.0299021005630493,.0316210798919201,-.4311437010765076,0,2,7,17,6,1,-1,9,17,2,1,3,.0028902660124003887,.0380299612879753,-.3702709972858429,0,2,16,19,4,1,-1,18,19,2,1,2,-.0019242949783802032,.2480027973651886,-.059333298355341,0,2,16,16,4,4,-1,18,16,2,4,2,.004935414995998144,-.0830684006214142,.2204380929470062,0,2,7,8,9,4,-1,10,8,3,4,3,.0820756033062935,-.0194134395569563,.6908928751945496,0,3,16,18,2,2,-1,16,18,1,1,2,17,19,1,1,2,-.0002469948958605528,-.2466056942939758,.0647764503955841,0,3,2,9,2,4,-1,2,9,1,2,2,3,11,1,2,2,-.0018365769647061825,.2883616089820862,-.0533904582262039,0,3,0,3,8,4,-1,0,3,4,2,2,4,5,4,2,2,-.004955381155014038,.1274082958698273,-.1255941987037659,0,2,0,1,8,1,-1,4,1,4,1,2,-.008308662101626396,.2347811013460159,-.07167649269104,0,2,0,5,8,9,-1,4,5,4,9,2,-.1087991967797279,-.2599223852157593,.0586897395551205,0,2,7,18,6,2,-1,9,18,2,2,3,-.009678645059466362,-.707204282283783,.0187492594122887,0,2,0,4,1,12,-1,0,8,1,4,3,-.0271368306130171,-.5838422775268555,.021684130653739,0,2,19,13,1,6,-1,19,15,1,2,3,-.006538977846503258,-.5974891185760498,.0214803107082844,0,2,2,8,6,8,-1,4,8,2,8,3,-.0120956301689148,.1326903998851776,-.099722720682621,0,2,0,0,9,17,-1,3,0,3,17,3,-.1677609980106354,-.5665506720542908,.0321230888366699,0,2,7,9,6,8,-1,9,9,2,8,3,-.0132625503465533,.1149559020996094,-.1173838973045349,0,2,5,10,9,4,-1,8,10,3,4,3,.076744519174099,-.0314132310450077,.5993549227714539,0,2,5,0,8,3,-1,5,1,8,1,3,.005078522954136133,-.0529119409620762,.2334239929914475,0,3,16,6,4,4,-1,16,6,2,2,2,18,8,2,2,2,.0031800279393792152,-.0777343884110451,.1765290945768356,0,3,17,4,2,8,-1,17,4,1,4,2,18,8,1,4,2,-.0017729829996824265,.1959162950515747,-.0797521993517876,0,2,2,16,1,3,-1,2,17,1,1,3,-.00048560940194875,-.2880037128925324,.0490471199154854,0,2,2,16,1,3,-1,2,17,1,1,3,.00036554320831783116,.0679228976368904,-.2249943017959595,0,2,11,0,1,3,-1,11,1,1,1,3,-.0002693867136258632,.1658217012882233,-.0897440984845161,0,2,11,2,9,7,-1,14,2,3,7,3,.0786842331290245,.0260816793888807,-.5569373965263367,0,2,10,2,3,6,-1,11,2,1,6,3,-.0007377481088042259,.1403687000274658,-.1180030032992363,0,2,5,9,15,2,-1,5,10,15,1,2,.0239578299224377,.0304707400500774,-.4615997970104218,0,2,8,16,6,2,-1,8,17,6,1,2,-.001623908057808876,.2632707953453064,-.0567653700709343,0,3,9,16,10,2,-1,9,16,5,1,2,14,17,5,1,2,-.0009081974858418107,.1546245962381363,-.1108706966042519,0,3,9,17,2,2,-1,9,17,1,1,2,10,18,1,1,2,.0003980624896939844,.0556303709745407,-.2833195924758911,0,3,10,15,6,4,-1,10,15,3,2,2,13,17,3,2,2,.002050644950941205,-.0916048362851143,.1758553981781006,0,2,4,5,15,12,-1,9,5,5,12,3,.0267425496131182,.062003031373024,-.2448700070381165,0,2,11,13,2,3,-1,11,14,2,1,3,-.0021497008856385946,.2944929897785187,-.0532181486487389,0,2,8,13,7,3,-1,8,14,7,1,3,.005667165853083134,-.0642982423305511,.249056801199913,0,2,1,12,1,2,-1,1,13,1,1,2,6831790233263746e-20,-.1681963056325913,.0965485796332359,0,3,16,18,2,2,-1,16,18,1,1,2,17,19,1,1,2,.0001760043960530311,.0653080120682716,-.2426788061857224,0,2,1,19,18,1,-1,7,19,6,1,3,.004186160862445831,-.0979885831475258,.1805288940668106,0,2,1,17,6,1,-1,4,17,3,1,2,-.0021808340679854155,.192312702536583,-.0941239297389984,0,2,1,3,1,12,-1,1,9,1,6,2,.021730400621891,.0355785116553307,-.4508853852748871,0,2,0,9,3,6,-1,0,11,3,2,3,-.0147802699357271,-.4392701089382172,.0317355915904045,0,2,5,4,3,10,-1,6,4,1,10,3,-.0036145891062915325,.1981147974729538,-.0777014195919037,0,2,6,17,2,1,-1,7,17,1,1,2,.0018892709631472826,.0199624393135309,-.7204172015190125,0,2,1,0,6,12,-1,3,0,2,12,3,-.0013822480104863644,.0984669476747513,-.1488108038902283,0,2,4,7,9,2,-1,7,7,3,2,3,-.0039505911991000175,.1159323006868362,-.1279197037220001,-1.012935996055603,58,0,2,6,11,9,1,-1,9,11,3,1,3,-.0193955395370722,.474747508764267,-.1172109022736549,0,2,17,10,2,10,-1,17,15,2,5,2,.013118919916451,-.255521297454834,.1637880057096481,0,3,4,10,2,10,-1,4,10,1,5,2,5,15,1,5,2,-.0005160680157132447,.1945261955261231,-.17448890209198,0,2,12,3,3,12,-1,13,3,1,12,3,-.0131841599941254,.441814512014389,-.0900487527251244,0,3,15,3,4,6,-1,15,3,2,3,2,17,6,2,3,2,.0034657081123441458,-.1347709000110626,.1805634051561356,0,2,12,8,3,3,-1,13,8,1,3,3,.006298020016402006,-.0541649796068668,.3603338003158569,0,2,4,14,2,4,-1,4,16,2,2,2,.0016879989998415112,-.1999794989824295,.1202159970998764,0,2,6,16,1,3,-1,6,17,1,1,3,.00036039709812030196,.1052414029836655,-.2411606013774872,0,2,1,1,2,3,-1,2,1,1,3,2,-.001527684973552823,.2813552916049957,-.0689648166298866,0,2,0,2,4,1,-1,2,2,2,1,2,.00350335706025362,-.0825195834040642,.4071359038352966,0,2,8,17,12,3,-1,12,17,4,3,3,-.004733716137707233,.1972700953483582,-.117101401090622,0,2,9,16,6,4,-1,11,16,2,4,3,-.0115571497008204,-.5606111288070679,.0681709572672844,0,2,4,6,3,6,-1,4,9,3,3,2,-.0274457205086946,.4971862137317658,-.0623801499605179,0,2,6,2,12,9,-1,6,5,12,3,3,-.0528257787227631,.169212207198143,-.1309355050325394,0,3,6,0,14,20,-1,6,0,7,10,2,13,10,7,10,2,-.2984969913959503,-.6464967131614685,.0400768183171749,0,3,15,16,2,2,-1,15,16,1,1,2,16,17,1,1,2,-.00026307269581593573,.2512794137001038,-.0894948393106461,0,3,15,16,2,2,-1,15,16,1,1,2,16,17,1,1,2,.00023261709429789335,-.0868439897894859,.2383197993040085,0,2,19,8,1,3,-1,19,9,1,1,3,.00023631360090803355,.1155446022748947,-.189363494515419,0,2,13,4,1,2,-1,13,5,1,1,2,.0020742209162563086,-.0485948510468006,.5748599171638489,0,2,0,4,4,2,-1,0,5,4,1,2,-.007030888926237822,-.5412080883979797,.0487437509000301,0,2,19,5,1,6,-1,19,7,1,2,3,.00826522707939148,.0264945197850466,-.6172845959663391,0,2,16,0,2,1,-1,17,0,1,1,2,.0002004276029765606,-.1176863014698029,.1633386015892029,0,2,13,1,1,3,-1,13,2,1,1,3,.0016470040427520871,-.0599549189209938,.3517970144748688,0,2,17,17,1,3,-1,17,18,1,1,3,-.0003564253856893629,-.344202995300293,.0649482533335686,0,3,5,4,8,8,-1,5,4,4,4,2,9,8,4,4,2,-.0309358704835176,.1997970044612885,-.0976936966180801,0,3,1,2,2,2,-1,1,2,1,1,2,2,3,1,1,2,-.0006357877282425761,-.3148139119148254,.0594250410795212,0,3,0,0,8,6,-1,0,0,4,3,2,4,3,4,3,2,-.0118621801957488,.2004369050264359,-.0894475430250168,0,2,6,3,4,2,-1,6,4,4,1,2,.007150893099606037,-.0390060618519783,.5332716107368469,0,2,1,0,3,3,-1,1,1,3,1,3,-.0020059191156178713,-.2846972048282623,.0707236081361771,0,2,6,1,7,2,-1,6,2,7,1,2,.0036412389017641544,-.1066031977534294,.2494480013847351,0,2,2,6,12,6,-1,6,6,4,6,3,-.1346742957830429,.4991008043289185,-.0403322204947472,0,2,1,16,9,2,-1,4,16,3,2,3,-.002254765946418047,.1685169041156769,-.1111928001046181,0,2,7,15,6,4,-1,9,15,2,4,3,.004384228959679604,.0861394926905632,-.2743177115917206,0,2,6,15,12,1,-1,12,15,6,1,2,-.007336116861552,.2487521022558212,-.0959191620349884,0,2,17,17,1,3,-1,17,18,1,1,3,.0006466691265814006,.0674315765500069,-.3375408053398132,0,3,17,15,2,2,-1,17,15,1,1,2,18,16,1,1,2,.0002298376930411905,-.0839030519127846,.24584099650383,0,2,3,13,3,3,-1,3,14,3,1,3,.006703907158225775,.0290793292224407,-.6905593872070312,0,2,10,17,1,3,-1,10,18,1,1,3,5073488864582032e-20,-.1569671928882599,.1196542978286743,0,2,4,0,14,8,-1,11,0,7,8,2,-.2033555954694748,-.6950634717941284,.0275075193494558,0,2,2,0,12,2,-1,6,0,4,2,3,.009493941441178322,-.0874493718147278,.2396833002567291,0,2,2,0,4,3,-1,4,0,2,3,2,-.002405524021014571,.2115096002817154,-.1314893066883087,0,2,13,1,1,2,-1,13,2,1,1,2,-.00011342419747961685,.1523378938436508,-.1272590011358261,0,2,7,5,3,6,-1,8,5,1,6,3,.0149922100827098,-.0341279692947865,.506240725517273,0,3,18,2,2,2,-1,18,2,1,1,2,19,3,1,1,2,.0007406820077449083,.0487647503614426,-.4022532105445862,0,2,15,1,2,14,-1,16,1,1,14,2,-.004245944786816835,.2155476063489914,-.0871269926428795,0,3,15,6,2,2,-1,15,6,1,1,2,16,7,1,1,2,.0006865510949864984,-.0754187181591988,.2640590965747833,0,2,3,1,6,3,-1,5,1,2,3,3,-.0167514607310295,-.6772903203964233,.0329187288880348,0,3,7,16,2,2,-1,7,16,1,1,2,8,17,1,1,2,-.00026301678735762835,.2272586971521378,-.0905348733067513,0,3,5,17,2,2,-1,5,17,1,1,2,6,18,1,1,2,.0004339861043263227,.0558943785727024,-.3559266924858093,0,2,9,10,6,10,-1,11,10,2,10,3,-.0201501492410898,.1916276067495346,-.0949299708008766,0,2,10,17,6,3,-1,12,17,2,3,3,-.0144521296024323,-.6851034164428711,.0254221707582474,0,2,14,5,2,10,-1,14,10,2,5,2,-.0211497396230698,.3753319084644318,-.0514965802431107,0,2,11,12,6,2,-1,11,13,6,1,2,.0211377702653408,.0290830805897713,-.8943036794662476,0,2,8,1,1,3,-1,8,2,1,1,3,.0011524349683895707,-.0696949362754822,.2729980051517487,0,3,12,15,2,2,-1,12,15,1,1,2,13,16,1,1,2,-.00019070580310653895,.1822811961174011,-.0983670726418495,0,3,6,8,6,4,-1,6,8,3,2,2,9,10,3,2,2,-.0363496318459511,-.8369309902191162,.0250557605177164,0,2,7,5,3,5,-1,8,5,1,5,3,-.009063207544386387,.4146350026130676,-.0544134490191936,0,2,0,5,7,3,-1,0,6,7,1,3,-.0020535490475594997,-.1975031048059464,.1050689965486527,-.9774749279022217,93,0,2,7,9,6,6,-1,9,9,2,6,3,-.0227170195430517,.2428855001926422,-.1474552005529404,0,2,5,7,8,8,-1,5,11,8,4,2,.0255059506744146,-.2855173945426941,.1083720996975899,0,3,4,9,2,6,-1,4,9,1,3,2,5,12,1,3,2,-.0026640091091394424,.2927573025226593,-.1037271022796631,0,2,10,11,6,1,-1,12,11,2,1,3,-.003811528906226158,.2142689973115921,-.1381113976240158,0,2,13,6,6,11,-1,15,6,2,11,3,-.0167326908558607,.2655026018619537,-.0439113304018974,0,3,8,17,2,2,-1,8,17,1,1,2,9,18,1,1,2,.0004927701083943248,.02110455930233,-.4297136068344116,0,2,4,12,12,1,-1,8,12,4,1,3,-.0366911105811596,.5399242043495178,-.0436488017439842,0,2,11,17,3,2,-1,11,18,3,1,2,.0012615970335900784,-.1293386965990067,.1663877069950104,0,2,8,17,6,1,-1,10,17,2,1,3,-.008410685695707798,-.9469841122627258,.0214658491313457,0,2,4,1,14,6,-1,4,3,14,2,3,.0649027228355408,-.0717277601361275,.2661347985267639,0,2,14,2,2,12,-1,14,8,2,6,2,.0303050000220537,-.0827824920415878,.2769432067871094,0,2,12,13,3,2,-1,12,14,3,1,2,.0025875340215861797,-.1296616941690445,.1775663048028946,0,2,6,1,6,1,-1,8,1,2,1,3,-.00702404510229826,-.6424317955970764,.0399432107806206,0,2,10,6,6,1,-1,12,6,2,1,3,-.0010099769569933414,.1417661011219025,-.1165997013449669,0,2,3,19,2,1,-1,4,19,1,1,2,-4117907155887224e-20,.1568766981363297,-.1112734004855156,0,3,18,16,2,2,-1,18,16,1,1,2,19,17,1,1,2,-.0004729315114673227,-.3355455994606018,.0459777303040028,0,2,16,11,3,7,-1,17,11,1,7,3,-.0017178079579025507,.1695290952920914,-.1057806983590126,0,2,19,5,1,6,-1,19,8,1,3,2,-.0133331697434187,-.5825781226158142,.0309784300625324,0,2,9,8,4,3,-1,9,9,4,1,3,-.0018783430568873882,.1426687985658646,-.111312597990036,0,3,16,8,4,4,-1,16,8,2,2,2,18,10,2,2,2,-.006576598156243563,.2756136059761047,-.0531003288924694,0,3,2,8,2,2,-1,2,8,1,1,2,3,9,1,1,2,-7721038127783686e-20,.1324024051427841,-.111677996814251,0,3,3,5,6,4,-1,3,5,3,2,2,6,7,3,2,2,.0219685398042202,-.0269681606441736,.5006716847419739,0,3,2,3,8,16,-1,2,3,4,8,2,6,11,4,8,2,-.027445750311017,-.240867406129837,.0604782700538635,0,2,17,17,1,3,-1,17,18,1,1,3,7830584945622832e-20,-.1333488970994949,.1012346968054771,0,2,7,2,8,11,-1,11,2,4,11,2,.0701906830072403,-.0548637807369232,.2480994015932083,0,2,13,3,6,14,-1,16,3,3,14,2,-.0719021335244179,-.3784669041633606,.0422109998762608,0,2,0,9,18,2,-1,6,9,6,2,3,-.1078097969293594,-.3748658895492554,.0428334400057793,0,2,6,10,14,3,-1,6,11,14,1,3,.0014364200178533792,.0804763585329056,-.1726378947496414,0,2,10,9,9,3,-1,13,9,3,3,3,.068289190530777,-.0355957895517349,.4076131880283356,0,3,3,5,4,6,-1,3,5,2,3,2,5,8,2,3,2,-.00680371792986989,.1923379004001617,-.0823680236935616,0,2,3,7,3,7,-1,4,7,1,7,3,-.0005619348958134651,.1305712014436722,-.1435514986515045,0,2,2,8,11,6,-1,2,10,11,2,3,-.0582766495645046,-.3012543916702271,.0528196506202221,0,2,8,9,6,3,-1,8,10,6,1,3,-.006120571866631508,.2204390019178391,-.0756917521357536,0,2,3,3,3,11,-1,4,3,1,11,3,-.0135943097993732,-.3904936015605927,.0418571084737778,0,2,0,19,6,1,-1,3,19,3,1,2,.0013626200379803777,-.0953634232282639,.1497032046318054,0,2,18,18,1,2,-1,18,19,1,1,2,-.0001507421984570101,-.2394558042287827,.0647983327507973,0,3,8,0,12,6,-1,8,0,6,3,2,14,3,6,3,2,-.077414259314537,.5594198107719421,-.0245168805122375,0,2,19,5,1,3,-1,19,6,1,1,3,.0009211787255480886,.0549288615584373,-.2793481051921845,0,2,5,8,2,1,-1,6,8,1,1,2,.001025078003294766,-.0621673092246056,.249763697385788,0,2,13,11,2,1,-1,14,11,1,1,2,-.000811747508123517,.2343793958425522,-.0657258108258247,0,2,3,6,15,13,-1,8,6,5,13,3,.0834310203790665,.0509548000991344,-.3102098107337952,0,2,4,3,6,2,-1,6,3,2,2,3,-.009201445616781712,-.3924253880977631,.0329269506037235,0,2,0,18,1,2,-1,0,19,1,1,2,-.00029086650465615094,-.3103975057601929,.0497118197381496,0,2,7,8,2,6,-1,8,8,1,6,2,.00775768980383873,-.0440407507121563,.3643135130405426,0,2,3,0,6,19,-1,5,0,2,19,3,-.1246609017252922,-.819570779800415,.0191506408154964,0,2,3,1,6,5,-1,5,1,2,5,3,.0132425501942635,.0389888398349285,-.3323068022727966,0,2,17,14,3,6,-1,17,16,3,2,3,-.006677012890577316,-.357901394367218,.0404602102935314,0,2,17,13,2,6,-1,18,13,1,6,2,-.0027479929849505424,.2525390088558197,-.0564278215169907,0,2,17,18,2,2,-1,18,18,1,2,2,.0008265965152531862,-.07198865711689,.2278047949075699,0,2,11,14,9,4,-1,14,14,3,4,3,-.0501534007489681,-.630364716053009,.027462050318718,0,3,15,8,4,6,-1,15,8,2,3,2,17,11,2,3,2,.007420314941555262,-.0666107162833214,.2778733968734741,0,2,1,16,1,3,-1,1,17,1,1,3,-.0006795178051106632,-.3632706105709076,.0427954308688641,0,2,7,0,3,14,-1,8,0,1,14,3,-.0019305750029161572,.1419623047113419,-.1075998023152351,0,2,12,0,2,1,-1,13,0,1,1,2,-.0003813267103396356,.2159176021814346,-.0702026635408401,0,2,7,9,6,5,-1,10,9,3,5,2,-.0709903463721275,.4526660144329071,-.0407504811882973,0,2,15,5,4,9,-1,17,5,2,9,2,-.0533680804073811,-.6767405867576599,.0192883405834436,0,2,11,0,6,6,-1,13,0,2,6,3,-.0200648494064808,-.4336543083190918,.0318532884120941,0,3,16,15,2,2,-1,16,15,1,1,2,17,16,1,1,2,.001197636011056602,-.0265598706901073,.5079718232154846,0,3,16,15,2,2,-1,16,15,1,1,2,17,16,1,1,2,-.0002269730030093342,.1801259964704514,-.0836065486073494,0,2,13,2,2,18,-1,13,11,2,9,2,.0152626996859908,-.2023892998695374,.067422017455101,0,2,8,4,8,10,-1,8,9,8,5,2,-.2081176936626434,.6694386005401611,-.0224521104246378,0,2,8,3,2,3,-1,8,4,2,1,3,.001551436958834529,-.0751218423247337,.17326919734478,0,2,11,1,6,9,-1,11,4,6,3,3,-.0529240109026432,.2499251961708069,-.0628791674971581,0,2,15,4,5,6,-1,15,6,5,2,3,-.0216488502919674,-.2919428050518036,.0526144914329052,0,3,12,18,2,2,-1,12,18,1,1,2,13,19,1,1,2,-.00022905069636180997,-.2211730033159256,.0631683394312859,0,2,1,17,1,3,-1,1,18,1,1,3,5017007060814649e-20,-.1151070967316628,.1161144003272057,0,2,12,19,2,1,-1,13,19,1,1,2,-.0001641606941120699,.1587152034044266,-.0826006010174751,0,2,8,10,6,6,-1,10,10,2,6,3,-.0120032895356417,.1221809014678001,-.112296998500824,0,2,14,2,6,5,-1,16,2,2,5,3,-.0177841000258923,-.3507278859615326,.0313419215381145,0,2,9,5,2,6,-1,9,7,2,2,3,-.006345758214592934,.1307806968688965,-.1057441011071205,0,2,1,15,2,2,-1,2,15,1,2,2,-.0007952324231155217,.1720467060804367,-.086001992225647,0,2,18,17,1,3,-1,18,18,1,1,3,-.00031029590172693133,-.2843317091464996,.0518171191215515,0,2,10,14,4,6,-1,10,16,4,2,3,-.0170537102967501,.3924242854118347,-.0401432700455189,0,2,9,7,3,2,-1,10,7,1,2,3,.004650495946407318,-.031837560236454,.4123769998550415,0,3,6,9,6,2,-1,6,9,3,1,2,9,10,3,1,2,-.0103587601333857,-.5699319839477539,.0292483791708946,0,2,0,2,1,12,-1,0,6,1,4,3,-.0221962407231331,-.4560528993606567,.0262859892100096,0,2,4,0,15,1,-1,9,0,5,1,3,-.0070536029525101185,.1599832028150559,-.091594859957695,0,3,9,0,8,2,-1,9,0,4,1,2,13,1,4,1,2,-.0005709429970011115,-.1407632976770401,.1028741970658302,0,2,12,2,8,1,-1,16,2,4,1,2,-.0022152599412947893,.1659359931945801,-.0852739885449409,0,2,7,1,10,6,-1,7,3,10,2,3,-.0280848909169436,.2702234089374542,-.0558738112449646,0,2,18,6,2,3,-1,18,7,2,1,3,.0021515151020139456,.0424728915095329,-.3200584948062897,0,3,4,12,2,2,-1,4,12,1,1,2,5,13,1,1,2,-.00029733829433098435,.1617716997861862,-.0851155892014503,0,2,6,6,6,2,-1,8,6,2,2,3,-.0166947804391384,-.4285877048969269,.0305416099727154,0,2,0,9,9,6,-1,3,9,3,6,3,.1198299005627632,-.0162772908806801,.7984678149223328,0,2,17,18,2,2,-1,18,18,1,2,2,-.000354994204826653,.1593593955039978,-.0832728818058968,0,2,11,2,6,16,-1,13,2,2,16,3,-.0182262696325779,.1952728033065796,-.0739398896694183,0,2,2,4,15,13,-1,7,4,5,13,3,-.00040238600922748446,.0791018083691597,-.2080612927675247,0,2,16,2,3,10,-1,17,2,1,10,3,.0004089206049684435,.1003663018345833,-.1512821018695831,0,2,6,10,2,1,-1,7,10,1,1,2,.0009536811267025769,-.0730116665363312,.2175202071666718,0,2,1,1,18,16,-1,10,1,9,16,2,.4308179914951325,-.0274506993591785,.570615828037262,0,2,14,4,3,15,-1,15,4,1,15,3,.0005356483161449432,.1158754006028175,-.1279056072235107,0,2,19,13,1,2,-1,19,14,1,1,2,2443073026370257e-20,-.1681662946939468,.0804499834775925,0,2,2,6,5,8,-1,2,10,5,4,2,-.0553456507623196,.4533894956111908,-.0312227793037891])
},function(t,e){
tracking.ViolaJones.classifiers.face=new Float64Array([20,20,.822689414024353,3,0,2,3,7,14,4,-1,3,9,14,2,2,.004014195874333382,.0337941907346249,.8378106951713562,0,2,1,2,18,4,-1,7,2,6,4,3,.0151513395830989,.1514132022857666,.7488812208175659,0,2,1,7,15,9,-1,1,10,15,3,3,.004210993181914091,.0900492817163467,.6374819874763489,6.956608772277832,16,0,2,5,6,2,6,-1,5,9,2,3,2,.0016227109590545297,.0693085864186287,.7110946178436279,0,2,7,5,6,3,-1,9,5,2,3,3,.002290664939209819,.1795803010463715,.6668692231178284,0,2,4,0,12,9,-1,4,3,12,3,3,.005002570804208517,.1693672984838486,.6554006934165955,0,2,6,9,10,8,-1,6,13,10,4,2,.007965989410877228,.5866332054138184,.0914145186543465,0,2,3,6,14,8,-1,3,10,14,4,2,-.003522701095789671,.1413166970014572,.6031895875930786,0,2,14,1,6,10,-1,14,1,3,10,2,.0366676896810532,.3675672113895416,.7920318245887756,0,2,7,8,5,12,-1,7,12,5,4,3,.009336147457361221,.6161385774612427,.2088509947061539,0,2,1,1,18,3,-1,7,1,6,3,3,.008696131408214569,.2836230993270874,.6360273957252502,0,2,1,8,17,2,-1,1,9,17,1,2,.0011488880263641477,.2223580926656723,.5800700783729553,0,2,16,6,4,2,-1,16,7,4,1,2,-.002148468978703022,.2406464070081711,.5787054896354675,0,2,5,17,2,2,-1,5,18,2,1,2,.002121906029060483,.5559654831886292,.136223703622818,0,2,14,2,6,12,-1,14,2,3,12,2,-.0939491465687752,.8502737283706665,.4717740118503571,0,3,4,0,4,12,-1,4,0,2,6,2,6,6,2,6,2,.0013777789426967502,.5993673801422119,.2834529876708984,0,2,2,11,18,8,-1,8,11,6,8,3,.0730631574988365,.4341886043548584,.7060034275054932,0,2,5,7,10,2,-1,5,8,10,1,2,.00036767389974556863,.3027887940406799,.6051574945449829,0,2,15,11,5,3,-1,15,12,5,1,3,-.0060479710809886456,.17984339594841,.5675256848335266,9.498542785644531,21,0,2,5,3,10,9,-1,5,6,10,3,3,-.0165106896311045,.6644225120544434,.1424857974052429,0,2,9,4,2,14,-1,9,11,2,7,2,.002705249935388565,.6325352191925049,.1288477033376694,0,2,3,5,4,12,-1,3,9,4,4,3,.002806986914947629,.1240288019180298,.6193193197250366,0,2,4,5,12,5,-1,8,5,4,5,3,-.0015402400167658925,.1432143002748489,.5670015811920166,0,2,5,6,10,8,-1,5,10,10,4,2,-.0005638627917505801,.1657433062791824,.5905207991600037,0,2,8,0,6,9,-1,8,3,6,3,3,.0019253729842603207,.2695507109165192,.5738824009895325,0,2,9,12,1,8,-1,9,16,1,4,2,-.005021484103053808,.1893538981676102,.5782774090766907,0,2,0,7,20,6,-1,0,9,20,2,3,.0026365420781075954,.2309329062700272,.5695425868034363,0,2,7,0,6,17,-1,9,0,2,17,3,-.0015127769438549876,.2759602069854736,.5956642031669617,0,2,9,0,6,4,-1,11,0,2,4,3,-.0101574398577213,.1732538044452667,.5522047281265259,0,2,5,1,6,4,-1,7,1,2,4,3,-.011953660286963,.1339409947395325,.5559014081954956,0,2,12,1,6,16,-1,14,1,2,16,3,.004885949194431305,.3628703951835632,.6188849210739136,0,3,0,5,18,8,-1,0,5,9,4,2,9,9,9,4,2,-.0801329165697098,.0912110507488251,.5475944876670837,0,3,8,15,10,4,-1,13,15,5,2,2,8,17,5,2,2,.0010643280111253262,.3715142905712128,.5711399912834167,0,3,3,1,4,8,-1,3,1,2,4,2,5,5,2,4,2,-.0013419450260698795,.5953313708305359,.331809788942337,0,3,3,6,14,10,-1,10,6,7,5,2,3,11,7,5,2,-.0546011403203011,.1844065934419632,.5602846145629883,0,2,2,1,6,16,-1,4,1,2,16,3,.0029071690514683723,.3594244122505188,.6131715178489685,0,2,0,18,20,2,-1,0,19,20,1,2,.0007471871795132756,.5994353294372559,.3459562957286835,0,2,8,13,4,3,-1,8,14,4,1,3,.004301380831748247,.4172652065753937,.6990845203399658,0,2,9,14,2,3,-1,9,15,2,1,3,.004501757211983204,.4509715139865875,.7801457047462463,0,2,0,12,9,6,-1,0,14,9,2,3,.0241385009139776,.5438212752342224,.1319826990365982,18.4129695892334,39,0,2,5,7,3,4,-1,5,9,3,2,2,.001921223010867834,.1415266990661621,.6199870705604553,0,2,9,3,2,16,-1,9,11,2,8,2,-.00012748669541906565,.6191074252128601,.1884928941726685,0,2,3,6,13,8,-1,3,10,13,4,2,.0005140993162058294,.1487396955490112,.5857927799224854,0,2,12,3,8,2,-1,12,3,4,2,2,.004187860991805792,.2746909856796265,.6359239816665649,0,2,8,8,4,12,-1,8,12,4,4,3,.005101571790874004,.5870851278305054,.2175628989934921,0,3,11,3,8,6,-1,15,3,4,3,2,11,6,4,3,2,-.002144844038411975,.5880944728851318,.2979590892791748,0,2,7,1,6,19,-1,9,1,2,19,3,-.0028977119363844395,.2373327016830444,.5876647233963013,0,2,9,0,6,4,-1,11,0,2,4,3,-.0216106791049242,.1220654994249344,.5194202065467834,0,2,3,1,9,3,-1,6,1,3,3,3,-.004629931878298521,.263123095035553,.5817409157752991,0,3,8,15,10,4,-1,13,15,5,2,2,8,17,5,2,2,.000593937118537724,.363862007856369,.5698544979095459,0,2,0,3,6,10,-1,3,3,3,10,2,.0538786612451077,.4303531050682068,.7559366226196289,0,2,3,4,15,15,-1,3,9,15,5,3,.0018887349870055914,.2122603058815002,.561342716217041,0,2,6,5,8,6,-1,6,7,8,2,3,-.0023635339457541704,.563184916973114,.2642767131328583,0,3,4,4,12,10,-1,10,4,6,5,2,4,9,6,5,2,.0240177996456623,.5797107815742493,.2751705944538117,0,2,6,4,4,4,-1,8,4,2,4,2,.00020543030404951423,.2705242037773132,.575256884098053,0,2,15,11,1,2,-1,15,12,1,1,2,.0008479019743390381,.5435624718666077,.2334876954555512,0,2,3,11,2,2,-1,3,12,2,1,2,.0014091329649090767,.5319424867630005,.2063155025243759,0,2,16,11,1,3,-1,16,12,1,1,3,.0014642629539594054,.5418980717658997,.3068861067295075,0,3,3,15,6,4,-1,3,15,3,2,2,6,17,3,2,2,.0016352549428120255,.3695372939109802,.6112868189811707,0,2,6,7,8,2,-1,6,8,8,1,2,.0008317275205627084,.3565036952495575,.6025236248970032,0,2,3,11,1,3,-1,3,12,1,1,3,-.0020998890977352858,.1913982033729553,.5362827181816101,0,2,6,0,12,2,-1,6,1,12,1,2,-.0007421398186124861,.3835555016994476,.552931010723114,0,2,9,14,2,3,-1,9,15,2,1,3,.0032655049581080675,.4312896132469177,.7101895809173584,0,2,7,15,6,2,-1,7,16,6,1,2,.0008913499186746776,.3984830975532532,.6391963958740234,0,2,0,5,4,6,-1,0,7,4,2,3,-.0152841797098517,.2366732954978943,.5433713793754578,0,2,4,12,12,2,-1,8,12,4,2,3,.004838141147047281,.5817500948905945,.3239189088344574,0,2,6,3,1,9,-1,6,6,1,3,3,-.0009109317907132208,.5540593862533569,.2911868989467621,0,2,10,17,3,2,-1,11,17,1,2,3,-.006127506028860807,.1775255054235458,.5196629166603088,0,2,9,9,2,2,-1,9,10,2,1,2,-.00044576259097084403,.3024170100688934,.5533593893051147,0,2,7,6,6,4,-1,9,6,2,4,3,.0226465407758951,.4414930939674377,.6975377202033997,0,2,7,17,3,2,-1,8,17,1,2,3,-.0018804960418492556,.2791394889354706,.5497952103614807,0,2,10,17,3,3,-1,11,17,1,3,3,.007088910788297653,.5263199210166931,.2385547012090683,0,2,8,12,3,2,-1,8,13,3,1,2,.0017318050377070904,.4319379031658173,.6983600854873657,0,2,9,3,6,2,-1,11,3,2,2,3,-.006848270073533058,.3082042932510376,.5390920042991638,0,2,3,11,14,4,-1,3,13,14,2,2,-15062530110299122e-21,.552192211151123,.3120366036891937,0,3,1,10,18,4,-1,10,10,9,2,2,1,12,9,2,2,.0294755697250366,.5401322841644287,.1770603060722351,0,2,0,10,3,3,-1,0,11,3,1,3,.008138732984662056,.5178617835044861,.121101900935173,0,2,9,1,6,6,-1,11,1,2,6,3,.0209429506212473,.5290294289588928,.3311221897602081,0,2,8,7,3,6,-1,9,7,1,6,3,-.009566552937030792,.7471994161605835,.4451968967914581,15.324139595031738,33,0,2,1,0,18,9,-1,1,3,18,3,3,-.00028206960996612906,.2064086049795151,.6076732277870178,0,2,12,10,2,6,-1,12,13,2,3,2,.00167906004935503,.5851997137069702,.1255383938550949,0,2,0,5,19,8,-1,0,9,19,4,2,.0006982791237533092,.094018429517746,.5728961229324341,0,2,7,0,6,9,-1,9,0,2,9,3,.0007895901217125356,.1781987994909287,.5694308876991272,0,2,5,3,6,1,-1,7,3,2,1,3,-.002856049919500947,.1638399064540863,.5788664817810059,0,2,11,3,6,1,-1,13,3,2,1,3,-.0038122469559311867,.2085440009832382,.5508564710617065,0,2,5,10,4,6,-1,5,13,4,3,2,.0015896620461717248,.5702760815620422,.1857215017080307,0,2,11,3,6,1,-1,13,3,2,1,3,.0100783398374915,.5116943120956421,.2189770042896271,0,2,4,4,12,6,-1,4,6,12,2,3,-.0635263025760651,.7131379842758179,.4043813049793243,0,2,15,12,2,6,-1,15,14,2,2,3,-.009103149175643921,.2567181885242462,.54639732837677,0,2,9,3,2,2,-1,10,3,1,2,2,-.002403500024229288,.1700665950775147,.559097409248352,0,2,9,3,3,1,-1,10,3,1,1,3,.001522636041045189,.5410556793212891,.2619054019451141,0,2,1,1,4,14,-1,3,1,2,14,2,.0179974399507046,.3732436895370483,.6535220742225647,0,3,9,0,4,4,-1,11,0,2,2,2,9,2,2,2,2,-.00645381910726428,.2626481950283051,.5537446141242981,0,2,7,5,1,14,-1,7,12,1,7,2,-.0118807600811124,.2003753930330277,.5544745922088623,0,2,19,0,1,4,-1,19,2,1,2,2,.0012713660253211856,.5591902732849121,.303197592496872,0,2,5,5,6,4,-1,8,5,3,4,2,.0011376109905540943,.2730407118797302,.5646508932113647,0,2,9,18,3,2,-1,10,18,1,2,3,-.00426519988104701,.1405909061431885,.5461820960044861,0,2,8,18,3,2,-1,9,18,1,2,3,-.0029602861031889915,.1795035004615784,.5459290146827698,0,2,4,5,12,6,-1,4,7,12,2,3,-.008844822645187378,.5736783146858215,.280921995639801,0,2,3,12,2,6,-1,3,14,2,2,3,-.006643068976700306,.2370675951242447,.5503826141357422,0,2,10,8,2,12,-1,10,12,2,4,3,.003999780863523483,.5608199834823608,.3304282128810883,0,2,7,18,3,2,-1,8,18,1,2,3,-.004122172016650438,.1640105992555618,.5378993153572083,0,2,9,0,6,2,-1,11,0,2,2,3,.0156249096617103,.5227649211883545,.2288603931665421,0,2,5,11,9,3,-1,5,12,9,1,3,-.0103564197197557,.7016193866729736,.4252927899360657,0,2,9,0,6,2,-1,11,0,2,2,3,-.008796080946922302,.2767347097396851,.5355830192565918,0,2,1,1,18,5,-1,7,1,6,5,3,.1622693985700607,.434224009513855,.744257926940918,0,3,8,0,4,4,-1,10,0,2,2,2,8,2,2,2,2,.0045542530715465546,.5726485848426819,.2582125067710877,0,2,3,12,1,3,-1,3,13,1,1,3,-.002130920998752117,.2106848061084747,.5361018776893616,0,2,8,14,5,3,-1,8,15,5,1,3,-.0132084200158715,.7593790888786316,.4552468061447144,0,3,5,4,10,12,-1,5,4,5,6,2,10,10,5,6,2,-.0659966766834259,.125247597694397,.5344039797782898,0,2,9,6,9,12,-1,9,10,9,4,3,.007914265617728233,.3315384089946747,.5601043105125427,0,3,2,2,12,14,-1,2,2,6,7,2,8,9,6,7,2,.0208942797034979,.5506049990653992,.2768838107585907,21.010639190673828,44,0,2,4,7,12,2,-1,8,7,4,2,3,.0011961159761995077,.1762690991163254,.6156241297721863,0,2,7,4,6,4,-1,7,6,6,2,2,-.0018679830245673656,.6118106842041016,.1832399964332581,0,2,4,5,11,8,-1,4,9,11,4,2,-.00019579799845814705,.0990442633628845,.5723816156387329,0,2,3,10,16,4,-1,3,12,16,2,2,-.0008025565766729414,.5579879879951477,.2377282977104187,0,2,0,0,16,2,-1,0,1,16,1,2,-.0024510810617357492,.2231457978487015,.5858935117721558,0,2,7,5,6,2,-1,9,5,2,2,3,.0005036185029894114,.2653993964195252,.5794103741645813,0,3,3,2,6,10,-1,3,2,3,5,2,6,7,3,5,2,.0040293349884450436,.5803827047348022,.2484865039587021,0,2,10,5,8,15,-1,10,10,8,5,3,-.0144517095759511,.1830351948738098,.5484204888343811,0,3,3,14,8,6,-1,3,14,4,3,2,7,17,4,3,2,.0020380979403853416,.3363558948040009,.6051092743873596,0,2,14,2,2,2,-1,14,3,2,1,2,-.0016155190533027053,.2286642044782639,.5441246032714844,0,2,1,10,7,6,-1,1,13,7,3,2,.0033458340913057327,.5625913143157959,.2392338067293167,0,2,15,4,4,3,-1,15,4,2,3,2,.0016379579901695251,.3906993865966797,.5964621901512146,0,3,2,9,14,6,-1,2,9,7,3,2,9,12,7,3,2,.0302512105554342,.524848222732544,.1575746983289719,0,2,5,7,10,4,-1,5,9,10,2,2,.037251990288496,.4194310903549194,.6748418807983398,0,3,6,9,8,8,-1,6,9,4,4,2,10,13,4,4,2,-.0251097902655602,.1882549971342087,.5473451018333435,0,2,14,1,3,2,-1,14,2,3,1,2,-.005309905856847763,.133997306227684,.5227110981941223,0,2,1,4,4,2,-1,3,4,2,2,2,.0012086479691788554,.3762088119983673,.6109635829925537,0,2,11,10,2,8,-1,11,14,2,4,2,-.0219076797366142,.266314297914505,.5404006838798523,0,2,0,0,5,3,-1,0,1,5,1,3,.0054116579703986645,.5363578796386719,.2232273072004318,0,3,2,5,18,8,-1,11,5,9,4,2,2,9,9,4,2,.069946326315403,.5358232855796814,.2453698068857193,0,2,6,6,1,6,-1,6,9,1,3,2,.00034520021290518343,.2409671992063522,.5376930236816406,0,2,19,1,1,3,-1,19,2,1,1,3,.0012627709656953812,.5425856709480286,.3155693113803864,0,2,7,6,6,6,-1,9,6,2,6,3,.0227195098996162,.4158405959606171,.6597865223884583,0,2,19,1,1,3,-1,19,2,1,1,3,-.001811100053600967,.2811253070831299,.5505244731903076,0,2,3,13,2,3,-1,3,14,2,1,3,.0033469670452177525,.526002824306488,.1891465038061142,0,3,8,4,8,12,-1,12,4,4,6,2,8,10,4,6,2,.00040791751234792173,.5673509240150452,.3344210088253021,0,2,5,2,6,3,-1,7,2,2,3,3,.0127347996458411,.5343592166900635,.2395612001419067,0,2,6,1,9,10,-1,6,6,9,5,2,-.007311972789466381,.6010890007019043,.4022207856178284,0,2,0,4,6,12,-1,2,4,2,12,3,-.0569487512111664,.8199151158332825,.4543190896511078,0,2,15,13,2,3,-1,15,14,2,1,3,-.005011659115552902,.2200281023979187,.5357710719108582,0,2,7,14,5,3,-1,7,15,5,1,3,.006033436860889196,.4413081109523773,.7181751132011414,0,2,15,13,3,3,-1,15,14,3,1,3,.0039437441155314445,.547886073589325,.2791733145713806,0,2,6,14,8,3,-1,6,15,8,1,3,-.0036591119132936,.635786771774292,.3989723920822144,0,2,15,13,3,3,-1,15,14,3,1,3,-.0038456181064248085,.3493686020374298,.5300664901733398,0,2,2,13,3,3,-1,2,14,3,1,3,-.007192626129835844,.1119614988565445,.5229672789573669,0,3,4,7,12,12,-1,10,7,6,6,2,4,13,6,6,2,-.0527989417314529,.2387102991342545,.54534512758255,0,2,9,7,2,6,-1,10,7,1,6,2,-.007953766733407974,.7586917877197266,.4439376890659332,0,2,8,9,5,2,-1,8,10,5,1,2,-.0027344180271029472,.2565476894378662,.5489321947097778,0,2,8,6,3,4,-1,9,6,1,4,3,-.0018507939530536532,.6734347939491272,.4252474904060364,0,2,9,6,2,8,-1,9,10,2,4,2,.0159189198166132,.548835277557373,.2292661964893341,0,2,7,7,3,6,-1,8,7,1,6,3,-.0012687679845839739,.6104331016540527,.4022389948368073,0,2,11,3,3,3,-1,12,3,1,3,3,.006288391072303057,.5310853123664856,.1536193042993546,0,2,5,4,6,1,-1,7,4,2,1,3,-.0062259892001748085,.1729111969470978,.524160623550415,0,2,5,6,10,3,-1,5,7,10,1,3,-.0121325999498367,.659775972366333,.4325182139873505,23.918790817260742,50,0,2,7,3,6,9,-1,7,6,6,3,3,-.0039184908382594585,.6103435158729553,.1469330936670303,0,2,6,7,9,1,-1,9,7,3,1,3,.0015971299726516008,.2632363140583038,.5896466970443726,0,2,2,8,16,8,-1,2,12,16,4,2,.0177801102399826,.587287425994873,.1760361939668655,0,2,14,6,2,6,-1,14,9,2,3,2,.0006533476989716291,.1567801982164383,.5596066117286682,0,2,1,5,6,15,-1,1,10,6,5,3,-.00028353091329336166,.1913153976202011,.5732036232948303,0,2,10,0,6,9,-1,10,3,6,3,3,.0016104689566418529,.2914913892745972,.5623080730438232,0,2,6,6,7,14,-1,6,13,7,7,2,-.0977506190538406,.194347694516182,.5648233294487,0,2,13,7,3,6,-1,13,9,3,2,3,.0005518235848285258,.3134616911411285,.5504639744758606,0,2,1,8,15,4,-1,6,8,5,4,3,-.0128582203760743,.253648191690445,.5760142803192139,0,2,11,2,3,10,-1,11,7,3,5,2,.004153023939579725,.5767722129821777,.36597740650177,0,2,3,7,4,6,-1,3,9,4,2,3,.0017092459602281451,.2843191027641296,.5918939113616943,0,2,13,3,6,10,-1,15,3,2,10,3,.007521735969930887,.4052427113056183,.6183109283447266,0,3,5,7,8,10,-1,5,7,4,5,2,9,12,4,5,2,.0022479810286313295,.578375518321991,.3135401010513306,0,3,4,4,12,12,-1,10,4,6,6,2,4,10,6,6,2,.0520062111318111,.5541312098503113,.1916636973619461,0,2,1,4,6,9,-1,3,4,2,9,3,.0120855299755931,.4032655954360962,.6644591093063354,0,2,11,3,2,5,-1,11,3,1,5,2,14687820112158079e-21,.3535977900028229,.5709382891654968,0,2,7,3,2,5,-1,8,3,1,5,2,7139518857002258e-21,.3037444949150085,.5610269904136658,0,2,10,14,2,3,-1,10,15,2,1,3,-.0046001640148460865,.7181087136268616,.4580326080322266,0,2,5,12,6,2,-1,8,12,3,2,2,.0020058949012309313,.5621951818466187,.2953684031963348,0,2,9,14,2,3,-1,9,15,2,1,3,.004505027085542679,.4615387916564941,.7619017958641052,0,2,4,11,12,6,-1,4,14,12,3,2,.0117468303069472,.5343837141990662,.1772529035806656,0,2,11,11,5,9,-1,11,14,5,3,3,-.0583163388073444,.1686245948076248,.5340772271156311,0,2,6,15,3,2,-1,6,16,3,1,2,.00023629379575140774,.3792056143283844,.6026803851127625,0,2,11,0,3,5,-1,12,0,1,5,3,-.007815618067979813,.151286706328392,.5324323773384094,0,2,5,5,6,7,-1,8,5,3,7,2,-.0108761601150036,.2081822007894516,.5319945216178894,0,2,13,0,1,9,-1,13,3,1,3,3,-.0027745519764721394,.4098246991634369,.5210328102111816,0,3,3,2,4,8,-1,3,2,2,4,2,5,6,2,4,2,-.0007827638182789087,.5693274140357971,.3478842079639435,0,2,13,12,4,6,-1,13,14,4,2,3,.0138704096898437,.5326750874519348,.2257698029279709,0,2,3,12,4,6,-1,3,14,4,2,3,-.0236749108880758,.1551305055618286,.5200707912445068,0,2,13,11,3,4,-1,13,13,3,2,2,-14879409718560055e-21,.5500566959381104,.3820176124572754,0,2,4,4,4,3,-1,4,5,4,1,3,.00361906411126256,.4238683879375458,.6639748215675354,0,2,7,5,11,8,-1,7,9,11,4,2,-.0198171101510525,.2150038033723831,.5382357835769653,0,2,7,8,3,4,-1,8,8,1,4,3,-.0038154039066284895,.6675711274147034,.4215297102928162,0,2,9,1,6,1,-1,11,1,2,1,3,-.0049775829538702965,.2267289012670517,.5386328101158142,0,2,5,5,3,3,-1,5,6,3,1,3,.002244102070108056,.4308691024780273,.6855735778808594,0,3,0,9,20,6,-1,10,9,10,3,2,0,12,10,3,2,.0122824599966407,.5836614966392517,.3467479050159454,0,2,8,6,3,5,-1,9,6,1,5,3,-.002854869933798909,.7016944885253906,.4311453998088837,0,2,11,0,1,3,-1,11,1,1,1,3,-.0037875669077038765,.2895345091819763,.5224946141242981,0,2,4,2,4,2,-1,4,3,4,1,2,-.0012201230274513364,.2975570857524872,.5481644868850708,0,2,12,6,4,3,-1,12,7,4,1,3,.010160599835217,.4888817965984345,.8182697892189026,0,2,5,0,6,4,-1,7,0,2,4,3,-.0161745697259903,.1481492966413498,.5239992737770081,0,2,9,7,3,8,-1,10,7,1,8,3,.0192924607545137,.4786309897899628,.7378190755844116,0,2,9,7,2,2,-1,10,7,1,2,2,-.003247953951358795,.7374222874641418,.4470643997192383,0,3,6,7,14,4,-1,13,7,7,2,2,6,9,7,2,2,-.009380348026752472,.3489154875278473,.5537996292114258,0,2,0,5,3,6,-1,0,7,3,2,3,-.0126061299815774,.2379686981439591,.5315443277359009,0,2,13,11,3,4,-1,13,13,3,2,2,-.0256219301372766,.1964688003063202,.5138769745826721,0,2,4,11,3,4,-1,4,13,3,2,2,-7574149640277028e-20,.5590522885322571,.3365853130817413,0,3,5,9,12,8,-1,11,9,6,4,2,5,13,6,4,2,-.0892108827829361,.0634046569466591,.516263484954834,0,2,9,12,1,3,-1,9,13,1,1,3,-.002767048077657819,.732346773147583,.4490706026554108,0,2,10,15,2,4,-1,10,17,2,2,2,.0002715257869567722,.411483496427536,.5985518097877502,24.52787971496582,51,0,2,7,7,6,1,-1,9,7,2,1,3,.001478621968999505,.266354501247406,.6643316745758057,0,3,12,3,6,6,-1,15,3,3,3,2,12,6,3,3,2,-.001874165958724916,.6143848896026611,.2518512904644013,0,2,0,4,10,6,-1,0,6,10,2,3,-.001715100952424109,.5766341090202332,.2397463023662567,0,3,8,3,8,14,-1,12,3,4,7,2,8,10,4,7,2,-.0018939269939437509,.5682045817375183,.2529144883155823,0,2,4,4,7,15,-1,4,9,7,5,3,-.005300605203956366,.1640675961971283,.5556079745292664,0,3,12,2,6,8,-1,15,2,3,4,2,12,6,3,4,2,-.0466625317931175,.6123154163360596,.4762830138206482,0,3,2,2,6,8,-1,2,2,3,4,2,5,6,3,4,2,-.000794313324149698,.5707858800888062,.2839404046535492,0,2,2,13,18,7,-1,8,13,6,7,3,.0148916700854898,.4089672863483429,.6006367206573486,0,3,4,3,8,14,-1,4,3,4,7,2,8,10,4,7,2,-.0012046529445797205,.5712450742721558,.2705289125442505,0,2,18,1,2,6,-1,18,3,2,2,3,.006061938125640154,.526250422000885,.3262225985527039,0,2,9,11,2,3,-1,9,12,2,1,3,-.0025286648888140917,.6853830814361572,.4199256896972656,0,2,18,1,2,6,-1,18,3,2,2,3,-.005901021882891655,.3266282081604004,.5434812903404236,0,2,0,1,2,6,-1,0,3,2,2,3,.005670276004821062,.5468410849571228,.2319003939628601,0,2,1,5,18,6,-1,1,7,18,2,3,-.003030410036444664,.557066798210144,.2708238065242767,0,2,0,2,6,7,-1,3,2,3,7,2,.002980364952236414,.3700568974018097,.5890625715255737,0,2,7,3,6,14,-1,7,10,6,7,2,-.0758405104279518,.2140070050954819,.5419948101043701,0,2,3,7,13,10,-1,3,12,13,5,2,.0192625392228365,.5526772141456604,.2726590037345886,0,2,11,15,2,2,-1,11,16,2,1,2,.00018888259364757687,.3958011865615845,.6017209887504578,0,3,2,11,16,4,-1,2,11,8,2,2,10,13,8,2,2,.0293695498257875,.5241373777389526,.1435758024454117,0,3,13,7,6,4,-1,16,7,3,2,2,13,9,3,2,2,.0010417619487270713,.3385409116744995,.5929983258247375,0,2,6,10,3,9,-1,6,13,3,3,3,.0026125640142709017,.5485377907752991,.3021597862243652,0,2,14,6,1,6,-1,14,9,1,3,2,.0009697746718302369,.3375276029109955,.553203284740448,0,2,5,10,4,1,-1,7,10,2,1,2,.0005951265920884907,.563174307346344,.3359399139881134,0,2,3,8,15,5,-1,8,8,5,5,3,-.1015655994415283,.0637350380420685,.5230425000190735,0,2,1,6,5,4,-1,1,8,5,2,2,.0361566990613937,.5136963129043579,.1029528975486755,0,2,3,1,17,6,-1,3,3,17,2,3,.003462414024397731,.3879320025444031,.5558289289474487,0,2,6,7,8,2,-1,10,7,4,2,2,.0195549800992012,.5250086784362793,.1875859946012497,0,2,9,7,3,2,-1,10,7,1,2,3,-.0023121440317481756,.667202889919281,.4679641127586365,0,2,8,7,3,2,-1,9,7,1,2,3,-.001860528951510787,.7163379192352295,.4334670901298523,0,2,8,9,4,2,-1,8,10,4,1,2,-.0009402636205777526,.302136093378067,.5650203227996826,0,2,8,8,4,3,-1,8,9,4,1,3,-.005241833161562681,.1820009052753449,.5250256061553955,0,2,9,5,6,4,-1,9,5,3,4,2,.00011729019752237946,.3389188051223755,.544597327709198,0,2,8,13,4,3,-1,8,14,4,1,3,.0011878840159624815,.4085349142551422,.6253563165664673,0,3,4,7,12,6,-1,10,7,6,3,2,4,10,6,3,2,-.0108813596889377,.3378399014472961,.5700082778930664,0,2,8,14,4,3,-1,8,15,4,1,3,.0017354859737679362,.4204635918140411,.6523038744926453,0,2,9,7,3,3,-1,9,8,3,1,3,-.00651190523058176,.2595216035842896,.5428143739700317,0,2,7,4,3,8,-1,8,4,1,8,3,-.0012136430013924837,.6165143847465515,.3977893888950348,0,2,10,0,3,6,-1,11,0,1,6,3,-.010354240424931,.1628028005361557,.5219504833221436,0,2,6,3,4,8,-1,8,3,2,8,2,.0005585883045569062,.3199650943279266,.5503574013710022,0,2,14,3,6,13,-1,14,3,3,13,2,.0152996499091387,.4103994071483612,.6122388243675232,0,2,8,13,3,6,-1,8,16,3,3,2,-.021588210016489,.103491298854351,.519738495349884,0,2,14,3,6,13,-1,14,3,3,13,2,-.1283462941646576,.8493865132331848,.4893102943897247,0,3,0,7,10,4,-1,0,7,5,2,2,5,9,5,2,2,-.0022927189711481333,.3130157887935638,.5471575260162354,0,2,14,3,6,13,-1,14,3,3,13,2,.0799151062965393,.4856320917606354,.6073989272117615,0,2,0,3,6,13,-1,3,3,3,13,2,-.0794410929083824,.8394674062728882,.462453305721283,0,2,9,1,4,1,-1,9,1,2,1,2,-.00528000108897686,.1881695985794067,.5306698083877563,0,2,8,0,2,1,-1,9,0,1,1,2,.0010463109938427806,.5271229147911072,.2583065927028656,0,3,10,16,4,4,-1,12,16,2,2,2,10,18,2,2,2,.00026317298761568964,.4235304892063141,.5735440850257874,0,2,9,6,2,3,-1,10,6,1,3,2,-.0036173160187900066,.6934396028518677,.4495444893836975,0,2,4,5,12,2,-1,8,5,4,2,3,.0114218797534704,.590092122554779,.4138193130493164,0,2,8,7,3,5,-1,9,7,1,5,3,-.0019963278900831938,.6466382741928101,.4327239990234375,27.153350830078125,56,0,2,6,4,8,6,-1,6,6,8,2,3,-.00996912457048893,.6142324209213257,.2482212036848068,0,2,9,5,2,12,-1,9,11,2,6,2,.0007307305932044983,.5704951882362366,.2321965992450714,0,2,4,6,6,8,-1,4,10,6,4,2,.0006404530140571296,.2112251967191696,.5814933180809021,0,2,12,2,8,5,-1,12,2,4,5,2,.004542401991784573,.2950482070446014,.586631178855896,0,2,0,8,18,3,-1,0,9,18,1,3,9247744310414419e-20,.2990990877151489,.5791326761245728,0,2,8,12,4,8,-1,8,16,4,4,2,-.008660314604640007,.2813029885292053,.5635542273521423,0,2,0,2,8,5,-1,4,2,4,5,2,.008051581680774689,.3535369038581848,.6054757237434387,0,2,13,11,3,4,-1,13,13,3,2,2,.00043835240649059415,.5596532225608826,.2731510996818543,0,2,5,11,6,1,-1,7,11,2,1,3,-981689736363478e-19,.5978031754493713,.3638561069965363,0,2,11,3,3,1,-1,12,3,1,1,3,-.0011298790341243148,.2755252122879028,.5432729125022888,0,2,7,13,5,3,-1,7,14,5,1,3,.006435615010559559,.4305641949176788,.7069833278656006,0,2,11,11,7,6,-1,11,14,7,3,2,-.0568293295800686,.2495242953300476,.5294997096061707,0,2,2,11,7,6,-1,2,14,7,3,2,.004066816996783018,.5478553175926208,.2497723996639252,0,2,12,14,2,6,-1,12,16,2,2,3,481647984997835e-19,.3938601016998291,.5706356167793274,0,2,8,14,3,3,-1,8,15,3,1,3,.00617950176820159,.440760612487793,.7394766807556152,0,2,11,0,3,5,-1,12,0,1,5,3,.006498575210571289,.5445243120193481,.2479152977466583,0,2,6,1,4,9,-1,8,1,2,9,2,-.0010211090557277203,.2544766962528229,.5338971018791199,0,2,10,3,6,1,-1,12,3,2,1,3,-.005424752831459045,.2718858122825623,.5324069261550903,0,2,8,8,3,4,-1,8,10,3,2,2,-.0010559899965301156,.3178288042545319,.553450882434845,0,2,8,12,4,2,-1,8,13,4,1,2,.0006646580877713859,.4284219145774841,.6558194160461426,0,2,5,18,4,2,-1,5,19,4,1,2,-.00027524109464138746,.5902860760688782,.3810262978076935,0,2,2,1,18,6,-1,2,3,18,2,3,.004229320213198662,.381648987531662,.5709385871887207,0,2,6,0,3,2,-1,7,0,1,2,3,-.0032868210691958666,.1747743934392929,.5259544253349304,0,3,13,8,6,2,-1,16,8,3,1,2,13,9,3,1,2,.0001561187964398414,.3601722121238709,.5725612044334412,0,2,6,10,3,6,-1,6,13,3,3,2,-7362138148891972e-21,.540185809135437,.3044497072696686,0,3,0,13,20,4,-1,10,13,10,2,2,0,15,10,2,2,-.014767250046134,.3220770061016083,.5573434829711914,0,2,7,7,6,5,-1,9,7,2,5,3,.0244895908981562,.4301528036594391,.6518812775611877,0,2,11,0,2,2,-1,11,1,2,1,2,-.000376520911231637,.356458306312561,.5598236918449402,0,3,1,8,6,2,-1,1,8,3,1,2,4,9,3,1,2,736576885174145e-20,.3490782976150513,.556189775466919,0,3,0,2,20,2,-1,10,2,10,1,2,0,3,10,1,2,-.0150999398902059,.1776272058486939,.5335299968719482,0,2,7,14,5,3,-1,7,15,5,1,3,-.0038316650316119194,.6149687767028809,.4221394062042236,0,3,7,13,6,6,-1,10,13,3,3,2,7,16,3,3,2,.0169254001230001,.5413014888763428,.2166585028171539,0,2,9,12,2,3,-1,9,13,2,1,3,-.003047785023227334,.6449490785598755,.4354617893695831,0,2,16,11,1,6,-1,16,13,1,2,3,.003214058931916952,.5400155186653137,.3523217141628265,0,2,3,11,1,6,-1,3,13,1,2,3,-.004002320114523172,.2774524092674255,.5338417291641235,0,3,4,4,14,12,-1,11,4,7,6,2,4,10,7,6,2,.0074182129465043545,.567673921585083,.3702817857265472,0,2,5,4,3,3,-1,5,5,3,1,3,-.008876458741724491,.7749221920967102,.4583688974380493,0,2,12,3,3,3,-1,13,3,1,3,3,.002731173997744918,.5338721871376038,.3996661007404327,0,2,6,6,8,3,-1,6,7,8,1,3,-.0025082379579544067,.5611963272094727,.377749890089035,0,2,12,3,3,3,-1,13,3,1,3,3,-.008054107427597046,.291522890329361,.5179182887077332,0,3,3,1,4,10,-1,3,1,2,5,2,5,6,2,5,2,-.0009793881326913834,.5536432862281799,.3700192868709564,0,2,5,7,10,2,-1,5,7,5,2,2,-.005874590948224068,.3754391074180603,.5679376125335693,0,2,8,7,3,3,-1,9,7,1,3,3,-.00449367193505168,.7019699215888977,.4480949938297272,0,2,15,12,2,3,-1,15,13,2,1,3,-.00543892290443182,.2310364991426468,.5313386917114258,0,2,7,8,3,4,-1,8,8,1,4,3,-.0007509464048780501,.5864868760108948,.4129343032836914,0,2,13,4,1,12,-1,13,10,1,6,2,14528800420521293e-21,.3732407093048096,.5619621276855469,0,3,4,5,12,12,-1,4,5,6,6,2,10,11,6,6,2,.0407580696046352,.5312091112136841,.2720521986484528,0,2,7,14,7,3,-1,7,15,7,1,3,.006650593131780624,.4710015952587128,.6693493723869324,0,2,3,12,2,3,-1,3,13,2,1,3,.0045759351924061775,.5167819261550903,.1637275964021683,0,3,3,2,14,2,-1,10,2,7,1,2,3,3,7,1,2,.0065269311890006065,.5397608876228333,.2938531935214996,0,2,0,1,3,10,-1,1,1,1,10,3,-.0136603796854615,.7086488008499146,.453220009803772,0,2,9,0,6,5,-1,11,0,2,5,3,.0273588690906763,.5206481218338013,.3589231967926025,0,2,5,7,6,2,-1,8,7,3,2,2,.0006219755159690976,.3507075905799866,.5441123247146606,0,2,7,1,6,10,-1,7,6,6,5,2,-.0033077080734074116,.5859522819519043,.402489185333252,0,2,1,1,18,3,-1,7,1,6,3,3,-.0106311095878482,.6743267178535461,.4422602951526642,0,2,16,3,3,6,-1,16,5,3,2,3,.0194416493177414,.5282716155052185,.1797904968261719,34.55411148071289,71,0,2,6,3,7,6,-1,6,6,7,3,2,-.005505216773599386,.5914731025695801,.2626559138298035,0,2,4,7,12,2,-1,8,7,4,2,3,.001956227933987975,.2312581986188889,.5741627216339111,0,2,0,4,17,10,-1,0,9,17,5,2,-.008892478421330452,.1656530052423477,.5626654028892517,0,2,3,4,15,16,-1,3,12,15,8,2,.0836383774876595,.5423449873924255,.1957294940948486,0,2,7,15,6,4,-1,7,17,6,2,2,.0012282270472496748,.3417904078960419,.5992503762245178,0,2,15,2,4,9,-1,15,2,2,9,2,.0057629169896245,.3719581961631775,.6079903841018677,0,2,2,3,3,2,-1,2,4,3,1,2,-.0016417410224676132,.2577486038208008,.5576915740966797,0,2,13,6,7,9,-1,13,9,7,3,3,.0034113149158656597,.2950749099254608,.5514171719551086,0,2,8,11,4,3,-1,8,12,4,1,3,-.0110693201422691,.7569358944892883,.4477078914642334,0,3,0,2,20,6,-1,10,2,10,3,2,0,5,10,3,2,.0348659716546535,.5583708882331848,.2669621109962463,0,3,3,2,6,10,-1,3,2,3,5,2,6,7,3,5,2,.0006570109981112182,.5627313256263733,.2988890111446381,0,2,13,10,3,4,-1,13,12,3,2,2,-.0243391301482916,.2771185040473938,.5108863115310669,0,2,4,10,3,4,-1,4,12,3,2,2,.0005943520227447152,.5580651760101318,.3120341897010803,0,2,7,5,6,3,-1,9,5,2,3,3,.0022971509024500847,.3330250084400177,.5679075717926025,0,2,7,6,6,8,-1,7,10,6,4,2,-.0037801829166710377,.2990534901618958,.5344808101654053,0,2,0,11,20,6,-1,0,14,20,3,2,-.13420669734478,.1463858932256699,.5392568111419678,0,3,4,13,4,6,-1,4,13,2,3,2,6,16,2,3,2,.0007522454834543169,.3746953904628754,.5692734718322754,0,3,6,0,8,12,-1,10,0,4,6,2,6,6,4,6,2,-.040545541793108,.2754747867584229,.5484297871589661,0,2,2,0,15,2,-1,2,1,15,1,2,.0012572970008477569,.3744584023952484,.5756075978279114,0,2,9,12,2,3,-1,9,13,2,1,3,-.007424994837492704,.7513859272003174,.4728231132030487,0,2,3,12,1,2,-1,3,13,1,1,2,.0005090812919661403,.540489673614502,.2932321131229401,0,2,9,11,2,3,-1,9,12,2,1,3,-.001280845026485622,.6169779896736145,.4273349046707153,0,2,7,3,3,1,-1,8,3,1,1,3,-.0018348860321566463,.2048496007919312,.5206472277641296,0,2,17,7,3,6,-1,17,9,3,2,3,.0274848695844412,.5252984762191772,.1675522029399872,0,2,7,2,3,2,-1,8,2,1,2,3,.0022372419480234385,.5267782807350159,.2777658104896545,0,2,11,4,5,3,-1,11,5,5,1,3,-.008863529190421104,.69545578956604,.4812048971652985,0,2,4,4,5,3,-1,4,5,5,1,3,.004175397101789713,.4291887879371643,.6349195837974548,0,2,19,3,1,2,-1,19,4,1,1,2,-.0017098189564421773,.2930536866188049,.5361248850822449,0,2,5,5,4,3,-1,5,6,4,1,3,.006532854866236448,.4495325088500977,.7409694194793701,0,2,17,7,3,6,-1,17,9,3,2,3,-.009537290781736374,.3149119913578033,.5416501760482788,0,2,0,7,3,6,-1,0,9,3,2,3,.0253109894692898,.5121892094612122,.1311707943677902,0,2,14,2,6,9,-1,14,5,6,3,3,.0364609695971012,.5175911784172058,.2591339945793152,0,2,0,4,5,6,-1,0,6,5,2,3,.0208543296903372,.5137140154838562,.1582316011190414,0,2,10,5,6,2,-1,12,5,2,2,3,-.0008720774785615504,.5574309825897217,.439897894859314,0,2,4,5,6,2,-1,6,5,2,2,3,-15227000403683633e-21,.5548940896987915,.3708069920539856,0,2,8,1,4,6,-1,8,3,4,2,3,-.0008431650931015611,.3387419879436493,.5554211139678955,0,2,0,2,3,6,-1,0,4,3,2,3,.0036037859972566366,.5358061790466309,.3411171138286591,0,2,6,6,8,3,-1,6,7,8,1,3,-.006805789191275835,.6125202775001526,.4345862865447998,0,2,0,1,5,9,-1,0,4,5,3,3,-.0470216609537601,.2358165979385376,.519373893737793,0,2,16,0,4,15,-1,16,0,2,15,2,-.0369541086256504,.7323111295700073,.4760943949222565,0,2,1,10,3,2,-1,1,11,3,1,2,.0010439479956403375,.5419455170631409,.3411330878734589,0,2,14,4,1,10,-1,14,9,1,5,2,-.00021050689974799752,.2821694016456604,.5554947257041931,0,2,0,1,4,12,-1,2,1,2,12,2,-.0808315873146057,.9129930138587952,.4697434902191162,0,2,11,11,4,2,-1,11,11,2,2,2,-.0003657905908767134,.6022670269012451,.3978292942047119,0,2,5,11,4,2,-1,7,11,2,2,2,-.00012545920617412776,.5613213181495667,.384553998708725,0,2,3,8,15,5,-1,8,8,5,5,3,-.0687864869832993,.2261611968278885,.5300496816635132,0,2,0,0,6,10,-1,3,0,3,10,2,.0124157899990678,.4075691998004913,.5828812122344971,0,2,11,4,3,2,-1,12,4,1,2,3,-.004717481788247824,.2827253937721252,.5267757773399353,0,2,8,12,3,8,-1,8,16,3,4,2,.0381368584930897,.5074741244316101,.1023615971207619,0,2,8,14,5,3,-1,8,15,5,1,3,-.0028168049175292253,.6169006824493408,.4359692931175232,0,2,7,14,4,3,-1,7,15,4,1,3,.008130360394716263,.4524433016777039,.76060950756073,0,2,11,4,3,2,-1,12,4,1,2,3,.006005601957440376,.5240408778190613,.185971200466156,0,3,3,15,14,4,-1,3,15,7,2,2,10,17,7,2,2,.0191393196582794,.5209379196166992,.2332071959972382,0,3,2,2,16,4,-1,10,2,8,2,2,2,4,8,2,2,.0164457596838474,.5450702905654907,.3264234960079193,0,2,0,8,6,12,-1,3,8,3,12,2,-.0373568907380104,.6999046802520752,.4533241987228394,0,2,5,7,10,2,-1,5,7,5,2,2,-.0197279006242752,.2653664946556091,.54128098487854,0,2,9,7,2,5,-1,10,7,1,5,2,.0066972579807043076,.4480566084384918,.7138652205467224,0,3,13,7,6,4,-1,16,7,3,2,2,13,9,3,2,2,.0007445752853527665,.4231350123882294,.5471320152282715,0,2,0,13,8,2,-1,0,14,8,1,2,.0011790640419349074,.5341702103614807,.3130455017089844,0,3,13,7,6,4,-1,16,7,3,2,2,13,9,3,2,2,.0349806100130081,.5118659734725952,.343053013086319,0,3,1,7,6,4,-1,1,7,3,2,2,4,9,3,2,2,.0005685979267582297,.3532187044620514,.5468639731407166,0,2,12,6,1,12,-1,12,12,1,6,2,-.0113406497985125,.2842353880405426,.5348700881004333,0,2,9,5,2,6,-1,10,5,1,6,2,-.00662281084805727,.6883640289306641,.4492664933204651,0,2,14,12,2,3,-1,14,13,2,1,3,-.008016033098101616,.1709893941879273,.5224308967590332,0,2,4,12,2,3,-1,4,13,2,1,3,.0014206819469109178,.5290846228599548,.299338310956955,0,2,8,12,4,3,-1,8,13,4,1,3,-.002780171111226082,.6498854160308838,.4460499882698059,0,3,5,2,2,4,-1,5,2,1,2,2,6,4,1,2,2,-.0014747589593753219,.3260438144207001,.5388113260269165,0,2,5,5,11,3,-1,5,6,11,1,3,-.0238303393125534,.7528941035270691,.4801219999790192,0,2,7,6,4,12,-1,7,12,4,6,2,.00693697901442647,.5335165858268738,.3261427879333496,0,2,12,13,8,5,-1,12,13,4,5,2,.008280625566840172,.458039402961731,.5737829804420471,0,2,7,6,1,12,-1,7,12,1,6,2,-.0104395002126694,.2592320144176483,.5233827829360962,39.1072883605957,80,0,2,1,2,6,3,-1,4,2,3,3,2,.0072006587870419025,.325888603925705,.6849808096885681,0,3,9,5,6,10,-1,12,5,3,5,2,9,10,3,5,2,-.002859358908608556,.5838881134986877,.2537829875946045,0,3,5,5,8,12,-1,5,5,4,6,2,9,11,4,6,2,.0006858052802272141,.5708081722259521,.2812424004077911,0,2,0,7,20,6,-1,0,9,20,2,3,.007958019152283669,.2501051127910614,.5544260740280151,0,2,4,2,2,2,-1,4,3,2,1,2,-.0012124150525778532,.2385368049144745,.5433350205421448,0,2,4,18,12,2,-1,8,18,4,2,3,.00794261321425438,.3955070972442627,.6220757961273193,0,2,7,4,4,16,-1,7,12,4,8,2,.0024630590341985226,.5639708042144775,.2992357909679413,0,2,7,6,7,8,-1,7,10,7,4,2,-.006039659958332777,.218651294708252,.541167676448822,0,2,6,3,3,1,-1,7,3,1,1,3,-.0012988339876756072,.23507060110569,.5364584922790527,0,2,11,15,2,4,-1,11,17,2,2,2,.00022299369447864592,.380411297082901,.572960615158081,0,2,3,5,4,8,-1,3,9,4,4,2,.0014654280385002494,.2510167956352234,.5258268713951111,0,2,7,1,6,12,-1,7,7,6,6,2,-.0008121004211716354,.5992823839187622,.3851158916950226,0,2,4,6,6,2,-1,6,6,2,2,3,-.0013836020370945334,.5681396126747131,.3636586964130402,0,2,16,4,4,6,-1,16,6,4,2,3,-.0279364492744207,.1491317003965378,.5377560257911682,0,2,3,3,5,2,-1,3,4,5,1,2,-.0004691955109592527,.3692429959774017,.5572484731674194,0,2,9,11,2,3,-1,9,12,2,1,3,-.004982965998351574,.6758509278297424,.4532504081726074,0,2,2,16,4,2,-1,2,17,4,1,2,.001881530974060297,.5368022918701172,.2932539880275726,0,3,7,13,6,6,-1,10,13,3,3,2,7,16,3,3,2,-.0190675500780344,.1649377048015595,.5330067276954651,0,2,7,0,3,4,-1,8,0,1,4,3,-.0046906559728085995,.1963925957679749,.5119361877441406,0,2,8,15,4,3,-1,8,16,4,1,3,.005977713968604803,.467117190361023,.7008398175239563,0,2,0,4,4,6,-1,0,6,4,2,3,-.0333031304180622,.1155416965484619,.5104162096977234,0,2,5,6,12,3,-1,9,6,4,3,3,.0907441079616547,.5149660110473633,.1306173056364059,0,2,7,6,6,14,-1,9,6,2,14,3,.0009355589863844216,.3605481088161469,.543985903263092,0,2,9,7,3,3,-1,10,7,1,3,3,.0149016501381993,.4886212050914764,.7687569856643677,0,2,6,12,2,4,-1,6,14,2,2,2,.0006159411859698594,.5356813073158264,.3240939080715179,0,2,10,12,7,6,-1,10,14,7,2,3,-.0506709888577461,.1848621964454651,.5230404138565063,0,2,1,0,15,2,-1,1,1,15,1,2,.0006866574985906482,.3840579986572266,.5517945885658264,0,2,14,0,6,6,-1,14,0,3,6,2,.008371243253350258,.4288564026355743,.6131753921508789,0,2,5,3,3,1,-1,6,3,1,1,3,-.0012953069526702166,.2913674116134644,.528073787689209,0,2,14,0,6,6,-1,14,0,3,6,2,-.0419416800141335,.7554799914360046,.4856030941009522,0,2,0,3,20,10,-1,0,8,20,5,2,-.0235293805599213,.2838279902935028,.5256081223487854,0,2,14,0,6,6,-1,14,0,3,6,2,.0408574491739273,.4870935082435608,.6277297139167786,0,2,0,0,6,6,-1,3,0,3,6,2,-.0254068691283464,.7099707722663879,.4575029015541077,0,2,19,15,1,2,-1,19,16,1,1,2,-.00041415440500713885,.4030886888504028,.5469412207603455,0,2,0,2,4,8,-1,2,2,2,8,2,.0218241196125746,.4502024054527283,.6768701076507568,0,3,2,1,18,4,-1,11,1,9,2,2,2,3,9,2,2,.0141140399500728,.5442860722541809,.3791700005531311,0,2,8,12,1,2,-1,8,13,1,1,2,6721459067193791e-20,.4200463891029358,.5873476266860962,0,3,5,2,10,6,-1,10,2,5,3,2,5,5,5,3,2,-.00794176384806633,.3792561888694763,.5585265755653381,0,2,9,7,2,4,-1,10,7,1,4,2,-.00721444096416235,.7253103852272034,.4603548943996429,0,2,9,7,3,3,-1,10,7,1,3,3,.002581733977422118,.4693301916122437,.5900238752365112,0,2,4,5,12,8,-1,8,5,4,8,3,.1340931951999664,.5149213075637817,.1808844953775406,0,2,15,15,4,3,-1,15,16,4,1,3,.0022962710354477167,.5399743914604187,.3717867136001587,0,2,8,18,3,1,-1,9,18,1,1,3,-.002157584996894002,.2408495992422104,.5148863792419434,0,2,9,13,4,3,-1,9,14,4,1,3,-.004919618833810091,.6573588252067566,.4738740026950836,0,2,7,13,4,3,-1,7,14,4,1,3,.0016267469618469477,.4192821979522705,.6303114295005798,0,2,19,15,1,2,-1,19,16,1,1,2,.00033413388882763684,.5540298223495483,.3702101111412048,0,2,0,15,8,4,-1,0,17,8,2,2,-.0266980808228254,.1710917949676514,.5101410746574402,0,2,9,3,6,4,-1,11,3,2,4,3,-.0305618792772293,.1904218047857285,.5168793797492981,0,2,8,14,4,3,-1,8,15,4,1,3,.002851154888048768,.4447506964206696,.6313853859901428,0,2,3,14,14,6,-1,3,16,14,2,3,-.0362114794552326,.2490727007389069,.5377349257469177,0,2,6,3,6,6,-1,6,6,6,3,2,-.002411518944427371,.5381243228912354,.3664236962795258,0,2,5,11,10,6,-1,5,14,10,3,2,-.0007725320174358785,.5530232191085815,.3541550040245056,0,2,3,10,3,4,-1,4,10,1,4,3,.0002948172914329916,.4132699072360992,.5667243003845215,0,2,13,9,2,2,-1,13,9,1,2,2,-.006233456078916788,.0987872332334518,.5198668837547302,0,2,5,3,6,4,-1,7,3,2,4,3,-.0262747295200825,.0911274924874306,.5028107166290283,0,2,9,7,3,3,-1,10,7,1,3,3,.005321226082742214,.4726648926734924,.6222720742225647,0,2,2,12,2,3,-1,2,13,2,1,3,-.004112905822694302,.2157457023859024,.5137804746627808,0,2,9,8,3,12,-1,9,12,3,4,3,.0032457809429615736,.5410770773887634,.3721776902675629,0,3,3,14,4,6,-1,3,14,2,3,2,5,17,2,3,2,-.0163597092032433,.7787874937057495,.4685291945934296,0,2,16,15,2,2,-1,16,16,2,1,2,.00032166109303943813,.5478987097740173,.4240373969078064,0,2,2,15,2,2,-1,2,16,2,1,2,.000644524407107383,.5330560803413391,.3501324951648712,0,2,8,12,4,3,-1,8,13,4,1,3,-.0078909732401371,.6923521161079407,.4726569056510925,0,2,0,7,20,1,-1,10,7,10,1,2,.048336211591959,.50559002161026,.0757492035627365,0,2,7,6,8,3,-1,7,6,4,3,2,-.000751781277358532,.3783741891384125,.5538573861122131,0,2,5,7,8,2,-1,9,7,4,2,2,-.002495391061529517,.3081651031970978,.5359612107276917,0,2,9,7,3,5,-1,10,7,1,5,3,-.0022385010961443186,.663395881652832,.4649342894554138,0,2,8,7,3,5,-1,9,7,1,5,3,-.0017988430336117744,.6596844792366028,.4347187876701355,0,2,11,1,3,5,-1,12,1,1,5,3,.008786091580986977,.523183286190033,.2315579950809479,0,2,6,2,3,6,-1,7,2,1,6,3,.003671538084745407,.520425021648407,.2977376878261566,0,2,14,14,6,5,-1,14,14,3,5,2,-.0353364497423172,.7238878011703491,.4861505031585693,0,2,9,8,2,2,-1,9,9,2,1,2,-.0006918924045749009,.3105022013187408,.5229824781417847,0,2,10,7,1,3,-1,10,8,1,1,3,-.003394610946998,.3138968050479889,.5210173726081848,0,3,6,6,2,2,-1,6,6,1,1,2,7,7,1,1,2,.0009856928372755647,.4536580145359039,.6585097908973694,0,3,2,11,18,4,-1,11,11,9,2,2,2,13,9,2,2,-.0501631014049053,.1804454028606415,.5198916792869568,0,3,6,6,2,2,-1,6,6,1,1,2,7,7,1,1,2,-.0022367259953171015,.7255702018737793,.4651359021663666,0,2,0,15,20,2,-1,0,16,20,1,2,.0007432628772221506,.4412921071052551,.5898545980453491,0,2,4,14,2,3,-1,4,15,2,1,3,-.0009348518215119839,.3500052988529205,.5366017818450928,0,2,8,14,4,3,-1,8,15,4,1,3,.0174979399889708,.4912194907665253,.8315284848213196,0,2,8,7,2,3,-1,8,8,2,1,3,-.0015200000489130616,.3570275902748108,.537056028842926,0,2,9,10,2,3,-1,9,11,2,1,3,.0007800394087098539,.4353772103786469,.5967335104942322,50.61048126220703,103,0,2,5,4,10,4,-1,5,6,10,2,2,-.00999455526471138,.6162583231925964,.3054533004760742,0,3,9,7,6,4,-1,12,7,3,2,2,9,9,3,2,2,-.001108522992581129,.5818294882774353,.3155578076839447,0,2,4,7,3,6,-1,4,9,3,2,3,.001036438043229282,.2552052140235901,.5692911744117737,0,3,11,15,4,4,-1,13,15,2,2,2,11,17,2,2,2,.000682113110087812,.3685089945793152,.5934931039810181,0,2,7,8,4,2,-1,7,9,4,1,2,-.0006805734010413289,.2332392036914825,.5474792122840881,0,2,13,1,4,3,-1,13,1,2,3,2,.0002606878988444805,.325745701789856,.5667545795440674,0,3,5,15,4,4,-1,5,15,2,2,2,7,17,2,2,2,.0005160737200640142,.3744716942310333,.5845472812652588,0,2,9,5,4,7,-1,9,5,2,7,2,.0008500752155669034,.3420371115207672,.5522807240486145,0,2,5,6,8,3,-1,9,6,4,3,2,-.0018607829697430134,.2804419994354248,.5375424027442932,0,2,9,9,2,2,-1,9,10,2,1,2,-.001503397012129426,.2579050958156586,.5498952269554138,0,2,7,15,5,3,-1,7,16,5,1,3,.0023478909861296415,.4175156056880951,.6313710808753967,0,2,11,10,4,3,-1,11,10,2,3,2,-.00028880240279249847,.5865169763565063,.4052666127681732,0,2,6,9,8,10,-1,6,14,8,5,2,.008940547704696655,.5211141109466553,.231865406036377,0,2,10,11,6,2,-1,10,11,3,2,2,-.0193277392536402,.2753432989120483,.5241525769233704,0,2,4,11,6,2,-1,7,11,3,2,2,-.0002020206011366099,.5722978711128235,.3677195906639099,0,2,11,3,8,1,-1,11,3,4,1,2,.002117906929925084,.4466108083724976,.5542430877685547,0,2,6,3,3,2,-1,7,3,1,2,3,-.0017743760254234076,.2813253104686737,.5300959944725037,0,2,14,5,6,5,-1,14,5,3,5,2,.004223445896059275,.439970999956131,.5795428156852722,0,2,7,5,2,12,-1,7,11,2,6,2,-.0143752200528979,.2981117963790894,.5292059183120728,0,2,8,11,4,3,-1,8,12,4,1,3,-.0153491804376245,.7705215215682983,.4748171865940094,0,2,4,1,2,3,-1,5,1,1,3,2,15152279956964776e-21,.3718844056129456,.5576897263526917,0,2,18,3,2,6,-1,18,5,2,2,3,-.009129391983151436,.3615196049213409,.5286766886711121,0,2,0,3,2,6,-1,0,5,2,2,3,.0022512159775942564,.5364704728126526,.3486298024654388,0,2,9,12,2,3,-1,9,13,2,1,3,-.0049696918576955795,.6927651762962341,.4676836133003235,0,2,7,13,4,3,-1,7,14,4,1,3,-.0128290103748441,.7712153792381287,.4660735130310059,0,2,18,0,2,6,-1,18,2,2,2,3,-.009366006590425968,.3374983966350555,.5351287722587585,0,2,0,0,2,6,-1,0,2,2,2,3,.0032452319283038378,.5325189828872681,.3289610147476196,0,2,8,14,6,3,-1,8,15,6,1,3,-.0117235602810979,.6837652921676636,.4754300117492676,0,2,7,4,2,4,-1,8,4,1,4,2,2925794069597032e-20,.357208788394928,.5360502004623413,0,2,8,5,4,6,-1,8,7,4,2,3,-22244219508138485e-21,.5541427135467529,.3552064001560211,0,2,6,4,2,2,-1,7,4,1,2,2,.005088150966912508,.5070844292640686,.1256462037563324,0,3,3,14,14,4,-1,10,14,7,2,2,3,16,7,2,2,.0274296794086695,.5269560217857361,.1625818014144898,0,3,6,15,6,2,-1,6,15,3,1,2,9,16,3,1,2,-.00641428679227829,.7145588994026184,.4584197103977203,0,2,14,15,6,2,-1,14,16,6,1,2,.003347995923832059,.5398612022399902,.3494696915149689,0,2,2,12,12,8,-1,2,16,12,4,2,-.0826354920864105,.2439192980527878,.5160226225852966,0,2,7,7,7,2,-1,7,8,7,1,2,.0010261740535497665,.3886891901493073,.5767908096313477,0,2,0,2,18,2,-1,0,3,18,1,2,-.0016307090409100056,.3389458060264587,.5347700715065002,0,2,9,6,2,5,-1,9,6,1,5,2,.0024546680506318808,.4601413905620575,.638724684715271,0,2,7,5,3,8,-1,8,5,1,8,3,-.0009947651997208595,.5769879221916199,.4120396077632904,0,2,9,6,3,4,-1,10,6,1,4,3,.0154091902077198,.4878709018230438,.7089822292327881,0,2,4,13,3,2,-1,4,14,3,1,2,.001178440055809915,.5263553261756897,.2895244956016541,0,2,9,4,6,3,-1,11,4,2,3,3,-.0277019198983908,.149882897734642,.5219606757164001,0,2,5,4,6,3,-1,7,4,2,3,3,-.0295053999871016,.024893319234252,.4999816119670868,0,2,14,11,5,2,-1,14,12,5,1,2,.0004515943001024425,.5464622974395752,.4029662907123566,0,2,1,2,6,9,-1,3,2,2,9,3,.007177263963967562,.4271056950092316,.5866296887397766,0,2,14,6,6,13,-1,14,6,3,13,2,-.0741820484399796,.6874179244041443,.4919027984142304,0,3,3,6,14,8,-1,3,6,7,4,2,10,10,7,4,2,-.0172541607171297,.3370676040649414,.534873902797699,0,2,16,0,4,11,-1,16,0,2,11,2,.0148515598848462,.4626792967319489,.6129904985427856,0,3,3,4,12,12,-1,3,4,6,6,2,9,10,6,6,2,.0100020002573729,.5346122980117798,.3423453867435455,0,2,11,4,5,3,-1,11,5,5,1,3,.0020138120744377375,.4643830060958862,.5824304223060608,0,2,4,11,4,2,-1,4,12,4,1,2,.0015135470312088728,.5196396112442017,.2856149971485138,0,2,10,7,2,2,-1,10,7,1,2,2,.003138143103569746,.4838162958621979,.5958529710769653,0,2,8,7,2,2,-1,9,7,1,2,2,-.005145044066011906,.8920302987098694,.4741412103176117,0,2,9,17,3,2,-1,10,17,1,2,3,-.004473670851439238,.2033942937850952,.5337278842926025,0,2,5,6,3,3,-1,5,7,3,1,3,.001962847076356411,.457163393497467,.6725863218307495,0,2,10,0,3,3,-1,11,0,1,3,3,.005426045041531324,.5271108150482178,.2845670878887177,0,3,5,6,6,2,-1,5,6,3,1,2,8,7,3,1,2,.0004961146041750908,.4138312935829163,.5718597769737244,0,2,12,16,4,3,-1,12,17,4,1,3,.009372878819704056,.5225151181221008,.2804847061634064,0,2,3,12,3,2,-1,3,13,3,1,2,.0006050089723430574,.523676872253418,.3314523994922638,0,2,9,12,3,2,-1,9,13,3,1,2,.0005679255118593574,.4531059861183167,.6276971101760864,0,3,1,11,16,4,-1,1,11,8,2,2,9,13,8,2,2,.0246443394571543,.5130851864814758,.2017143964767456,0,2,12,4,3,3,-1,12,5,3,1,3,-.0102904504165053,.7786595225334167,.4876641035079956,0,2,4,4,5,3,-1,4,5,5,1,3,.002062941901385784,.4288598895072937,.5881264209747314,0,2,12,16,4,3,-1,12,17,4,1,3,-.005051948130130768,.3523977994918823,.5286008715629578,0,2,5,4,3,3,-1,5,5,3,1,3,-.0057692620903253555,.6841086149215698,.4588094055652618,0,2,9,0,2,2,-1,9,1,2,1,2,-.0004578994121402502,.356552004814148,.5485978126525879,0,2,8,9,4,2,-1,8,10,4,1,2,-.0007591883768327534,.336879312992096,.5254197120666504,0,2,8,8,4,3,-1,8,9,4,1,3,-.001773725962266326,.3422161042690277,.5454015135765076,0,2,0,13,6,3,-1,2,13,2,3,3,-.008561046794056892,.6533612012863159,.4485856890678406,0,2,16,14,3,2,-1,16,15,3,1,2,.0017277270089834929,.5307580232620239,.3925352990627289,0,2,1,18,18,2,-1,7,18,6,2,3,-.0281996093690395,.685745894908905,.4588584005832672,0,2,16,14,3,2,-1,16,15,3,1,2,-.001778110978193581,.4037851095199585,.5369856953620911,0,2,1,14,3,2,-1,1,15,3,1,2,.00033177141449414194,.539979875087738,.3705750107765198,0,2,7,14,6,3,-1,7,15,6,1,3,.0026385399978607893,.4665437042713165,.6452730894088745,0,2,5,14,8,3,-1,5,15,8,1,3,-.0021183069329708815,.5914781093597412,.4064677059650421,0,2,10,6,4,14,-1,10,6,2,14,2,-.0147732896730304,.3642038106918335,.5294762849807739,0,2,6,6,4,14,-1,8,6,2,14,2,-.0168154407292604,.2664231956005096,.5144972801208496,0,2,13,5,2,3,-1,13,6,2,1,3,-.006337014026939869,.6779531240463257,.4852097928524017,0,2,7,16,6,1,-1,9,16,2,1,3,-44560048991115764e-21,.5613964796066284,.4153054058551788,0,2,9,12,3,3,-1,9,13,3,1,3,-.0010240620467811823,.5964478254318237,.4566304087638855,0,2,7,0,3,3,-1,8,0,1,3,3,-.00231616897508502,.2976115047931671,.5188159942626953,0,2,4,0,16,18,-1,4,9,16,9,2,.5321757197380066,.5187839269638062,.220263198018074,0,2,1,1,16,14,-1,1,8,16,7,2,-.1664305031299591,.1866022944450378,.5060343146324158,0,2,3,9,15,4,-1,8,9,5,4,3,.112535297870636,.5212125182151794,.1185022965073586,0,2,6,12,7,3,-1,6,13,7,1,3,.009304686449468136,.4589937031269074,.6826149225234985,0,2,14,15,2,3,-1,14,16,2,1,3,-.004625509958714247,.3079940974712372,.5225008726119995,0,3,2,3,16,14,-1,2,3,8,7,2,10,10,8,7,2,-.1111646965146065,.2101044058799744,.5080801844596863,0,3,16,2,4,18,-1,18,2,2,9,2,16,11,2,9,2,-.0108884396031499,.5765355229377747,.4790464043617249,0,2,4,15,2,3,-1,4,16,2,1,3,.005856430158019066,.5065100193023682,.1563598960638046,0,3,16,2,4,18,-1,18,2,2,9,2,16,11,2,9,2,.0548543892800808,.49669149518013,.7230510711669922,0,2,1,1,8,3,-1,1,2,8,1,3,-.0111973397433758,.2194979041814804,.5098798274993896,0,2,8,11,4,3,-1,8,12,4,1,3,.004406907130032778,.4778401851654053,.6770902872085571,0,2,5,11,5,9,-1,5,14,5,3,3,-.0636652931571007,.1936362981796265,.5081024169921875,0,2,16,0,4,11,-1,16,0,2,11,2,-.009808149188756943,.599906325340271,.4810341000556946,0,2,7,0,6,1,-1,9,0,2,1,3,-.0021717099007219076,.3338333964347839,.5235472917556763,0,2,16,3,3,7,-1,17,3,1,7,3,-.0133155202493072,.6617069840431213,.4919213056564331,0,2,1,3,3,7,-1,2,3,1,7,3,.002544207964092493,.4488744139671326,.6082184910774231,0,2,7,8,6,12,-1,7,12,6,4,3,.0120378397405148,.540939211845398,.3292432129383087,0,2,0,0,4,11,-1,2,0,2,11,2,-.0207010507583618,.6819120049476624,.4594995975494385,0,2,14,0,6,20,-1,14,0,3,20,2,.0276082791388035,.4630792140960693,.5767282843589783,0,2,0,3,1,2,-1,0,4,1,1,2,.0012370620388537645,.5165379047393799,.2635016143321991,0,3,5,5,10,8,-1,10,5,5,4,2,5,9,5,4,2,-.037669338285923,.2536393105983734,.5278980135917664,0,3,4,7,12,4,-1,4,7,6,2,2,10,9,6,2,2,-.0018057259730994701,.3985156118869782,.5517500042915344,54.62007141113281,111,0,2,2,1,6,4,-1,5,1,3,4,2,.004429902881383896,.2891018092632294,.633522629737854,0,3,9,7,6,4,-1,12,7,3,2,2,9,9,3,2,2,-.0023813319858163595,.621178925037384,.3477487862110138,0,2,5,6,2,6,-1,5,9,2,3,2,.0022915711160749197,.2254412025213242,.5582118034362793,0,3,9,16,6,4,-1,12,16,3,2,2,9,18,3,2,2,.0009945794008672237,.3711710870265961,.5930070877075195,0,2,9,4,2,12,-1,9,10,2,6,2,.0007716466789133847,.565172016620636,.334799587726593,0,2,7,1,6,18,-1,9,1,2,18,3,-.001138641033321619,.3069126009941101,.5508630871772766,0,2,4,12,12,2,-1,8,12,4,2,3,-.0001640303962631151,.576282799243927,.3699047863483429,0,2,8,8,6,2,-1,8,9,6,1,2,29793529392918572e-21,.2644244134426117,.5437911152839661,0,2,8,0,3,6,-1,9,0,1,6,3,.008577490225434303,.5051138997077942,.1795724928379059,0,2,11,18,3,2,-1,11,19,3,1,2,-.0002603268949314952,.5826969146728516,.4446826875209808,0,2,1,1,17,4,-1,1,3,17,2,2,-.006140463054180145,.3113852143287659,.5346971750259399,0,2,11,8,4,12,-1,11,8,2,12,2,-.0230869501829147,.32779461145401,.533119797706604,0,2,8,14,4,3,-1,8,15,4,1,3,-.0142436502501369,.7381709814071655,.4588063061237335,0,2,12,3,2,17,-1,12,3,1,17,2,.0194871295243502,.5256630778312683,.2274471968412399,0,2,4,7,6,1,-1,6,7,2,1,3,-.0009668110869824886,.5511230826377869,.3815006911754608,0,2,18,3,2,3,-1,18,4,2,1,3,.003147470997646451,.5425636768341064,.2543726861476898,0,2,8,4,3,4,-1,8,6,3,2,2,-.00018026070029009134,.5380191802978516,.3406304121017456,0,2,4,5,12,10,-1,4,10,12,5,2,-.006026626098901033,.3035801947116852,.54205721616745,0,2,5,18,4,2,-1,7,18,2,2,2,.00044462960795499384,.3990997076034546,.5660110116004944,0,2,17,2,3,6,-1,17,4,3,2,3,.002260976005345583,.5562806725502014,.3940688073635101,0,2,7,7,6,6,-1,9,7,2,6,3,.0511330589652061,.4609653949737549,.7118561863899231,0,2,17,2,3,6,-1,17,4,3,2,3,-.0177863091230392,.2316166013479233,.5322144031524658,0,2,8,0,3,4,-1,9,0,1,4,3,-.004967962857335806,.233077198266983,.5122029185295105,0,2,9,14,2,3,-1,9,15,2,1,3,.002066768938675523,.4657444059848785,.6455488204956055,0,2,0,12,6,3,-1,0,13,6,1,3,.007441376801580191,.5154392123222351,.236163392663002,0,2,8,14,4,3,-1,8,15,4,1,3,-.003627727972343564,.6219773292541504,.4476661086082459,0,2,3,12,2,3,-1,3,13,2,1,3,-.005353075917810202,.1837355047464371,.5102208256721497,0,2,5,6,12,7,-1,9,6,4,7,3,.1453091949224472,.5145987272262573,.1535930931568146,0,2,0,2,3,6,-1,0,4,3,2,3,.0024394490756094456,.5343660116195679,.3624661862850189,0,2,14,6,1,3,-1,14,7,1,1,3,-.003128339070826769,.6215007901191711,.4845592081546783,0,2,2,0,3,14,-1,3,0,1,14,3,.0017940260004252195,.4299261868000031,.5824198126792908,0,2,12,14,5,6,-1,12,16,5,2,3,.0362538211047649,.5260334014892578,.1439467966556549,0,2,4,14,5,6,-1,4,16,5,2,3,-.005174672231078148,.350653886795044,.5287045240402222,0,3,11,10,2,2,-1,12,10,1,1,2,11,11,1,1,2,.0006538329762406647,.4809640944004059,.6122040152549744,0,2,5,0,3,14,-1,6,0,1,14,3,-.0264802295714617,.1139362007379532,.5045586228370667,0,2,10,15,2,3,-1,10,16,2,1,3,-.0030440660193562508,.6352095007896423,.4794734120368958,0,2,0,2,2,3,-1,0,3,2,1,3,.0036993520334362984,.5131118297576904,.2498510926961899,0,2,5,11,12,6,-1,5,14,12,3,2,-.0003676293126773089,.54213947057724,.3709532022476196,0,2,6,11,3,9,-1,6,14,3,3,3,-.041382260620594,.1894959956407547,.5081691741943359,0,3,11,10,2,2,-1,12,10,1,1,2,11,11,1,1,2,-.0010532729793339968,.645436704158783,.4783608913421631,0,2,5,6,1,3,-1,5,7,1,1,3,-.0021648600231856108,.6215031147003174,.449982613325119,0,2,4,9,13,3,-1,4,10,13,1,3,-.0005674774874933064,.3712610900402069,.5419334769248962,0,2,1,7,15,6,-1,6,7,5,6,3,.173758402466774,.5023643970489502,.1215742006897926,0,2,4,5,12,6,-1,8,5,4,6,3,-.0029049699660390615,.3240267932415009,.5381883978843689,0,2,8,10,4,3,-1,8,11,4,1,3,.0012299539521336555,.4165507853031158,.5703486204147339,0,2,15,14,1,3,-1,15,15,1,1,3,-.0005432923790067434,.3854042887687683,.554754912853241,0,2,1,11,5,3,-1,1,12,5,1,3,-.008329725824296474,.2204494029283524,.5097082853317261,0,2,7,1,7,12,-1,7,7,7,6,2,-.00010417630255687982,.560706615447998,.4303036034107208,0,3,0,1,6,10,-1,0,1,3,5,2,3,6,3,5,2,.0312047004699707,.4621657133102417,.6982004046440125,0,2,16,1,4,3,-1,16,2,4,1,3,.007894350215792656,.5269594192504883,.226906806230545,0,2,5,5,2,3,-1,5,6,2,1,3,-.004364531021565199,.6359223127365112,.4537956118583679,0,2,12,2,3,5,-1,13,2,1,5,3,.007679305970668793,.5274767875671387,.274048388004303,0,2,0,3,4,6,-1,0,5,4,2,3,-.0254311393946409,.2038519978523254,.5071732997894287,0,2,8,12,4,2,-1,8,13,4,1,2,.0008200060110539198,.4587455093860626,.6119868159294128,0,2,8,18,3,1,-1,9,18,1,1,3,.002928460016846657,.5071274042129517,.2028204947710037,0,3,11,10,2,2,-1,12,10,1,1,2,11,11,1,1,2,4525647091213614e-20,.4812104105949402,.5430821776390076,0,3,7,10,2,2,-1,7,10,1,1,2,8,11,1,1,2,.0013158309739083052,.4625813961029053,.6779323220252991,0,2,11,11,4,4,-1,11,13,4,2,2,.0015870389761403203,.5386291742324829,.3431465029716492,0,2,8,12,3,8,-1,9,12,1,8,3,-.0215396601706743,.025942500680685,.5003222823143005,0,2,13,0,6,3,-1,13,1,6,1,3,.014334480278194,.5202844738960266,.1590632945299149,0,2,8,8,3,4,-1,9,8,1,4,3,-.008388138376176357,.728248119354248,.4648044109344482,0,3,5,7,10,10,-1,10,7,5,5,2,5,12,5,5,2,.00919068418443203,.556235671043396,.3923191130161285,0,3,3,18,8,2,-1,3,18,4,1,2,7,19,4,1,2,-.005845305975526571,.6803392767906189,.4629127979278565,0,2,10,2,6,8,-1,12,2,2,8,3,-.0547077991068363,.2561671137809753,.5206125974655151,0,2,4,2,6,8,-1,6,2,2,8,3,.009114277549088001,.518962025642395,.3053877055644989,0,2,11,0,3,7,-1,12,0,1,7,3,-.0155750000849366,.1295074969530106,.5169094800949097,0,2,7,11,2,1,-1,8,11,1,1,2,-.0001205060034408234,.5735098123550415,.4230825006961823,0,2,15,14,1,3,-1,15,15,1,1,3,.0012273970060050488,.5289878249168396,.4079791903495789,0,3,7,15,2,2,-1,7,15,1,1,2,8,16,1,1,2,-.0012186600361019373,.6575639843940735,.4574409127235413,0,2,15,14,1,3,-1,15,15,1,1,3,-.0033256649039685726,.3628047108650208,.5195019841194153,0,2,6,0,3,7,-1,7,0,1,7,3,-.0132883097976446,.1284265965223312,.504348874092102,0,2,18,1,2,7,-1,18,1,1,7,2,-.0033839771058410406,.6292240023612976,.475750595331192,0,2,2,0,8,20,-1,2,10,8,10,2,-.2195422053337097,.148773193359375,.5065013766288757,0,2,3,0,15,6,-1,3,2,15,2,3,.004911170806735754,.425610214471817,.5665838718414307,0,2,4,3,12,2,-1,4,4,12,1,2,-.00018744950648397207,.4004144072532654,.5586857199668884,0,2,16,0,4,5,-1,16,0,2,5,2,-.00521786417812109,.6009116172790527,.4812706112861633,0,2,7,0,3,4,-1,8,0,1,4,3,-.0011111519997939467,.3514933884143829,.5287089943885803,0,2,16,0,4,5,-1,16,0,2,5,2,.004403640050441027,.4642275869846344,.5924085974693298,0,2,1,7,6,13,-1,3,7,2,13,3,.1229949966073036,.5025529265403748,.0691524818539619,0,2,16,0,4,5,-1,16,0,2,5,2,-.0123135102912784,.5884591937065125,.4934012889862061,0,2,0,0,4,5,-1,2,0,2,5,2,.004147103987634182,.4372239112854004,.589347779750824,0,2,14,12,3,6,-1,14,14,3,2,3,-.003550264984369278,.4327551126480103,.5396270155906677,0,2,3,12,3,6,-1,3,14,3,2,3,-.0192242693156004,.1913134008646011,.5068330764770508,0,2,16,1,4,3,-1,16,2,4,1,3,.0014395059552043676,.5308178067207336,.424353301525116,0,3,8,7,2,10,-1,8,7,1,5,2,9,12,1,5,2,-.00677519990131259,.6365395784378052,.4540086090564728,0,2,11,11,4,4,-1,11,13,4,2,2,.007011963054537773,.5189834237098694,.302619993686676,0,2,0,1,4,3,-1,0,2,4,1,3,.005401465110480785,.5105062127113342,.2557682991027832,0,2,13,4,1,3,-1,13,5,1,1,3,.0009027498890645802,.4696914851665497,.5861827731132507,0,2,7,15,3,5,-1,8,15,1,5,3,.0114744501188397,.5053645968437195,.152717798948288,0,2,9,7,3,5,-1,10,7,1,5,3,-.006702343001961708,.6508980989456177,.4890604019165039,0,2,8,7,3,5,-1,9,7,1,5,3,-.0020462959073483944,.6241816878318787,.4514600038528442,0,2,10,6,4,14,-1,10,6,2,14,2,-.009995156899094582,.3432781100273132,.5400953888893127,0,2,0,5,5,6,-1,0,7,5,2,3,-.0357007086277008,.1878059059381485,.5074077844619751,0,2,9,5,6,4,-1,9,5,3,4,2,.0004558456130325794,.3805277049541473,.5402569770812988,0,2,0,0,18,10,-1,6,0,6,10,3,-.0542606003582478,.6843714714050293,.4595097005367279,0,2,10,6,4,14,-1,10,6,2,14,2,.0060600461438298225,.5502905249595642,.450052797794342,0,2,6,6,4,14,-1,8,6,2,14,2,-.006479183211922646,.3368858098983765,.5310757160186768,0,2,13,4,1,3,-1,13,5,1,1,3,-.0014939469983801246,.6487640142440796,.4756175875663757,0,2,5,1,2,3,-1,6,1,1,3,2,14610530342906713e-21,.403457909822464,.5451064109802246,0,3,18,1,2,18,-1,19,1,1,9,2,18,10,1,9,2,-.00723219383507967,.6386873722076416,.4824739992618561,0,2,2,1,4,3,-1,2,2,4,1,3,-.004064581822603941,.2986421883106232,.5157335996627808,0,3,18,1,2,18,-1,19,1,1,9,2,18,10,1,9,2,.0304630808532238,.5022199749946594,.7159956097602844,0,3,1,14,4,6,-1,1,14,2,3,2,3,17,2,3,2,-.008054491132497787,.6492452025413513,.4619275033473969,0,2,10,11,7,6,-1,10,13,7,2,3,.0395051389932632,.5150570869445801,.2450613975524902,0,3,0,10,6,10,-1,0,10,3,5,2,3,15,3,5,2,.008453020825982094,.4573669135570526,.6394037008285522,0,2,11,0,3,4,-1,12,0,1,4,3,-.0011688120430335402,.3865512013435364,.548366129398346,0,2,5,10,5,6,-1,5,13,5,3,2,.002807067008689046,.5128579139709473,.2701480090618134,0,2,14,6,1,8,-1,14,10,1,4,2,.000473652093205601,.4051581919193268,.5387461185455322,0,3,1,7,18,6,-1,1,7,9,3,2,10,10,9,3,2,.0117410803213716,.5295950174331665,.3719413876533508,0,2,9,7,2,2,-1,9,7,1,2,2,.0031833238899707794,.4789406955242157,.6895126104354858,0,2,5,9,4,5,-1,7,9,2,5,2,.0007024150108918548,.5384489297866821,.3918080925941467,50.16973114013672,102,0,2,7,6,6,3,-1,9,6,2,3,3,.0170599296689034,.3948527872562408,.7142534852027893,0,2,1,0,18,4,-1,7,0,6,4,3,.0218408405780792,.3370316028594971,.6090016961097717,0,2,7,15,2,4,-1,7,17,2,2,2,.00024520049919374287,.3500576019287109,.5987902283668518,0,2,1,0,19,9,-1,1,3,19,3,3,.008327260613441467,.3267528116703033,.5697240829467773,0,2,3,7,3,6,-1,3,9,3,2,3,.0005714829894714057,.3044599890708923,.5531656742095947,0,3,13,7,4,4,-1,15,7,2,2,2,13,9,2,2,2,.0006737398798577487,.3650012016296387,.567263126373291,0,3,3,7,4,4,-1,3,7,2,2,2,5,9,2,2,2,3468159047770314e-20,.3313541114330292,.5388727188110352,0,2,9,6,10,8,-1,9,10,10,4,2,-.005856339819729328,.2697942852973938,.5498778820037842,0,2,3,8,14,12,-1,3,14,14,6,2,.00851022731512785,.5269358158111572,.2762879133224487,0,3,6,5,10,12,-1,11,5,5,6,2,6,11,5,6,2,-.0698172077536583,.2909603118896484,.5259246826171875,0,2,9,11,2,3,-1,9,12,2,1,3,-.0008611367084085941,.5892577171325684,.4073697924613953,0,2,9,5,6,5,-1,9,5,3,5,2,.0009714924963191152,.3523564040660858,.5415862202644348,0,2,9,4,2,4,-1,9,6,2,2,2,-1472749045206001e-20,.5423017740249634,.3503156006336212,0,2,9,5,6,5,-1,9,5,3,5,2,.0484202913939953,.51939457654953,.3411195874214172,0,2,5,5,6,5,-1,8,5,3,5,2,.0013257140526548028,.315776914358139,.5335376262664795,0,2,11,2,6,1,-1,13,2,2,1,3,1492214960308047e-20,.4451299905776978,.5536553859710693,0,2,3,2,6,1,-1,5,2,2,1,3,-.002717339899390936,.3031741976737976,.5248088836669922,0,2,13,5,2,3,-1,13,6,2,1,3,.0029219500720500946,.4781453013420105,.6606041789054871,0,2,0,10,1,4,-1,0,12,1,2,2,-.0019804988987743855,.3186308145523071,.5287625193595886,0,2,13,5,2,3,-1,13,6,2,1,3,-.004001210909336805,.6413596868515015,.4749928116798401,0,2,8,18,3,2,-1,9,18,1,2,3,-.004349199123680592,.1507498025894165,.5098996758460999,0,2,6,15,9,2,-1,6,16,9,1,2,.0013490889687091112,.4316158890724182,.5881167054176331,0,2,8,14,4,3,-1,8,15,4,1,3,.0185970701277256,.4735553860664368,.9089794158935547,0,2,18,4,2,4,-1,18,6,2,2,2,-.001856237999163568,.3553189039230347,.5577837228775024,0,2,5,5,2,3,-1,5,6,2,1,3,.002294043079018593,.4500094950199127,.6580877900123596,0,2,15,16,3,2,-1,15,17,3,1,2,.00029982850537635386,.5629242062568665,.3975878953933716,0,2,0,0,3,9,-1,0,3,3,3,3,.0035455459728837013,.5381547212600708,.3605485856533051,0,2,9,7,3,3,-1,9,8,3,1,3,.009610472247004509,.5255997180938721,.1796745955944061,0,2,8,7,3,3,-1,8,8,3,1,3,-.0062783220782876015,.227285698056221,.5114030241966248,0,2,9,5,2,6,-1,9,5,1,6,2,.0034598479978740215,.4626308083534241,.6608219146728516,0,2,8,6,3,4,-1,9,6,1,4,3,-.0013112019514665008,.6317539811134338,.4436857998371124,0,3,7,6,8,12,-1,11,6,4,6,2,7,12,4,6,2,.002687617903575301,.5421109795570374,.4054022133350372,0,3,5,6,8,12,-1,5,6,4,6,2,9,12,4,6,2,.003911816980689764,.5358477830886841,.3273454904556274,0,2,12,4,3,3,-1,12,5,3,1,3,-.014206450432539,.7793576717376709,.4975781142711639,0,2,2,16,3,2,-1,2,17,3,1,2,.0007170552853494883,.5297319889068604,.3560903966426849,0,2,12,4,3,3,-1,12,5,3,1,3,.001663501956500113,.467809408903122,.5816481709480286,0,2,2,12,6,6,-1,2,14,6,2,3,.0033686188980937004,.5276734232902527,.3446420133113861,0,2,7,13,6,3,-1,7,14,6,1,3,.0127995302900672,.4834679961204529,.7472159266471863,0,2,6,14,6,3,-1,6,15,6,1,3,.0033901201095432043,.4511859118938446,.6401721239089966,0,2,14,15,5,3,-1,14,16,5,1,3,.004707077983766794,.533565878868103,.355522096157074,0,2,5,4,3,3,-1,5,5,3,1,3,.0014819339849054813,.4250707030296326,.5772724151611328,0,2,14,15,5,3,-1,14,16,5,1,3,-.0069995759986341,.3003320097923279,.5292900204658508,0,2,5,3,6,2,-1,7,3,2,2,3,.0159390103071928,.5067319273948669,.1675581932067871,0,2,8,15,4,3,-1,8,16,4,1,3,.007637734990566969,.4795069992542267,.7085601091384888,0,2,1,15,5,3,-1,1,16,5,1,3,.006733404006808996,.5133113265037537,.2162470072507858,0,3,8,13,4,6,-1,10,13,2,3,2,8,16,2,3,2,-.012858809903264,.1938841938972473,.525137186050415,0,2,7,8,3,3,-1,8,8,1,3,3,-.0006227080011740327,.5686538219451904,.419786810874939,0,2,12,0,5,4,-1,12,2,5,2,2,-.0005265168147161603,.4224168956279755,.5429695844650269,0,3,0,2,20,2,-1,0,2,10,1,2,10,3,10,1,2,.0110750999301672,.5113775134086609,.2514517903327942,0,2,1,0,18,4,-1,7,0,6,4,3,-.0367282517254353,.7194662094116211,.4849618971347809,0,2,4,3,6,1,-1,6,3,2,1,3,-.00028207109426148236,.3840261995792389,.539444625377655,0,2,4,18,13,2,-1,4,19,13,1,2,-.0027489690110087395,.593708872795105,.4569182097911835,0,2,2,10,3,6,-1,2,12,3,2,3,.0100475195795298,.5138576030731201,.2802298069000244,0,3,14,12,6,8,-1,17,12,3,4,2,14,16,3,4,2,-.008149784058332443,.6090037226676941,.4636121094226837,0,3,4,13,10,6,-1,4,13,5,3,2,9,16,5,3,2,-.006883388850837946,.3458611071109772,.5254660248756409,0,2,14,12,1,2,-1,14,13,1,1,2,-140393603942357e-19,.5693104267120361,.4082083106040955,0,2,8,13,4,3,-1,8,14,4,1,3,.001549841952510178,.4350537061691284,.5806517004966736,0,2,14,12,2,2,-1,14,13,2,1,2,-.006784149911254644,.1468873023986816,.5182775259017944,0,2,4,12,2,2,-1,4,13,2,1,2,.00021705629478674382,.5293524265289307,.345617413520813,0,2,8,12,9,2,-1,8,13,9,1,2,.00031198898795992136,.4652450978755951,.5942413806915283,0,2,9,14,2,3,-1,9,15,2,1,3,.005450753029435873,.4653508961200714,.7024846076965332,0,2,11,10,3,6,-1,11,13,3,3,2,-.00025818689027801156,.5497295260429382,.3768967092037201,0,2,5,6,9,12,-1,5,12,9,6,2,-.0174425393342972,.3919087946414948,.5457497835159302,0,2,11,10,3,6,-1,11,13,3,3,2,-.045343529433012,.1631357073783875,.5154908895492554,0,2,6,10,3,6,-1,6,13,3,3,2,.0019190689781680703,.514589786529541,.2791895866394043,0,2,5,4,11,3,-1,5,5,11,1,3,-.006017786916345358,.6517636179924011,.4756332933902741,0,2,7,1,5,10,-1,7,6,5,5,2,-.004072073847055435,.5514652729034424,.4092685878276825,0,2,2,8,18,2,-1,2,9,18,1,2,.00039855059003457427,.316524088382721,.5285550951957703,0,2,7,17,5,3,-1,7,18,5,1,3,-.0065418570302426815,.6853377819061279,.4652808904647827,0,2,5,9,12,1,-1,9,9,4,1,3,.003484508953988552,.5484588146209717,.4502759873867035,0,3,0,14,6,6,-1,0,14,3,3,2,3,17,3,3,2,-.0136967804282904,.6395779848098755,.4572555124759674,0,2,5,9,12,1,-1,9,9,4,1,3,-.017347140237689,.2751072943210602,.5181614756584167,0,2,3,9,12,1,-1,7,9,4,1,3,-.004088542889803648,.3325636088848114,.5194984078407288,0,2,14,10,6,7,-1,14,10,3,7,2,-.009468790143728256,.5942280888557434,.485181987285614,0,2,1,0,16,2,-1,1,1,16,1,2,.0017084840219467878,.4167110919952393,.5519806146621704,0,2,10,9,10,9,-1,10,12,10,3,3,.009480909444391727,.5433894991874695,.4208514988422394,0,2,0,1,10,2,-1,5,1,5,2,2,-.004738965071737766,.6407189965248108,.4560655057430267,0,2,17,3,2,3,-1,17,4,2,1,3,.006576105020940304,.5214555263519287,.2258227020502091,0,2,1,3,2,3,-1,1,4,2,1,3,-.0021690549328923225,.3151527941226959,.5156704783439636,0,2,9,7,3,6,-1,10,7,1,6,3,.014660170301795,.4870837032794952,.668994128704071,0,2,6,5,4,3,-1,8,5,2,3,2,.00017231999663636088,.3569748997688294,.5251078009605408,0,2,7,5,6,6,-1,9,5,2,6,3,-.0218037609010935,.8825920820236206,.496632993221283,0,3,3,4,12,12,-1,3,4,6,6,2,9,10,6,6,2,-.0947361066937447,.1446162015199661,.5061113834381104,0,2,9,2,6,15,-1,11,2,2,15,3,.0055825551971793175,.5396478772163391,.4238066077232361,0,2,2,2,6,17,-1,4,2,2,17,3,.001951709040440619,.4170410931110382,.5497786998748779,0,2,14,10,6,7,-1,14,10,3,7,2,.0121499001979828,.4698367118835449,.5664274096488953,0,2,0,10,6,7,-1,3,10,3,7,2,-.007516962010413408,.6267772912979126,.4463135898113251,0,2,9,2,6,15,-1,11,2,2,15,3,-.0716679096221924,.3097011148929596,.5221003293991089,0,2,5,2,6,15,-1,7,2,2,15,3,-.0882924199104309,.0811238884925842,.5006365180015564,0,2,17,9,3,6,-1,17,11,3,2,3,.0310630798339844,.5155503749847412,.1282255947589874,0,2,6,7,6,6,-1,8,7,2,6,3,.0466218404471874,.4699777960777283,.736396074295044,0,3,1,10,18,6,-1,10,10,9,3,2,1,13,9,3,2,-.0121894897893071,.3920530080795288,.5518996715545654,0,2,0,9,10,9,-1,0,12,10,3,3,.0130161102861166,.5260658264160156,.3685136139392853,0,2,8,15,4,3,-1,8,16,4,1,3,-.003495289944112301,.6339294910430908,.4716280996799469,0,2,5,12,3,4,-1,5,14,3,2,2,-4401503974804655e-20,.5333027243614197,.3776184916496277,0,2,3,3,16,12,-1,3,9,16,6,2,-.1096649020910263,.1765342056751251,.5198346972465515,0,3,1,1,12,12,-1,1,1,6,6,2,7,7,6,6,2,-.0009027955820783973,.5324159860610962,.3838908076286316,0,3,10,4,2,4,-1,11,4,1,2,2,10,6,1,2,2,.0007112664170563221,.4647929966449738,.5755224227905273,0,3,0,9,10,2,-1,0,9,5,1,2,5,10,5,1,2,-.003125027986243367,.323670893907547,.5166770815849304,0,2,9,11,3,3,-1,9,12,3,1,3,.002414467977359891,.4787439107894898,.6459717750549316,0,2,3,12,9,2,-1,3,13,9,1,2,.00044391240226104856,.4409308135509491,.6010255813598633,0,2,9,9,2,2,-1,9,10,2,1,2,-.0002261118934256956,.4038113951683044,.5493255853652954,66.66912078857422,135,0,2,3,4,13,6,-1,3,6,13,2,3,-.0469012893736362,.660017192363739,.3743801116943359,0,3,9,7,6,4,-1,12,7,3,2,2,9,9,3,2,2,-.001456834957934916,.578399121761322,.3437797129154205,0,2,1,0,6,8,-1,4,0,3,8,2,.005559836979955435,.3622266948223114,.5908216238021851,0,2,9,5,2,12,-1,9,11,2,6,2,.0007317048730328679,.550041913986206,.2873558104038239,0,2,4,4,3,10,-1,4,9,3,5,2,.001331800944171846,.267316997051239,.5431019067764282,0,2,6,17,8,3,-1,6,18,8,1,3,.00024347059661522508,.3855027854442596,.574138879776001,0,2,0,5,10,6,-1,0,7,10,2,3,-.0030512469820678234,.5503209829330444,.3462845087051392,0,2,13,2,3,2,-1,13,3,3,1,2,-.0006865719915367663,.3291221857070923,.5429509282112122,0,2,7,5,4,5,-1,9,5,2,5,2,.001466820016503334,.3588382005691528,.5351811051368713,0,2,12,14,3,6,-1,12,16,3,2,3,.0003202187072020024,.429684191942215,.5700234174728394,0,2,1,11,8,2,-1,1,12,8,1,2,.0007412218837998807,.5282164812088013,.3366870880126953,0,2,7,13,6,3,-1,7,14,6,1,3,.0038330298848450184,.4559567868709564,.6257336139678955,0,2,0,5,3,6,-1,0,7,3,2,3,-.0154564399272203,.2350116968154907,.512945294380188,0,2,13,2,3,2,-1,13,3,3,1,2,.002679677912965417,.5329415202140808,.4155062139034271,0,3,4,14,4,6,-1,4,14,2,3,2,6,17,2,3,2,.0028296569362282753,.4273087978363037,.5804538130760193,0,2,13,2,3,2,-1,13,3,3,1,2,-.0039444249123334885,.2912611961364746,.5202686190605164,0,2,8,2,4,12,-1,8,6,4,4,3,.002717955969274044,.5307688117027283,.3585677146911621,0,3,14,0,6,8,-1,17,0,3,4,2,14,4,3,4,2,.005907762795686722,.470377504825592,.5941585898399353,0,2,7,17,3,2,-1,8,17,1,2,3,-.004224034957587719,.2141567021608353,.5088796019554138,0,2,8,12,4,2,-1,8,13,4,1,2,.0040725888684391975,.4766413867473602,.6841061115264893,0,3,6,0,8,12,-1,6,0,4,6,2,10,6,4,6,2,.0101495301350951,.5360798835754395,.3748497068881989,0,3,14,0,2,10,-1,15,0,1,5,2,14,5,1,5,2,-.00018864999583456665,.5720130205154419,.3853805065155029,0,3,5,3,8,6,-1,5,3,4,3,2,9,6,4,3,2,-.0048864358104765415,.3693122863769531,.5340958833694458,0,3,14,0,6,10,-1,17,0,3,5,2,14,5,3,5,2,.0261584799736738,.4962374866008759,.6059989929199219,0,2,9,14,1,2,-1,9,15,1,1,2,.0004856075975112617,.4438945949077606,.6012468934059143,0,2,15,10,4,3,-1,15,11,4,1,3,.0112687097862363,.5244250297546387,.1840388029813767,0,2,8,14,2,3,-1,8,15,2,1,3,-.0028114619199186563,.6060283780097961,.4409897029399872,0,3,3,13,14,4,-1,10,13,7,2,2,3,15,7,2,2,-.005611272994428873,.3891170918941498,.5589237213134766,0,2,1,10,4,3,-1,1,11,4,1,3,.008568009361624718,.5069345831871033,.2062619030475617,0,2,9,11,6,1,-1,11,11,2,1,3,-.00038172779022715986,.5882201790809631,.41926109790802,0,2,5,11,6,1,-1,7,11,2,1,3,-.00017680290329735726,.5533605813980103,.400336891412735,0,2,3,5,16,15,-1,3,10,16,5,3,.006511253770440817,.3310146927833557,.5444191098213196,0,2,6,12,4,2,-1,8,12,2,2,2,-6594868318643421e-20,.5433831810951233,.3944905996322632,0,3,4,4,12,10,-1,10,4,6,5,2,4,9,6,5,2,.006993905175477266,.5600358247756958,.4192714095115662,0,2,8,6,3,4,-1,9,6,1,4,3,-.0046744439750909805,.6685466766357422,.4604960978031158,0,3,8,12,4,8,-1,10,12,2,4,2,8,16,2,4,2,.0115898502990603,.5357121229171753,.2926830053329468,0,2,8,14,4,3,-1,8,15,4,1,3,.013007840141654,.4679817855358124,.730746328830719,0,2,12,2,3,2,-1,13,2,1,2,3,-.0011008579749614,.3937501013278961,.5415065288543701,0,2,8,15,3,2,-1,8,16,3,1,2,.0006047264905646443,.4242376089096069,.5604041218757629,0,2,6,0,9,14,-1,9,0,3,14,3,-.0144948400557041,.3631210029125214,.5293182730674744,0,2,9,6,2,3,-1,10,6,1,3,2,-.005305694881826639,.686045229434967,.4621821045875549,0,2,10,8,2,3,-1,10,9,2,1,3,-.00081829127157107,.3944096863269806,.542043924331665,0,2,0,9,4,6,-1,0,11,4,2,3,-.0190775208175182,.1962621957063675,.5037891864776611,0,2,6,0,8,2,-1,6,1,8,1,2,.00035549470339901745,.4086259007453919,.5613973140716553,0,2,6,14,7,3,-1,6,15,7,1,3,.0019679730758070946,.448912113904953,.5926123261451721,0,2,8,10,8,9,-1,8,13,8,3,3,.006918914150446653,.5335925817489624,.3728385865688324,0,2,5,2,3,2,-1,6,2,1,2,3,.002987277926877141,.5111321210861206,.2975643873214722,0,3,14,1,6,8,-1,17,1,3,4,2,14,5,3,4,2,-.006226461846381426,.5541489720344543,.4824537932872772,0,3,0,1,6,8,-1,0,1,3,4,2,3,5,3,4,2,.013353300280869,.4586423933506012,.6414797902107239,0,3,1,2,18,6,-1,10,2,9,3,2,1,5,9,3,2,.0335052385926247,.5392425060272217,.3429994881153107,0,2,9,3,2,1,-1,10,3,1,1,2,-.0025294460356235504,.1703713983297348,.5013315081596375,0,3,13,2,4,6,-1,15,2,2,3,2,13,5,2,3,2,-.001280162949115038,.5305461883544922,.4697405099868774,0,2,5,4,3,3,-1,5,5,3,1,3,.007068738806992769,.4615545868873596,.643650472164154,0,2,13,5,1,3,-1,13,6,1,1,3,.0009688049904070795,.4833599030971527,.6043894290924072,0,2,2,16,5,3,-1,2,17,5,1,3,.003964765928685665,.5187637209892273,.323181688785553,0,3,13,2,4,6,-1,15,2,2,3,2,13,5,2,3,2,-.022057730704546,.4079256951808929,.520098090171814,0,3,3,2,4,6,-1,3,2,2,3,2,5,5,2,3,2,-.0006690631271339953,.533160924911499,.3815600872039795,0,2,13,5,1,2,-1,13,6,1,1,2,-.0006700932863168418,.5655422210693359,.4688901901245117,0,2,5,5,2,2,-1,5,6,2,1,2,.000742845528293401,.4534381031990051,.6287400126457214,0,2,13,9,2,2,-1,13,9,1,2,2,.0022227810695767403,.5350633263587952,.3303655982017517,0,2,5,9,2,2,-1,6,9,1,2,2,-.005413052160292864,.1113687008619309,.500543475151062,0,2,13,17,3,2,-1,13,18,3,1,2,-14520040167553816e-21,.5628737807273865,.4325133860111237,0,3,6,16,4,4,-1,6,16,2,2,2,8,18,2,2,2,.00023369169502984732,.4165835082530975,.5447791218757629,0,2,9,16,2,3,-1,9,17,2,1,3,.004289454780519009,.4860391020774841,.6778649091720581,0,2,0,13,9,6,-1,0,15,9,2,3,.0059103150852024555,.52623051404953,.3612113893032074,0,2,9,14,2,6,-1,9,17,2,3,2,.0129005396738648,.5319377183914185,.32502880692482,0,2,9,15,2,3,-1,9,16,2,1,3,.004698297940194607,.461824506521225,.6665925979614258,0,2,1,10,18,6,-1,1,12,18,2,3,.0104398597031832,.550567090511322,.3883604109287262,0,2,8,11,4,2,-1,8,12,4,1,2,.0030443191062659025,.4697853028774262,.7301844954490662,0,2,7,9,6,2,-1,7,10,6,1,2,-.0006159375188872218,.3830839097499847,.5464984178543091,0,2,8,8,2,3,-1,8,9,2,1,3,-.0034247159492224455,.256630003452301,.5089530944824219,0,2,17,5,3,4,-1,18,5,1,4,3,-.009353856556117535,.6469966173171997,.49407958984375,0,2,1,19,18,1,-1,7,19,6,1,3,.0523389987647533,.4745982885360718,.787877082824707,0,2,9,0,3,2,-1,10,0,1,2,3,.0035765620414167643,.5306664705276489,.2748498022556305,0,2,1,8,1,6,-1,1,10,1,2,3,.0007155531784519553,.541312575340271,.4041908979415894,0,2,12,17,8,3,-1,12,17,4,3,2,-.0105166798457503,.6158512234687805,.4815283119678497,0,2,0,5,3,4,-1,1,5,1,4,3,.007734792772680521,.4695805907249451,.7028980851173401,0,2,9,7,2,3,-1,9,8,2,1,3,-.004322677850723267,.2849566042423248,.5304684042930603,0,3,7,11,2,2,-1,7,11,1,1,2,8,12,1,1,2,-.0025534399319440126,.7056984901428223,.4688892066478729,0,2,11,3,2,5,-1,11,3,1,5,2,.00010268510231981054,.3902932107448578,.5573464035987854,0,2,7,3,2,5,-1,8,3,1,5,2,7139518857002258e-21,.368423193693161,.526398777961731,0,2,15,13,2,3,-1,15,14,2,1,3,-.0016711989883333445,.3849175870418549,.5387271046638489,0,2,5,6,2,3,-1,5,7,2,1,3,.004926044959574938,.4729771912097931,.7447251081466675,0,2,4,19,15,1,-1,9,19,5,1,3,.0043908702209591866,.4809181094169617,.5591921806335449,0,2,1,19,15,1,-1,6,19,5,1,3,-.0177936293184757,.6903678178787231,.4676927030086517,0,2,15,13,2,3,-1,15,14,2,1,3,.002046966925263405,.5370690226554871,.3308162093162537,0,2,5,0,4,15,-1,7,0,2,15,2,.0298914890736341,.5139865279197693,.3309059143066406,0,2,9,6,2,5,-1,9,6,1,5,2,.0015494900289922953,.466023713350296,.6078342795372009,0,2,9,5,2,7,-1,10,5,1,7,2,.001495696953497827,.4404835999011993,.5863919854164124,0,2,16,11,3,3,-1,16,12,3,1,3,.0009588592802174389,.5435971021652222,.4208523035049439,0,2,1,11,3,3,-1,1,12,3,1,3,.0004964370164088905,.5370578169822693,.4000622034072876,0,2,6,6,8,3,-1,6,7,8,1,3,-.00272808107547462,.5659412741661072,.4259642958641052,0,2,0,15,6,2,-1,0,16,6,1,2,.0023026480339467525,.5161657929420471,.3350869119167328,0,2,1,0,18,6,-1,7,0,6,6,3,.2515163123607636,.4869661927223206,.714730978012085,0,2,6,0,3,4,-1,7,0,1,4,3,-.004632802214473486,.27274489402771,.5083789825439453,0,3,14,10,4,10,-1,16,10,2,5,2,14,15,2,5,2,-.0404344908893108,.6851438879966736,.5021767020225525,0,2,3,2,3,2,-1,4,2,1,2,3,14972220014897175e-21,.428446501493454,.5522555112838745,0,2,11,2,2,2,-1,11,3,2,1,2,-.00024050309730228037,.4226118922233582,.5390074849128723,0,3,2,10,4,10,-1,2,10,2,5,2,4,15,2,5,2,.0236578397452831,.4744631946086884,.7504366040229797,0,3,0,13,20,6,-1,10,13,10,3,2,0,16,10,3,2,-.00814491044729948,.424505889415741,.5538362860679626,0,2,0,5,2,15,-1,1,5,1,15,2,-.003699213033542037,.5952357053756714,.4529713094234467,0,3,1,7,18,4,-1,10,7,9,2,2,1,9,9,2,2,-.0067718601785600185,.4137794077396393,.5473399758338928,0,2,0,0,2,17,-1,1,0,1,17,2,.004266953095793724,.4484114944934845,.5797994136810303,0,3,2,6,16,6,-1,10,6,8,3,2,2,9,8,3,2,.0017791989957913756,.5624858736991882,.4432444870471954,0,2,8,14,1,3,-1,8,15,1,1,3,.0016774770338088274,.4637751877307892,.63642418384552,0,2,8,15,4,2,-1,8,16,4,1,2,.0011732629500329494,.4544503092765808,.5914415717124939,0,3,5,2,8,2,-1,5,2,4,1,2,9,3,4,1,2,.000869981711730361,.5334752798080444,.3885917961597443,0,2,6,11,8,6,-1,6,14,8,3,2,.0007637834060005844,.5398585200309753,.374494194984436,0,2,9,13,2,2,-1,9,14,2,1,2,.00015684569370932877,.4317873120307922,.5614616274833679,0,2,18,4,2,6,-1,18,6,2,2,3,-.0215113703161478,.1785925030708313,.5185542702674866,0,2,9,12,2,2,-1,9,13,2,1,2,.00013081369979772717,.4342499077320099,.5682849884033203,0,2,18,4,2,6,-1,18,6,2,2,3,.021992040798068,.5161716938018799,.2379394024610519,0,2,9,13,1,3,-1,9,14,1,1,3,-.0008013650076463819,.598676323890686,.4466426968574524,0,2,18,4,2,6,-1,18,6,2,2,3,-.008273609913885593,.410821795463562,.5251057147979736,0,2,0,4,2,6,-1,0,6,2,2,3,.0036831789184361696,.5173814296722412,.339751809835434,0,2,9,12,3,3,-1,9,13,3,1,3,-.007952568121254444,.6888983249664307,.4845924079418182,0,2,3,13,2,3,-1,3,14,2,1,3,.0015382299898192286,.5178567171096802,.3454113900661469,0,2,13,13,4,3,-1,13,14,4,1,3,-.0140435304492712,.1678421050310135,.518866777420044,0,2,5,4,3,3,-1,5,5,3,1,3,.0014315890148282051,.436825692653656,.5655773878097534,0,2,5,2,10,6,-1,5,4,10,2,3,-.0340142287313938,.7802296280860901,.4959217011928558,0,2,3,13,4,3,-1,3,14,4,1,3,-.0120272999629378,.1585101038217545,.503223180770874,0,2,3,7,15,5,-1,8,7,5,5,3,.1331661939620972,.5163304805755615,.2755128145217896,0,2,3,7,12,2,-1,7,7,4,2,3,-.0015221949433907866,.372831791639328,.5214552283287048,0,2,10,3,3,9,-1,11,3,1,9,3,-.000939292716793716,.5838379263877869,.4511165022850037,0,2,8,6,4,6,-1,10,6,2,6,2,.0277197398245335,.4728286862373352,.7331544756889343,0,2,9,7,4,3,-1,9,8,4,1,3,.003103015013039112,.5302202105522156,.4101563096046448,0,2,0,9,4,9,-1,2,9,2,9,2,.0778612196445465,.4998334050178528,.127296194434166,0,2,9,13,3,5,-1,10,13,1,5,3,-.0158549398183823,.0508333593606949,.5165656208992004,0,2,7,7,6,3,-1,9,7,2,3,3,-.00497253006324172,.6798133850097656,.4684231877326965,0,2,9,7,3,5,-1,10,7,1,5,3,-.0009767650626599789,.6010771989822388,.4788931906223297,0,2,5,7,8,2,-1,9,7,4,2,2,-.0024647710379213095,.3393397927284241,.5220503807067871,0,2,5,9,12,2,-1,9,9,4,2,3,-.006793770007789135,.4365136921405792,.5239663124084473,0,2,5,6,10,3,-1,10,6,5,3,2,.0326080210506916,.505272388458252,.2425214946269989,0,2,10,12,3,1,-1,11,12,1,1,3,-.0005851442110724747,.5733973979949951,.4758574068546295,0,2,0,1,11,15,-1,0,6,11,5,3,-.0296326000243425,.3892289102077484,.5263597965240479,67.69892120361328,137,0,2,1,0,18,6,-1,7,0,6,6,3,.0465508513152599,.3276950120925903,.6240522861480713,0,2,7,7,6,1,-1,9,7,2,1,3,.007953712716698647,.4256485104560852,.6942939162254333,0,3,5,16,6,4,-1,5,16,3,2,2,8,18,3,2,2,.0006822156137786806,.3711487054824829,.59007328748703,0,2,6,5,9,8,-1,6,9,9,4,2,-.00019348249770700932,.2041133940219879,.53005450963974,0,2,5,10,2,6,-1,5,13,2,3,2,-.0002671050897333771,.5416126251220703,.3103179037570953,0,3,7,6,8,10,-1,11,6,4,5,2,7,11,4,5,2,.0027818060480058193,.5277832746505737,.3467069864273071,0,3,5,6,8,10,-1,5,6,4,5,2,9,11,4,5,2,-.000467790785478428,.5308231115341187,.3294492065906525,0,2,9,5,2,2,-1,9,6,2,1,2,-30335160772665404e-21,.577387273311615,.3852097094058991,0,2,5,12,8,2,-1,5,13,8,1,2,.0007803800981491804,.4317438900470734,.6150057911872864,0,2,10,2,8,2,-1,10,3,8,1,2,-.004255385138094425,.2933903932571411,.5324292778968811,0,3,4,0,2,10,-1,4,0,1,5,2,5,5,1,5,2,-.0002473561035003513,.5468844771385193,.3843030035495758,0,2,9,10,2,2,-1,9,11,2,1,2,-.00014724259381182492,.4281542897224426,.5755587220191956,0,2,2,8,15,3,-1,2,9,15,1,3,.0011864770203828812,.374730110168457,.5471466183662415,0,2,8,13,4,3,-1,8,14,4,1,3,.0023936580400913954,.4537783861160278,.6111528873443604,0,2,7,2,3,2,-1,8,2,1,2,3,-.0015390539774671197,.2971341907978058,.518953800201416,0,2,7,13,6,3,-1,7,14,6,1,3,-.007196879014372826,.6699066758155823,.4726476967334747,0,2,9,9,2,2,-1,9,10,2,1,2,-.0004149978922214359,.3384954035282135,.5260317921638489,0,2,17,2,3,6,-1,17,4,3,2,3,.004435983020812273,.539912223815918,.3920140862464905,0,2,1,5,3,4,-1,2,5,1,4,3,.0026606200262904167,.4482578039169312,.6119617819786072,0,2,14,8,4,6,-1,14,10,4,2,3,-.0015287200221791863,.3711237907409668,.5340266227722168,0,2,1,4,3,8,-1,2,4,1,8,3,-.0047397250309586525,.603108823299408,.4455145001411438,0,2,8,13,4,6,-1,8,16,4,3,2,-.0148291299119592,.2838754057884216,.5341861844062805,0,2,3,14,2,2,-1,3,15,2,1,2,.0009227555710822344,.5209547281265259,.3361653983592987,0,2,14,8,4,6,-1,14,10,4,2,3,.0835298076272011,.5119969844818115,.0811644494533539,0,2,2,8,4,6,-1,2,10,4,2,3,-.0007563314866274595,.331712007522583,.5189831256866455,0,2,10,14,1,6,-1,10,17,1,3,2,.009840385988354683,.524759829044342,.233495905995369,0,2,7,5,3,6,-1,8,5,1,6,3,-.0015953830443322659,.5750094056129456,.4295622110366821,0,3,11,2,2,6,-1,12,2,1,3,2,11,5,1,3,2,34766020689858124e-21,.4342445135116577,.5564029216766357,0,2,6,6,6,5,-1,8,6,2,5,3,.0298629105091095,.4579147100448608,.6579188108444214,0,2,17,1,3,6,-1,17,3,3,2,3,.0113255903124809,.5274311900138855,.3673888146877289,0,2,8,7,3,5,-1,9,7,1,5,3,-.008782864548265934,.7100368738174438,.4642167091369629,0,2,9,18,3,2,-1,10,18,1,2,3,.004363995976746082,.5279216170310974,.2705877125263214,0,2,8,18,3,2,-1,9,18,1,2,3,.004180472809821367,.5072525143623352,.2449083030223846,0,2,12,3,5,2,-1,12,4,5,1,2,-.0004566851130221039,.4283105134963989,.5548691153526306,0,2,7,1,5,12,-1,7,7,5,6,2,-.0037140368949621916,.5519387722015381,.4103653132915497,0,2,1,0,18,4,-1,7,0,6,4,3,-.025304289534688,.6867002248764038,.48698890209198,0,2,4,2,2,2,-1,4,3,2,1,2,-.0003445408074185252,.3728874027729034,.528769314289093,0,3,11,14,4,2,-1,13,14,2,1,2,11,15,2,1,2,-.0008393523166887462,.6060152053833008,.4616062045097351,0,2,0,2,3,6,-1,0,4,3,2,3,.0172800496220589,.5049635767936707,.1819823980331421,0,2,9,7,2,3,-1,9,8,2,1,3,-.006359507795423269,.1631239950656891,.5232778787612915,0,2,5,5,1,3,-1,5,6,1,1,3,.0010298109846189618,.446327805519104,.6176549196243286,0,2,10,10,6,1,-1,10,10,3,1,2,.0010117109632119536,.5473384857177734,.4300698935985565,0,2,4,10,6,1,-1,7,10,3,1,2,-.010308800265193,.1166985034942627,.5000867247581482,0,2,9,17,3,3,-1,9,18,3,1,3,.005468201823532581,.4769287109375,.6719213724136353,0,2,4,14,1,3,-1,4,15,1,1,3,-.0009169646073132753,.3471089899539948,.5178164839744568,0,2,12,5,3,3,-1,12,6,3,1,3,.002392282010987401,.4785236120223999,.6216310858726501,0,2,4,5,12,3,-1,4,6,12,1,3,-.007557381875813007,.5814796090126038,.4410085082054138,0,2,9,8,2,3,-1,9,9,2,1,3,-.0007702403236180544,.387800008058548,.546572208404541,0,2,4,9,3,3,-1,5,9,1,3,3,-.00871259905397892,.1660051047801971,.4995836019515991,0,2,6,0,9,17,-1,9,0,3,17,3,-.0103063201531768,.4093391001224518,.5274233818054199,0,2,9,12,1,3,-1,9,13,1,1,3,-.002094097901135683,.6206194758415222,.4572280049324036,0,2,9,5,2,15,-1,9,10,2,5,3,.006809905171394348,.5567759275436401,.4155600070953369,0,2,8,14,2,3,-1,8,15,2,1,3,-.0010746059706434608,.5638927817344666,.4353024959564209,0,2,10,14,1,3,-1,10,15,1,1,3,.0021550289820879698,.4826265871524811,.6749758124351501,0,2,7,1,6,5,-1,9,1,2,5,3,.0317423194646835,.5048379898071289,.188324898481369,0,2,0,0,20,2,-1,0,0,10,2,2,-.0783827230334282,.2369548976421356,.5260158181190491,0,2,2,13,5,3,-1,2,14,5,1,3,.005741511937230825,.5048828721046448,.2776469886302948,0,2,9,11,2,3,-1,9,12,2,1,3,-.0029014600440859795,.6238604784011841,.4693317115306854,0,2,2,5,9,15,-1,2,10,9,5,3,-.0026427931152284145,.3314141929149628,.5169777274131775,0,3,5,0,12,10,-1,11,0,6,5,2,5,5,6,5,2,-.1094966009259224,.2380045056343079,.5183441042900085,0,2,5,1,2,3,-1,6,1,1,3,2,7407591328956187e-20,.406963586807251,.5362150073051453,0,2,10,7,6,1,-1,12,7,2,1,3,-.0005059380200691521,.5506706237792969,.437459409236908,0,3,3,1,2,10,-1,3,1,1,5,2,4,6,1,5,2,-.0008213177789002657,.5525709986686707,.4209375977516174,0,2,13,7,2,1,-1,13,7,1,1,2,-60276539443293586e-21,.5455474853515625,.4748266041278839,0,2,4,13,4,6,-1,4,15,4,2,3,.006806514225900173,.5157995820045471,.3424577116966248,0,2,13,7,2,1,-1,13,7,1,1,2,.0017202789895236492,.5013207793235779,.6331263780593872,0,2,5,7,2,1,-1,6,7,1,1,2,-.0001301692973356694,.5539718270301819,.4226869940757752,0,3,2,12,18,4,-1,11,12,9,2,2,2,14,9,2,2,-.004801638890057802,.4425095021724701,.5430780053138733,0,3,5,7,2,2,-1,5,7,1,1,2,6,8,1,1,2,-.002539931097999215,.7145782113075256,.4697605073451996,0,2,16,3,4,2,-1,16,4,4,1,2,-.0014278929447755218,.4070445001125336,.539960503578186,0,3,0,2,2,18,-1,0,2,1,9,2,1,11,1,9,2,-.0251425504684448,.7884690761566162,.4747352004051209,0,3,1,2,18,4,-1,10,2,9,2,2,1,4,9,2,2,-.0038899609353393316,.4296191930770874,.5577110052108765,0,2,9,14,1,3,-1,9,15,1,1,3,.004394745919853449,.4693162143230438,.702394425868988,0,3,2,12,18,4,-1,11,12,9,2,2,2,14,9,2,2,.0246784202754498,.5242322087287903,.3812510073184967,0,3,0,12,18,4,-1,0,12,9,2,2,9,14,9,2,2,.0380476787686348,.5011739730834961,.1687828004360199,0,2,11,4,5,3,-1,11,5,5,1,3,.007942486554384232,.4828582108020783,.6369568109512329,0,2,6,4,7,3,-1,6,5,7,1,3,-.0015110049862414598,.5906485915184021,.4487667977809906,0,2,13,17,3,3,-1,13,18,3,1,3,.0064201741479337215,.5241097807884216,.2990570068359375,0,2,8,1,3,4,-1,9,1,1,4,3,-.0029802159406244755,.3041465878486633,.5078489780426025,0,2,11,4,2,4,-1,11,4,1,4,2,-.0007458007894456387,.4128139019012451,.5256826281547546,0,2,0,17,9,3,-1,3,17,3,3,3,-.0104709500446916,.5808395147323608,.4494296014308929,0,3,11,0,2,8,-1,12,0,1,4,2,11,4,1,4,2,.009336920455098152,.524655282497406,.265894889831543,0,3,0,8,6,12,-1,0,8,3,6,2,3,14,3,6,2,.0279369000345469,.4674955010414124,.7087256908416748,0,2,10,7,4,12,-1,10,13,4,6,2,.007427767850458622,.5409486889839172,.3758518099784851,0,2,5,3,8,14,-1,5,10,8,7,2,-.0235845092684031,.3758639991283417,.5238550901412964,0,2,14,10,6,1,-1,14,10,3,1,2,.0011452640173956752,.4329578876495361,.5804247260093689,0,2,0,4,10,4,-1,0,6,10,2,2,-.0004346866044215858,.5280618071556091,.3873069882392883,0,2,10,0,5,8,-1,10,4,5,4,2,.0106485402211547,.4902113080024719,.5681251883506775,0,3,8,1,4,8,-1,8,1,2,4,2,10,5,2,4,2,-.0003941805043723434,.5570880174636841,.4318251013755798,0,2,9,11,6,1,-1,11,11,2,1,3,-.00013270479394122958,.5658439993858337,.4343554973602295,0,2,8,9,3,4,-1,9,9,1,4,3,-.002012551063671708,.6056739091873169,.4537523984909058,0,2,18,4,2,6,-1,18,6,2,2,3,.0024854319635778666,.5390477180480957,.4138010144233704,0,2,8,8,3,4,-1,9,8,1,4,3,.0018237880431115627,.4354828894138336,.5717188715934753,0,2,7,1,13,3,-1,7,2,13,1,3,-.0166566595435143,.3010913133621216,.521612286567688,0,2,7,13,6,1,-1,9,13,2,1,3,.0008034955826587975,.5300151109695435,.3818396925926209,0,2,12,11,3,6,-1,12,13,3,2,3,.003417037893086672,.5328028798103333,.4241400063037872,0,2,5,11,6,1,-1,7,11,2,1,3,-.00036222729249857366,.5491728186607361,.418697714805603,0,3,1,4,18,10,-1,10,4,9,5,2,1,9,9,5,2,-.1163002029061317,.1440722048282623,.522645115852356,0,2,8,6,4,9,-1,8,9,4,3,3,-.0146950101479888,.7747725248336792,.4715717136859894,0,2,8,6,4,3,-1,8,7,4,1,3,.0021972130052745342,.5355433821678162,.3315644860267639,0,2,8,7,3,3,-1,9,7,1,3,3,-.00046965209185145795,.5767235159873962,.4458136856555939,0,2,14,15,4,3,-1,14,16,4,1,3,.006514499895274639,.5215674042701721,.3647888898849487,0,2,5,10,3,10,-1,6,10,1,10,3,.0213000606745481,.4994204938411713,.1567950993776321,0,2,8,15,4,3,-1,8,16,4,1,3,.0031881409231573343,.4742200076580048,.6287270188331604,0,2,0,8,1,6,-1,0,10,1,2,3,.0009001977741718292,.5347954034805298,.394375205039978,0,2,10,15,1,3,-1,10,16,1,1,3,-.005177227780222893,.6727191805839539,.5013138055801392,0,2,2,15,4,3,-1,2,16,4,1,3,-.004376464989036322,.3106675148010254,.5128793120384216,0,3,18,3,2,8,-1,19,3,1,4,2,18,7,1,4,2,.002629996044561267,.488631010055542,.5755215883255005,0,3,0,3,2,8,-1,0,3,1,4,2,1,7,1,4,2,-.002045868895947933,.6025794148445129,.4558076858520508,0,3,3,7,14,10,-1,10,7,7,5,2,3,12,7,5,2,.0694827064871788,.5240747928619385,.2185259014368057,0,2,0,7,19,3,-1,0,8,19,1,3,.0240489393472672,.501186728477478,.2090622037649155,0,2,12,6,3,3,-1,12,7,3,1,3,.003109534038230777,.4866712093353272,.7108548283576965,0,2,0,6,1,3,-1,0,7,1,1,3,-.00125032605137676,.3407891094684601,.5156195163726807,0,2,12,6,3,3,-1,12,7,3,1,3,-.0010281190043315291,.557557225227356,.443943202495575,0,2,5,6,3,3,-1,5,7,3,1,3,-.008889362215995789,.6402000784873962,.4620442092418671,0,2,8,2,4,2,-1,8,3,4,1,2,-.0006109480164013803,.3766441941261292,.5448899865150452,0,2,6,3,4,12,-1,8,3,2,12,2,-.005768635775893927,.3318648934364319,.5133677124977112,0,2,13,6,2,3,-1,13,7,2,1,3,.0018506490159779787,.4903570115566254,.6406934857368469,0,2,0,10,20,4,-1,0,12,20,2,2,-.0997994691133499,.1536051034927368,.5015562176704407,0,2,2,0,17,14,-1,2,7,17,7,2,-.3512834906578064,.0588231310248375,.5174378752708435,0,3,0,0,6,10,-1,0,0,3,5,2,3,5,3,5,2,-.0452445708215237,.6961488723754883,.4677872955799103,0,2,14,6,6,4,-1,14,6,3,4,2,.0714815780520439,.5167986154556274,.1038092970848084,0,2,0,6,6,4,-1,3,6,3,4,2,.0021895780228078365,.4273078143596649,.5532060861587524,0,2,13,2,7,2,-1,13,3,7,1,2,-.0005924265133216977,.46389439702034,.5276389122009277,0,2,0,2,7,2,-1,0,3,7,1,2,.0016788389766588807,.530164897441864,.3932034969329834,0,3,6,11,14,2,-1,13,11,7,1,2,6,12,7,1,2,-.0022163488902151585,.5630694031715393,.4757033884525299,0,3,8,5,2,2,-1,8,5,1,1,2,9,6,1,1,2,.00011568699846975505,.4307535886764526,.5535702705383301,0,2,13,9,2,3,-1,13,9,1,3,2,-.007201728876680136,.144488200545311,.5193064212799072,0,2,1,1,3,12,-1,2,1,1,12,3,.0008908127201721072,.4384432137012482,.5593621134757996,0,2,17,4,1,3,-1,17,5,1,1,3,.00019605009583756328,.5340415835380554,.4705956876277924,0,2,2,4,1,3,-1,2,5,1,1,3,.0005202214233577251,.5213856101036072,.3810079097747803,0,2,14,5,1,3,-1,14,6,1,1,3,.0009458857239224017,.4769414961338043,.6130738854408264,0,2,7,16,2,3,-1,7,17,2,1,3,916984718060121e-19,.4245009124279022,.5429363250732422,0,3,8,13,4,6,-1,10,13,2,3,2,8,16,2,3,2,.002183320000767708,.5457730889320374,.419107586145401,0,2,5,5,1,3,-1,5,6,1,1,3,-.0008603967144154012,.5764588713645935,.4471659958362579,0,2,16,0,4,20,-1,16,0,2,20,2,-.0132362395524979,.6372823119163513,.4695009887218475,0,3,5,1,2,6,-1,5,1,1,3,2,6,4,1,3,2,.0004337670106906444,.5317873954772949,.394582986831665,69.22987365722656,140,0,2,5,4,10,4,-1,5,6,10,2,2,-.024847149848938,.6555516719818115,.3873311877250671,0,2,15,2,4,12,-1,15,2,2,12,2,.006134861148893833,.374807208776474,.5973997712135315,0,2,7,6,4,12,-1,7,12,4,6,2,.006449849810451269,.542549192905426,.2548811137676239,0,2,14,5,1,8,-1,14,9,1,4,2,.0006349121103994548,.2462442070245743,.5387253761291504,0,3,1,4,14,10,-1,1,4,7,5,2,8,9,7,5,2,.0014023890253156424,.5594322085380554,.3528657853603363,0,3,11,6,6,14,-1,14,6,3,7,2,11,13,3,7,2,.0003004400059580803,.3958503901958466,.576593816280365,0,3,3,6,6,14,-1,3,6,3,7,2,6,13,3,7,2,.00010042409849120304,.3698996901512146,.5534998178482056,0,2,4,9,15,2,-1,9,9,5,2,3,-.005084149073809385,.3711090981960297,.5547800064086914,0,2,7,14,6,3,-1,7,15,6,1,3,-.0195372607558966,.7492755055427551,.4579297006130219,0,3,6,3,14,4,-1,13,3,7,2,2,6,5,7,2,2,-7453274065483129e-21,.5649787187576294,.390406996011734,0,2,1,9,15,2,-1,6,9,5,2,3,-.0036079459823668003,.3381088078022003,.5267801284790039,0,2,6,11,8,9,-1,6,14,8,3,3,.002069750102236867,.5519291162490845,.3714388906955719,0,2,7,4,3,8,-1,8,4,1,8,3,-.0004646384040825069,.5608214735984802,.4113566875457764,0,2,14,6,2,6,-1,14,9,2,3,2,.0007549045258201659,.3559206128120422,.532935619354248,0,3,5,7,6,4,-1,5,7,3,2,2,8,9,3,2,2,-.0009832223877310753,.5414795875549316,.3763205111026764,0,2,1,1,18,19,-1,7,1,6,19,3,-.0199406407773495,.634790301322937,.4705299139022827,0,2,1,2,6,5,-1,4,2,3,5,2,.0037680300883948803,.3913489878177643,.5563716292381287,0,2,12,17,6,2,-1,12,18,6,1,2,-.009452850557863712,.2554892897605896,.5215116739273071,0,2,2,17,6,2,-1,2,18,6,1,2,.002956084907054901,.5174679160118103,.3063920140266419,0,2,17,3,3,6,-1,17,5,3,2,3,.009107873775064945,.5388448238372803,.2885963022708893,0,2,8,17,3,3,-1,8,18,3,1,3,.0018219229532405734,.4336043000221252,.58521968126297,0,2,10,13,2,6,-1,10,16,2,3,2,.0146887395530939,.5287361741065979,.2870005965232849,0,2,7,13,6,3,-1,7,14,6,1,3,-.0143879903480411,.701944887638092,.4647370874881744,0,2,17,3,3,6,-1,17,5,3,2,3,-.0189866498112679,.2986552119255066,.5247011780738831,0,2,8,13,2,3,-1,8,14,2,1,3,.0011527639580890536,.4323473870754242,.593166172504425,0,2,9,3,6,2,-1,11,3,2,2,3,.0109336702153087,.5286864042282104,.3130319118499756,0,2,0,3,3,6,-1,0,5,3,2,3,-.0149327302351594,.2658419013023377,.508407711982727,0,2,8,5,4,6,-1,8,7,4,2,3,-.0002997053961735219,.5463526844978333,.374072402715683,0,2,5,5,3,2,-1,5,6,3,1,2,.004167762119323015,.4703496992588043,.7435721755027771,0,2,10,1,3,4,-1,11,1,1,4,3,-.00639053201302886,.2069258987903595,.5280538201332092,0,2,1,2,5,9,-1,1,5,5,3,3,.004502960946410894,.518264889717102,.348354309797287,0,2,13,6,2,3,-1,13,7,2,1,3,-.009204036556184292,.680377721786499,.4932360053062439,0,2,0,6,14,3,-1,7,6,7,3,2,.0813272595405579,.5058398842811584,.2253051996231079,0,2,2,11,18,8,-1,2,15,18,4,2,-.150792807340622,.2963424921035767,.5264679789543152,0,2,5,6,2,3,-1,5,7,2,1,3,.0033179009333252907,.4655495882034302,.7072932124137878,0,3,10,6,4,2,-1,12,6,2,1,2,10,7,2,1,2,.0007740280125290155,.4780347943305969,.5668237805366516,0,3,6,6,4,2,-1,6,6,2,1,2,8,7,2,1,2,.0006819954141974449,.4286996126174927,.5722156763076782,0,2,10,1,3,4,-1,11,1,1,4,3,.0053671570494771,.5299307107925415,.3114621937274933,0,2,7,1,2,7,-1,8,1,1,7,2,9701866656541824e-20,.3674638867378235,.5269461870193481,0,2,4,2,15,14,-1,4,9,15,7,2,-.1253408938646317,.2351492047309876,.5245791077613831,0,2,8,7,3,2,-1,9,7,1,2,3,-.005251626949757338,.7115936875343323,.4693767130374908,0,3,2,3,18,4,-1,11,3,9,2,2,2,5,9,2,2,-.007834210991859436,.4462651014328003,.5409085750579834,0,2,9,7,2,2,-1,10,7,1,2,2,-.001131006982177496,.5945618748664856,.4417662024497986,0,2,13,9,2,3,-1,13,9,1,3,2,.0017601120052859187,.5353249907493591,.3973453044891357,0,2,5,2,6,2,-1,7,2,2,2,3,-.00081581249833107,.3760268092155457,.5264726877212524,0,2,9,5,2,7,-1,9,5,1,7,2,-.003868758911266923,.6309912800788879,.4749819934368134,0,2,5,9,2,3,-1,6,9,1,3,2,.0015207129763439298,.5230181813240051,.3361223936080933,0,2,6,0,14,18,-1,6,9,14,9,2,.545867383480072,.5167139768600464,.1172635033726692,0,2,2,16,6,3,-1,2,17,6,1,3,.0156501904129982,.4979439079761505,.1393294930458069,0,2,9,7,3,6,-1,10,7,1,6,3,-.0117318602278829,.7129650712013245,.4921196103096008,0,2,7,8,4,3,-1,7,9,4,1,3,-.006176512222737074,.2288102954626083,.5049701929092407,0,2,7,12,6,3,-1,7,13,6,1,3,.0022457661107182503,.4632433950901032,.6048725843429565,0,2,9,12,2,3,-1,9,13,2,1,3,-.005191586911678314,.6467421054840088,.4602192938327789,0,2,7,12,6,2,-1,9,12,2,2,3,-.0238278806209564,.1482000946998596,.5226079225540161,0,2,5,11,4,6,-1,5,14,4,3,2,.0010284580057486892,.5135489106178284,.3375957012176514,0,2,11,12,7,2,-1,11,13,7,1,2,-.0100788502022624,.2740561068058014,.5303567051887512,0,3,6,10,8,6,-1,6,10,4,3,2,10,13,4,3,2,.002616893034428358,.533267080783844,.3972454071044922,0,2,11,10,3,4,-1,11,12,3,2,2,.000543853675480932,.5365604162216187,.4063411951065064,0,2,9,16,2,3,-1,9,17,2,1,3,.005351051222532988,.4653759002685547,.6889045834541321,0,2,13,3,1,9,-1,13,6,1,3,3,-.0015274790348485112,.5449501276016235,.3624723851680756,0,2,1,13,14,6,-1,1,15,14,2,3,-.0806244164705276,.1656087040901184,.5000287294387817,0,2,13,6,1,6,-1,13,9,1,3,2,.0221920292824507,.5132731199264526,.2002808004617691,0,2,0,4,3,8,-1,1,4,1,8,3,.007310063112527132,.4617947936058044,.6366536021232605,0,2,18,0,2,18,-1,18,0,1,18,2,-.006406307220458984,.5916250944137573,.4867860972881317,0,2,2,3,6,2,-1,2,4,6,1,2,-.0007641504053026438,.388840913772583,.5315797924995422,0,2,9,0,8,6,-1,9,2,8,2,3,.0007673448999412358,.4159064888954163,.5605279803276062,0,2,6,6,1,6,-1,6,9,1,3,2,.0006147450185380876,.3089022040367127,.5120148062705994,0,2,14,8,6,3,-1,14,9,6,1,3,-.005010527092963457,.3972199857234955,.5207306146621704,0,2,0,0,2,18,-1,1,0,1,18,2,-.008690913207828999,.6257408261299133,.4608575999736786,0,3,1,18,18,2,-1,10,18,9,1,2,1,19,9,1,2,-.016391459852457,.2085209935903549,.5242266058921814,0,2,3,15,2,2,-1,3,16,2,1,2,.00040973909199237823,.5222427248954773,.3780320882797241,0,2,8,14,5,3,-1,8,15,5,1,3,-.002524228999391198,.5803927183151245,.4611890017986298,0,2,8,14,2,3,-1,8,15,2,1,3,.0005094531225040555,.4401271939277649,.5846015810966492,0,2,12,3,3,3,-1,13,3,1,3,3,.001965641975402832,.5322325229644775,.4184590876102448,0,2,7,5,6,2,-1,9,5,2,2,3,.0005629889783449471,.3741844892501831,.5234565734863281,0,2,15,5,5,2,-1,15,6,5,1,2,-.0006794679793529212,.4631041884422302,.5356478095054626,0,2,0,5,5,2,-1,0,6,5,1,2,.007285634987056255,.5044670104980469,.2377564013004303,0,2,17,14,1,6,-1,17,17,1,3,2,-.0174594894051552,.7289121150970459,.5050435066223145,0,2,2,9,9,3,-1,5,9,3,3,3,-.0254217498004436,.6667134761810303,.4678100049495697,0,2,12,3,3,3,-1,13,3,1,3,3,-.0015647639520466328,.4391759037971497,.532362699508667,0,2,0,0,4,18,-1,2,0,2,18,2,.0114443600177765,.4346440136432648,.5680012106895447,0,2,17,6,1,3,-1,17,7,1,1,3,-.0006735255010426044,.44771409034729,.5296812057495117,0,2,2,14,1,6,-1,2,17,1,3,2,.009319420903921127,.4740200042724609,.7462607026100159,0,2,19,8,1,2,-1,19,9,1,1,2,.00013328490604180843,.536506175994873,.475213497877121,0,2,5,3,3,3,-1,6,3,1,3,3,-.007881579920649529,.1752219051122665,.5015255212783813,0,2,9,16,2,3,-1,9,17,2,1,3,-.005798568017780781,.7271236777305603,.4896200895309448,0,2,2,6,1,3,-1,2,7,1,1,3,-.0003892249951604754,.4003908932209015,.5344941020011902,0,3,12,4,8,2,-1,16,4,4,1,2,12,5,4,1,2,-.0019288610201328993,.5605612993240356,.4803955852985382,0,3,0,4,8,2,-1,0,4,4,1,2,4,5,4,1,2,.008421415463089943,.4753246903419495,.7623608708381653,0,2,2,16,18,4,-1,2,18,18,2,2,.008165587671101093,.5393261909484863,.419164389371872,0,2,7,15,2,4,-1,7,17,2,2,2,.00048280550981871784,.4240800142288208,.5399821996688843,0,2,4,0,14,3,-1,4,1,14,1,3,-.002718663075938821,.4244599938392639,.5424923896789551,0,2,0,0,4,20,-1,2,0,2,20,2,-.0125072300434113,.5895841717720032,.4550411105155945,0,3,12,4,4,8,-1,14,4,2,4,2,12,8,2,4,2,-.0242865197360516,.2647134959697723,.518917977809906,0,3,6,7,2,2,-1,6,7,1,1,2,7,8,1,1,2,-.0029676330741494894,.734768271446228,.4749749898910523,0,2,10,6,2,3,-1,10,7,2,1,3,-.0125289997085929,.2756049931049347,.5177599787712097,0,2,8,7,3,2,-1,8,8,3,1,2,-.0010104000102728605,.3510560989379883,.5144724249839783,0,2,8,2,6,12,-1,8,8,6,6,2,-.0021348530426621437,.5637925863265991,.466731995344162,0,2,4,0,11,12,-1,4,4,11,4,3,.0195642597973347,.4614573121070862,.6137639880180359,0,2,14,9,6,11,-1,16,9,2,11,3,-.0971463471651077,.2998378872871399,.5193555951118469,0,2,0,14,4,3,-1,0,15,4,1,3,.00450145686045289,.5077884793281555,.3045755922794342,0,2,9,10,2,3,-1,9,11,2,1,3,.006370697170495987,.486101895570755,.6887500882148743,0,2,5,11,3,2,-1,5,12,3,1,2,-.009072152897715569,.1673395931720734,.5017563104629517,0,2,9,15,3,3,-1,10,15,1,3,3,-.005353720858693123,.2692756950855255,.524263322353363,0,2,8,8,3,4,-1,9,8,1,4,3,-.0109328404068947,.7183864116668701,.4736028909683228,0,2,9,15,3,3,-1,10,15,1,3,3,.008235607296228409,.5223966836929321,.2389862984418869,0,2,7,7,3,2,-1,8,7,1,2,3,-.0010038160253316164,.5719355940818787,.4433943033218384,0,3,2,10,16,4,-1,10,10,8,2,2,2,12,8,2,2,.004085912834852934,.5472841858863831,.4148836135864258,0,2,2,3,4,17,-1,4,3,2,17,2,.1548541933298111,.4973812103271484,.0610615983605385,0,2,15,13,2,7,-1,15,13,1,7,2,.00020897459762636572,.4709174036979675,.542388916015625,0,2,2,2,6,1,-1,5,2,3,1,2,.0003331699117552489,.4089626967906952,.5300992131233215,0,2,5,2,12,4,-1,9,2,4,4,3,-.0108134001493454,.6104369759559631,.4957334101200104,0,3,6,0,8,12,-1,6,0,4,6,2,10,6,4,6,2,.0456560105085373,.5069689154624939,.2866660058498383,0,3,13,7,2,2,-1,14,7,1,1,2,13,8,1,1,2,.0012569549726322293,.484691709280014,.631817102432251,0,2,0,12,20,6,-1,0,14,20,2,3,-.120150700211525,.0605261400341988,.4980959892272949,0,2,14,7,2,3,-1,14,7,1,3,2,-.00010533799650147557,.5363109707832336,.4708042144775391,0,2,0,8,9,12,-1,3,8,3,12,3,-.2070319056510925,.059660330414772,.497909814119339,0,2,3,0,16,2,-1,3,0,8,2,2,.00012909180077258497,.4712977111339569,.5377997756004333,0,2,6,15,3,3,-1,6,16,3,1,3,.000388185289921239,.4363538026809692,.5534191131591797,0,2,8,15,6,3,-1,8,16,6,1,3,-.0029243610333651304,.5811185836791992,.4825215935707092,0,2,0,10,1,6,-1,0,12,1,2,3,.0008388233254663646,.5311700105667114,.403813898563385,0,2,10,9,4,3,-1,10,10,4,1,3,-.0019061550265178084,.3770701885223389,.526001513004303,0,2,9,15,2,3,-1,9,16,2,1,3,.00895143486559391,.4766167998313904,.7682183980941772,0,2,5,7,10,1,-1,5,7,5,1,2,.0130834598094225,.5264462828636169,.3062222003936768,0,2,4,0,12,19,-1,10,0,6,19,2,-.2115933001041412,.6737198233604431,.4695810079574585,0,3,0,6,20,6,-1,10,6,10,3,2,0,9,10,3,2,.0031493250280618668,.5644835233688354,.4386953115463257,0,3,3,6,2,2,-1,3,6,1,1,2,4,7,1,1,2,.00039754100725986063,.4526061117649078,.5895630121231079,0,3,15,6,2,2,-1,16,6,1,1,2,15,7,1,1,2,-.0013814480043947697,.6070582270622253,.4942413866519928,0,3,3,6,2,2,-1,3,6,1,1,2,4,7,1,1,2,-.0005812218878418207,.5998213291168213,.4508252143859863,0,2,14,4,1,12,-1,14,10,1,6,2,-.002390532987192273,.420558899641037,.5223848223686218,0,3,2,5,16,10,-1,2,5,8,5,2,10,10,8,5,2,.0272689294070005,.5206447243690491,.3563301861286163,0,2,9,17,3,2,-1,10,17,1,2,3,-.0037658358924090862,.3144704103469849,.5218814015388489,0,2,1,4,2,2,-1,1,5,2,1,2,-.0014903489500284195,.338019609451294,.5124437212944031,0,2,5,0,15,5,-1,10,0,5,5,3,-.0174282304942608,.5829960703849792,.4919725954532623,0,2,0,0,15,5,-1,5,0,5,5,3,-.0152780301868916,.6163144707679749,.4617887139320374,0,2,11,2,2,17,-1,11,2,1,17,2,.0319956094026566,.5166357159614563,.171276405453682,0,2,7,2,2,17,-1,8,2,1,17,2,-.003825671039521694,.3408012092113495,.5131387710571289,0,2,15,11,2,9,-1,15,11,1,9,2,-.00851864367723465,.6105518937110901,.4997941851615906,0,2,3,11,2,9,-1,4,11,1,9,2,.0009064162150025368,.4327270984649658,.5582311153411865,0,2,5,16,14,4,-1,5,16,7,4,2,.0103448498994112,.4855653047561646,.5452420115470886,79.24907684326172,160,0,2,1,4,18,1,-1,7,4,6,1,3,.007898182608187199,.333252489566803,.5946462154388428,0,3,13,7,6,4,-1,16,7,3,2,2,13,9,3,2,2,.0016170160379260778,.3490641117095947,.5577868819236755,0,2,9,8,2,12,-1,9,12,2,4,3,-.0005544974119402468,.5542566180229187,.3291530013084412,0,2,12,1,6,6,-1,12,3,6,2,3,.001542898011393845,.3612579107284546,.5545979142189026,0,3,5,2,6,6,-1,5,2,3,3,2,8,5,3,3,2,-.0010329450014978647,.3530139029026032,.5576140284538269,0,3,9,16,6,4,-1,12,16,3,2,2,9,18,3,2,2,.0007769815856590867,.3916778862476349,.5645321011543274,0,2,1,2,18,3,-1,7,2,6,3,3,.143203005194664,.4667482078075409,.7023633122444153,0,2,7,4,9,10,-1,7,9,9,5,2,-.007386649027466774,.3073684871196747,.5289257764816284,0,2,5,9,4,4,-1,7,9,2,4,2,-.0006293674232438207,.562211811542511,.4037049114704132,0,2,11,10,3,6,-1,11,13,3,3,2,.0007889352855272591,.5267661213874817,.3557874858379364,0,2,7,11,5,3,-1,7,12,5,1,3,-.0122280502691865,.6668320894241333,.4625549912452698,0,3,7,11,6,6,-1,10,11,3,3,2,7,14,3,3,2,.0035420239437371492,.5521438121795654,.3869673013687134,0,2,0,0,10,9,-1,0,3,10,3,3,-.0010585320414975286,.3628678023815155,.5320926904678345,0,2,13,14,1,6,-1,13,16,1,2,3,14935660146875307e-21,.4632444977760315,.5363323092460632,0,2,0,2,3,6,-1,0,4,3,2,3,.005253770854324102,.5132231712341309,.3265708982944489,0,2,8,14,4,3,-1,8,15,4,1,3,-.008233802393078804,.6693689823150635,.4774140119552612,0,2,6,14,1,6,-1,6,16,1,2,3,2186681012972258e-20,.405386209487915,.5457931160926819,0,2,9,15,2,3,-1,9,16,2,1,3,-.0038150229956954718,.645499587059021,.4793178141117096,0,2,6,4,3,3,-1,7,4,1,3,3,.0011105879675596952,.5270407199859619,.3529678881168366,0,2,9,0,11,3,-1,9,1,11,1,3,-.005770768970251083,.3803547024726868,.5352957844734192,0,2,0,6,20,3,-1,0,7,20,1,3,-.003015833906829357,.533940315246582,.3887133002281189,0,2,10,1,1,2,-1,10,2,1,1,2,-.0008545368909835815,.3564616143703461,.5273603796958923,0,2,9,6,2,6,-1,10,6,1,6,2,.0110505102202296,.4671907126903534,.6849737763404846,0,2,5,8,12,1,-1,9,8,4,1,3,.0426058396697044,.51514732837677,.0702200904488564,0,2,3,8,12,1,-1,7,8,4,1,3,-.0030781750101596117,.3041661083698273,.5152602195739746,0,2,9,7,3,5,-1,10,7,1,5,3,-.005481572821736336,.6430295705795288,.4897229969501495,0,2,3,9,6,2,-1,6,9,3,2,2,.003188186092302203,.5307493209838867,.3826209902763367,0,2,12,9,3,3,-1,12,10,3,1,3,.00035947180003859103,.4650047123432159,.5421904921531677,0,2,7,0,6,1,-1,9,0,2,1,3,-.004070503171533346,.2849679887294769,.5079116225242615,0,2,12,9,3,3,-1,12,10,3,1,3,-.0145941702648997,.2971645891666412,.5128461718559265,0,2,7,10,2,1,-1,8,10,1,1,2,-.00011947689927183092,.563109815120697,.4343082010746002,0,2,6,4,9,13,-1,9,4,3,13,3,-.0006934464909136295,.4403578042984009,.5359959006309509,0,2,6,8,4,2,-1,6,9,4,1,2,14834799912932795e-21,.3421008884906769,.5164697766304016,0,2,16,2,4,6,-1,16,2,2,6,2,.009029698558151722,.4639343023300171,.6114075183868408,0,2,0,17,6,3,-1,0,18,6,1,3,-.008064081892371178,.2820158898830414,.5075494050979614,0,2,10,10,3,10,-1,10,15,3,5,2,.0260621197521687,.5208905935287476,.2688778042793274,0,2,8,7,3,5,-1,9,7,1,5,3,.0173146594315767,.4663713872432709,.6738539934158325,0,2,10,4,4,3,-1,10,4,2,3,2,.0226666405797005,.5209349989891052,.2212723940610886,0,2,8,4,3,8,-1,9,4,1,8,3,-.002196592977270484,.6063101291656494,.4538190066814423,0,2,6,6,9,13,-1,9,6,3,13,3,-.009528247639536858,.4635204970836639,.5247430801391602,0,3,6,0,8,12,-1,6,0,4,6,2,10,6,4,6,2,.00809436198323965,.5289440155029297,.3913882076740265,0,2,14,2,6,8,-1,16,2,2,8,3,-.0728773325681686,.7752001881599426,.4990234971046448,0,2,6,0,3,6,-1,7,0,1,6,3,-.006900952197611332,.2428039014339447,.5048090219497681,0,2,14,2,6,8,-1,16,2,2,8,3,-.0113082397729158,.5734364986419678,.4842376112937927,0,2,0,5,6,6,-1,0,8,6,3,2,.0596132017672062,.5029836297035217,.2524977028369904,0,3,9,12,6,2,-1,12,12,3,1,2,9,13,3,1,2,-.0028624620754271746,.6073045134544373,.4898459911346436,0,2,8,17,3,2,-1,9,17,1,2,3,.00447814492508769,.5015289187431335,.2220316976308823,0,3,11,6,2,2,-1,12,6,1,1,2,11,7,1,1,2,-.001751324045471847,.6614428758621216,.4933868944644928,0,2,1,9,18,2,-1,7,9,6,2,3,.0401634201407433,.5180878043174744,.3741044998168945,0,3,11,6,2,2,-1,12,6,1,1,2,11,7,1,1,2,.0003476894926279783,.4720416963100433,.5818032026290894,0,2,3,4,12,8,-1,7,4,4,8,3,.00265516503714025,.3805010914802551,.5221335887908936,0,2,13,11,5,3,-1,13,12,5,1,3,-.008770627900958061,.294416606426239,.5231295228004456,0,2,9,10,2,3,-1,9,11,2,1,3,-.005512209143489599,.7346177101135254,.4722816944122315,0,2,14,7,2,3,-1,14,7,1,3,2,.0006867204210720956,.5452876091003418,.424241304397583,0,2,5,4,1,3,-1,5,5,1,1,3,.0005601966986432672,.439886212348938,.5601285099983215,0,2,13,4,2,3,-1,13,5,2,1,3,.0024143769405782223,.4741686880588532,.6136621832847595,0,2,5,4,2,3,-1,5,5,2,1,3,-.0015680900542065501,.604455292224884,.4516409933567047,0,2,9,8,2,3,-1,9,9,2,1,3,-.0036827491130679846,.2452459037303925,.5294982194900513,0,2,8,9,2,2,-1,8,10,2,1,2,-.000294091907562688,.3732838034629822,.5251451134681702,0,2,15,14,1,4,-1,15,16,1,2,2,.00042847759323194623,.5498809814453125,.4065535068511963,0,2,3,12,2,2,-1,3,13,2,1,2,-.004881707020103931,.2139908969402313,.4999957084655762,0,3,12,15,2,2,-1,13,15,1,1,2,12,16,1,1,2,.00027272020815871656,.465028703212738,.581342875957489,0,2,9,13,2,2,-1,9,14,2,1,2,.00020947199664078653,.4387486875057221,.5572792887687683,0,2,4,11,14,9,-1,4,14,14,3,3,.0485011897981167,.5244972705841064,.3212889134883881,0,2,7,13,4,3,-1,7,14,4,1,3,-.004516641143709421,.605681300163269,.4545882046222687,0,2,15,14,1,4,-1,15,16,1,2,2,-.0122916800901294,.2040929049253464,.5152214169502258,0,2,4,14,1,4,-1,4,16,1,2,2,.0004854967992287129,.5237604975700378,.3739503026008606,0,2,14,0,6,13,-1,16,0,2,13,3,.0305560491979122,.4960533976554871,.5938246250152588,0,3,4,1,2,12,-1,4,1,1,6,2,5,7,1,6,2,-.00015105320198927075,.5351303815841675,.4145204126834869,0,3,11,14,6,6,-1,14,14,3,3,2,11,17,3,3,2,.0024937440175563097,.4693366885185242,.5514941215515137,0,3,3,14,6,6,-1,3,14,3,3,2,6,17,3,3,2,-.012382130138576,.6791396737098694,.4681667983531952,0,2,14,17,3,2,-1,14,18,3,1,2,-.005133346188813448,.3608739078044891,.5229160189628601,0,2,3,17,3,2,-1,3,18,3,1,2,.0005191927775740623,.5300073027610779,.3633613884449005,0,2,14,0,6,13,-1,16,0,2,13,3,.1506042033433914,.515731692314148,.2211782038211823,0,2,0,0,6,13,-1,2,0,2,13,3,.007714414969086647,.4410496950149536,.5776609182357788,0,2,10,10,7,6,-1,10,12,7,2,3,.009444352239370346,.5401855111122131,.375665009021759,0,3,6,15,2,2,-1,6,15,1,1,2,7,16,1,1,2,.00025006249779835343,.4368270933628082,.5607374906539917,0,3,6,11,8,6,-1,10,11,4,3,2,6,14,4,3,2,-.003307715058326721,.4244799017906189,.551823079586029,0,3,7,6,2,2,-1,7,6,1,1,2,8,7,1,1,2,.0007404891075566411,.4496962130069733,.5900576710700989,0,3,2,2,16,6,-1,10,2,8,3,2,2,5,8,3,2,.0440920516848564,.5293493270874023,.3156355023384094,0,2,5,4,3,3,-1,5,5,3,1,3,.0033639909233897924,.4483296871185303,.5848662257194519,0,2,11,7,3,10,-1,11,12,3,5,2,-.003976007923483849,.4559507071971893,.5483639240264893,0,2,6,7,3,10,-1,6,12,3,5,2,.0027716930489987135,.534178614616394,.3792484104633331,0,2,10,7,3,2,-1,11,7,1,2,3,-.00024123019829858094,.5667188763618469,.4576973021030426,0,2,8,12,4,2,-1,8,13,4,1,2,.0004942566738463938,.4421244859695435,.5628787279129028,0,2,10,1,1,3,-1,10,2,1,1,3,-.0003887646889779717,.4288370907306671,.5391063094139099,0,3,1,2,4,18,-1,1,2,2,9,2,3,11,2,9,2,-.0500488989055157,.6899513006210327,.4703742861747742,0,2,12,4,4,12,-1,12,10,4,6,2,-.0366354808211327,.2217779010534287,.5191826224327087,0,2,0,0,1,6,-1,0,2,1,2,3,.0024273579474538565,.5136224031448364,.3497397899627686,0,2,9,11,2,3,-1,9,12,2,1,3,.001955803018063307,.4826192855834961,.640838086605072,0,2,8,7,4,3,-1,8,8,4,1,3,-.0017494610510766506,.3922835886478424,.5272685289382935,0,2,10,7,3,2,-1,11,7,1,2,3,.0139550799503922,.507820188999176,.8416504859924316,0,2,7,7,3,2,-1,8,7,1,2,3,-.00021896739781368524,.5520489811897278,.4314234852790833,0,2,9,4,6,1,-1,11,4,2,1,3,-.0015131309628486633,.3934605121612549,.5382571220397949,0,2,8,7,2,3,-1,9,7,1,3,2,-.004362280014902353,.7370628714561462,.4736475944519043,0,3,12,7,8,6,-1,16,7,4,3,2,12,10,4,3,2,.0651605874300003,.5159279704093933,.328159511089325,0,3,0,7,8,6,-1,0,7,4,3,2,4,10,4,3,2,-.0023567399475723505,.3672826886177063,.5172886252403259,0,3,18,2,2,10,-1,19,2,1,5,2,18,7,1,5,2,.0151466596871614,.5031493902206421,.6687604188919067,0,2,0,2,6,4,-1,3,2,3,4,2,-.0228509604930878,.676751971244812,.4709596931934357,0,2,9,4,6,1,-1,11,4,2,1,3,.004886765033006668,.5257998108863831,.4059878885746002,0,3,7,15,2,2,-1,7,15,1,1,2,8,16,1,1,2,.0017619599821045995,.4696272909641266,.6688278913497925,0,2,11,13,1,6,-1,11,16,1,3,2,-.0012942519970238209,.4320712983608246,.5344281792640686,0,2,8,13,1,6,-1,8,16,1,3,2,.0109299495816231,.4997706115245819,.1637486070394516,0,2,14,3,2,1,-1,14,3,1,1,2,2995848990394734e-20,.4282417893409729,.5633224248886108,0,2,8,15,2,3,-1,8,16,2,1,3,-.0065884361974895,.677212119102478,.4700526893138886,0,2,12,15,7,4,-1,12,17,7,2,2,.0032527779694646597,.531339704990387,.4536148905754089,0,2,4,14,12,3,-1,4,15,12,1,3,-.00404357397928834,.5660061836242676,.4413388967514038,0,2,10,3,3,2,-1,11,3,1,2,3,-.0012523540062829852,.3731913864612579,.5356451869010925,0,2,4,12,2,2,-1,4,13,2,1,2,.00019246719602961093,.5189986228942871,.3738811016082764,0,2,10,11,4,6,-1,10,14,4,3,2,-.038589671254158,.2956373989582062,.51888108253479,0,3,7,13,2,2,-1,7,13,1,1,2,8,14,1,1,2,.0001548987056594342,.4347135126590729,.5509533286094666,0,3,4,11,14,4,-1,11,11,7,2,2,4,13,7,2,2,-.0337638482451439,.3230330049991608,.5195475816726685,0,2,1,18,18,2,-1,7,18,6,2,3,-.008265706710517406,.5975489020347595,.4552114009857178,0,3,11,18,2,2,-1,12,18,1,1,2,11,19,1,1,2,14481440302915871e-21,.4745678007602692,.5497426986694336,0,3,7,18,2,2,-1,7,18,1,1,2,8,19,1,1,2,14951299817766994e-21,.4324473142623901,.5480644106864929,0,2,12,18,8,2,-1,12,19,8,1,2,-.018741799518466,.1580052971839905,.517853319644928,0,2,7,14,6,2,-1,7,15,6,1,2,.0017572239739820361,.4517636895179749,.5773764252662659,0,3,8,12,4,8,-1,10,12,2,4,2,8,16,2,4,2,-.0031391119118779898,.4149647951126099,.5460842251777649,0,2,4,9,3,3,-1,4,10,3,1,3,6665677938144654e-20,.4039090871810913,.5293084979057312,0,2,7,10,6,2,-1,9,10,2,2,3,.006774342153221369,.4767651855945587,.612195611000061,0,2,5,0,4,15,-1,7,0,2,15,2,-.0073868161998689175,.3586258888244629,.5187280774116516,0,2,8,6,12,14,-1,12,6,4,14,3,.0140409301966429,.4712139964103699,.5576155781745911,0,2,5,16,3,3,-1,5,17,3,1,3,-.005525832995772362,.2661027014255524,.5039281249046326,0,2,8,1,12,19,-1,12,1,4,19,3,.3868423998355866,.5144339799880981,.2525899112224579,0,2,3,0,3,2,-1,3,1,3,1,2,.0001145924034062773,.4284994900226593,.5423371195793152,0,2,10,12,4,5,-1,10,12,2,5,2,-.0184675697237253,.3885835111141205,.5213062167167664,0,2,6,12,4,5,-1,8,12,2,5,2,-.0004590701137203723,.541256308555603,.4235909879207611,0,3,11,11,2,2,-1,12,11,1,1,2,11,12,1,1,2,.0012527540093287826,.4899305105209351,.6624091267585754,0,2,0,2,3,6,-1,0,4,3,2,3,.001491060946136713,.5286778211593628,.4040051996707916,0,3,11,11,2,2,-1,12,11,1,1,2,11,12,1,1,2,-.0007543556275777519,.6032990217208862,.4795120060443878,0,2,7,6,4,10,-1,7,11,4,5,2,-.0069478838704526424,.408440113067627,.5373504161834717,0,3,11,11,2,2,-1,12,11,1,1,2,11,12,1,1,2,.0002809292054735124,.4846062958240509,.5759382247924805,0,2,2,13,5,2,-1,2,14,5,1,2,.0009607371757738292,.5164741277694702,.3554979860782623,0,3,11,11,2,2,-1,12,11,1,1,2,11,12,1,1,2,-.0002688392996788025,.5677582025527954,.4731765985488892,0,3,7,11,2,2,-1,7,11,1,1,2,8,12,1,1,2,.0021599370520561934,.4731487035751343,.7070567011833191,0,2,14,13,3,3,-1,14,14,3,1,3,.005623530130833387,.5240243077278137,.2781791985034943,0,2,3,13,3,3,-1,3,14,3,1,3,-.005024399142712355,.2837013900279999,.5062304139137268,0,2,9,14,2,3,-1,9,15,2,1,3,-.009761163964867592,.7400717735290527,.4934569001197815,0,2,8,7,3,3,-1,8,8,3,1,3,.004151510074734688,.5119131207466125,.3407008051872253,0,2,13,5,3,3,-1,13,6,3,1,3,.006246508099138737,.4923788011074066,.6579058766365051,0,2,0,9,5,3,-1,0,10,5,1,3,-.007059747818857431,.2434711009263992,.503284215927124,0,2,13,5,3,3,-1,13,6,3,1,3,-.0020587709732353687,.590031087398529,.469508707523346,0,3,9,12,2,8,-1,9,12,1,4,2,10,16,1,4,2,-.0024146060459315777,.3647317886352539,.5189201831817627,0,3,11,7,2,2,-1,12,7,1,1,2,11,8,1,1,2,-.0014817609917372465,.6034948229789734,.4940128028392792,0,2,0,16,6,4,-1,3,16,3,4,2,-.0063016400672495365,.5818989872932434,.4560427963733673,0,2,10,6,2,3,-1,10,7,2,1,3,.00347634288482368,.5217475891113281,.3483993113040924,0,2,9,5,2,6,-1,9,7,2,2,3,-.0222508702427149,.2360700070858002,.5032082796096802,0,2,12,15,8,4,-1,12,15,4,4,2,-.030612550675869,.6499186754226685,.4914919137954712,0,2,0,14,8,6,-1,4,14,4,6,2,.013057479634881,.4413323104381561,.5683764219284058,0,2,9,0,3,2,-1,10,0,1,2,3,-.0006009574281051755,.4359731078147888,.5333483219146729,0,2,4,15,4,2,-1,6,15,2,2,2,-.0004151425091549754,.550406277179718,.4326060116291046,0,2,12,7,3,13,-1,13,7,1,13,3,-.013776290230453,.4064112901687622,.5201548933982849,0,2,5,7,3,13,-1,6,7,1,13,3,-.0322965085506439,.0473519712686539,.4977194964885712,0,2,9,6,3,9,-1,9,9,3,3,3,.0535569787025452,.4881733059883118,.666693925857544,0,2,4,4,7,12,-1,4,10,7,6,2,.008188954554498196,.5400037169456482,.4240820109844208,0,3,12,12,2,2,-1,13,12,1,1,2,12,13,1,1,2,.00021055320394225419,.4802047908306122,.5563852787017822,0,3,6,12,2,2,-1,6,12,1,1,2,7,13,1,1,2,-.00243827304802835,.7387793064117432,.4773685038089752,0,3,8,9,4,2,-1,10,9,2,1,2,8,10,2,1,2,.003283557016402483,.5288546085357666,.3171291947364807,0,3,3,6,2,2,-1,3,6,1,1,2,4,7,1,1,2,.00237295706756413,.4750812947750092,.7060170769691467,0,2,16,6,3,2,-1,16,7,3,1,2,-.0014541699783876538,.3811730146408081,.533073902130127,87.69602966308594,177,0,2,0,7,19,4,-1,0,9,19,2,2,.0557552389800549,.4019156992435455,.6806036829948425,0,2,10,2,10,1,-1,10,2,5,1,2,.002473024884238839,.3351148962974548,.5965719819068909,0,2,9,4,2,12,-1,9,10,2,6,2,-.00035031698644161224,.5557708144187927,.3482286930084229,0,2,12,18,4,1,-1,12,18,2,1,2,.0005416763015091419,.426085889339447,.5693380832672119,0,3,1,7,6,4,-1,1,7,3,2,2,4,9,3,2,2,.0007719367858953774,.3494240045547485,.5433688759803772,0,2,12,0,6,13,-1,14,0,2,13,3,-.0015999219613149762,.4028499126434326,.5484359264373779,0,2,2,0,6,13,-1,4,0,2,13,3,-.00011832080053864047,.3806901872158051,.5425465106964111,0,2,10,5,8,8,-1,10,9,8,4,2,.0003290903114248067,.262010008096695,.5429521799087524,0,2,8,3,2,5,-1,9,3,1,5,2,.0002951810893137008,.379976898431778,.5399264097213745,0,2,8,4,9,1,-1,11,4,3,1,3,9046671038959175e-20,.4433645009994507,.5440226197242737,0,2,3,4,9,1,-1,6,4,3,1,3,15007190086180344e-21,.3719654977321625,.5409119725227356,0,2,1,0,18,10,-1,7,0,6,10,3,.1393561065196991,.552539587020874,.4479042887687683,0,2,7,17,5,3,-1,7,18,5,1,3,.0016461990308016539,.4264501035213471,.5772169828414917,0,2,7,11,6,1,-1,9,11,2,1,3,.0004998443182557821,.4359526038169861,.5685871243476868,0,2,2,2,3,2,-1,2,3,3,1,2,-.001097128028050065,.3390136957168579,.5205408930778503,0,2,8,12,4,2,-1,8,13,4,1,2,.0006691989256069064,.4557456076145172,.598065972328186,0,2,6,10,3,6,-1,6,13,3,3,2,.0008647104259580374,.5134841203689575,.2944033145904541,0,2,11,4,2,4,-1,11,4,1,4,2,-.0002718259929679334,.3906578123569489,.5377181172370911,0,2,7,4,2,4,-1,8,4,1,4,2,3024949910468422e-20,.3679609894752502,.5225688815116882,0,2,9,6,2,4,-1,9,6,1,4,2,-.008522589690983295,.7293102145195007,.4892365038394928,0,2,6,13,8,3,-1,6,14,8,1,3,.0016705560265108943,.43453249335289,.5696138143539429,0,2,9,15,3,4,-1,10,15,1,4,3,-.0071433838456869125,.2591280043125153,.5225623846054077,0,2,9,2,2,17,-1,10,2,1,17,2,-.0163193698972464,.6922279000282288,.4651575982570648,0,2,7,0,6,1,-1,9,0,2,1,3,.004803426098078489,.5352262854576111,.3286302983760834,0,2,8,15,3,4,-1,9,15,1,4,3,-.0075421929359436035,.2040544003248215,.5034546256065369,0,2,7,13,7,3,-1,7,14,7,1,3,-.0143631100654602,.6804888844490051,.4889059066772461,0,2,8,16,3,3,-1,9,16,1,3,3,.0008906358852982521,.5310695767402649,.3895480930805206,0,2,6,2,8,10,-1,6,7,8,5,2,-.004406019113957882,.5741562843322754,.4372426867485046,0,2,2,5,8,8,-1,2,9,8,4,2,-.0001886254030978307,.2831785976886749,.5098205208778381,0,2,14,16,2,2,-1,14,17,2,1,2,-.0037979281041771173,.3372507989406586,.5246580243110657,0,2,4,16,2,2,-1,4,17,2,1,2,.00014627049677073956,.5306674242019653,.391171008348465,0,2,10,11,4,6,-1,10,14,4,3,2,-49164638767251745e-21,.5462496280670166,.3942720890045166,0,2,6,11,4,6,-1,6,14,4,3,2,-.0335825011134148,.2157824039459229,.5048211812973022,0,2,10,14,1,3,-1,10,15,1,1,3,-.0035339309833943844,.6465312242507935,.4872696995735169,0,2,8,14,4,3,-1,8,15,4,1,3,.005014411173760891,.4617668092250824,.6248074769973755,0,3,10,0,4,6,-1,12,0,2,3,2,10,3,2,3,2,.0188173707574606,.5220689177513123,.2000052034854889,0,2,0,3,20,2,-1,0,4,20,1,2,-.001343433978036046,.4014537930488586,.53016197681427,0,3,12,0,8,2,-1,16,0,4,1,2,12,1,4,1,2,.001755796023644507,.4794039130210877,.5653169751167297,0,2,2,12,10,8,-1,2,16,10,4,2,-.0956374630331993,.2034195065498352,.5006706714630127,0,3,17,7,2,10,-1,18,7,1,5,2,17,12,1,5,2,-.0222412291914225,.7672473192214966,.5046340227127075,0,3,1,7,2,10,-1,1,7,1,5,2,2,12,1,5,2,-.0155758196488023,.7490342259407043,.4755851030349731,0,2,15,10,3,6,-1,15,12,3,2,3,.005359911825507879,.5365303754806519,.4004670977592468,0,2,4,4,6,2,-1,6,4,2,2,3,-.0217634998261929,.0740154981613159,.4964174926280975,0,2,0,5,20,6,-1,0,7,20,2,3,-.165615901350975,.2859103083610535,.5218086242675781,0,3,0,0,8,2,-1,0,0,4,1,2,4,1,4,1,2,.0001646132004680112,.4191615879535675,.5380793213844299,0,2,1,0,18,4,-1,7,0,6,4,3,-.008907750248908997,.6273192763328552,.4877404868602753,0,2,1,13,6,2,-1,1,14,6,1,2,.0008634644909761846,.5159940719604492,.3671025931835175,0,2,10,8,3,4,-1,11,8,1,4,3,-.0013751760125160217,.5884376764297485,.4579083919525147,0,2,6,1,6,1,-1,8,1,2,1,3,-.0014081239933148026,.3560509979724884,.5139945149421692,0,2,8,14,4,3,-1,8,15,4,1,3,-.003934288863092661,.5994288921356201,.466427206993103,0,2,1,6,18,2,-1,10,6,9,2,2,-.0319669283926487,.3345462083816528,.5144183039665222,0,2,15,11,1,2,-1,15,12,1,1,2,-15089280168467667e-21,.5582656264305115,.441405713558197,0,2,6,5,1,2,-1,6,6,1,1,2,.0005199447041377425,.4623680114746094,.6168993711471558,0,2,13,4,1,3,-1,13,5,1,1,3,-.0034220460802316666,.6557074785232544,.4974805116653442,0,2,2,15,1,2,-1,2,16,1,1,2,.00017723299970384687,.5269501805305481,.3901908099651337,0,2,12,4,4,3,-1,12,5,4,1,3,.0015716759953647852,.4633373022079468,.5790457725524902,0,2,0,0,7,3,-1,0,1,7,1,3,-.00890413299202919,.2689608037471771,.5053591132164001,0,2,9,12,6,2,-1,9,12,3,2,2,.00040677518700249493,.5456603169441223,.4329898953437805,0,2,5,4,2,3,-1,5,5,2,1,3,.0067604780197143555,.4648993909358978,.6689761877059937,0,2,18,4,2,3,-1,18,5,2,1,3,.0029100088868290186,.5309703946113586,.3377839922904968,0,2,3,0,8,6,-1,3,2,8,2,3,.0013885459629818797,.4074738919734955,.5349133014678955,0,3,0,2,20,6,-1,10,2,10,3,2,0,5,10,3,2,-.0767642632126808,.1992176026105881,.522824227809906,0,2,4,7,2,4,-1,5,7,1,4,2,-.00022688310127705336,.5438501834869385,.4253072142601013,0,2,3,10,15,2,-1,8,10,5,2,3,-.006309415213763714,.4259178936481476,.5378909707069397,0,2,3,0,12,11,-1,9,0,6,11,2,-.1100727990269661,.6904156804084778,.4721749126911163,0,2,13,0,2,6,-1,13,0,1,6,2,.0002861965913325548,.4524914920330048,.5548306107521057,0,2,0,19,2,1,-1,1,19,1,1,2,2942532955785282e-20,.5370373725891113,.4236463904380798,0,3,16,10,4,10,-1,18,10,2,5,2,16,15,2,5,2,-.0248865708708763,.6423557996749878,.4969303905963898,0,2,4,8,10,3,-1,4,9,10,1,3,.0331488512456417,.4988475143909454,.1613811999559403,0,2,14,12,3,3,-1,14,13,3,1,3,.0007849169196560979,.541602611541748,.4223009049892426,0,3,0,10,4,10,-1,0,10,2,5,2,2,15,2,5,2,.004708718974143267,.4576328992843628,.6027557849884033,0,2,18,3,2,6,-1,18,5,2,2,3,.0024144479539245367,.530897319316864,.4422498941421509,0,2,6,6,1,3,-1,6,7,1,1,3,.0019523180089890957,.4705634117126465,.666332483291626,0,2,7,7,7,2,-1,7,8,7,1,2,.0013031980488449335,.4406126141548157,.5526962280273438,0,2,0,3,2,6,-1,0,5,2,2,3,.004473549779504538,.5129023790359497,.3301498889923096,0,2,11,1,3,1,-1,12,1,1,1,3,-.002665286883711815,.3135471045970917,.5175036191940308,0,2,5,0,2,6,-1,6,0,1,6,2,.0001366677024634555,.4119370877742767,.530687689781189,0,2,1,1,18,14,-1,7,1,6,14,3,-.0171264503151178,.6177806258201599,.4836578965187073,0,2,4,6,8,3,-1,8,6,4,3,2,-.0002660143072716892,.3654330968856812,.5169736742973328,0,2,9,12,6,2,-1,9,12,3,2,2,-.022932380437851,.349091500043869,.5163992047309875,0,2,5,12,6,2,-1,8,12,3,2,2,.0023316550068557262,.5166299939155579,.3709389865398407,0,2,10,7,3,5,-1,11,7,1,5,3,.016925660893321,.501473605632782,.8053988218307495,0,2,7,7,3,5,-1,8,7,1,5,3,-.008985882624983788,.6470788717269897,.465702086687088,0,2,13,0,3,10,-1,14,0,1,10,3,-.0118746999651194,.3246378898620606,.5258755087852478,0,2,4,11,3,2,-1,4,12,3,1,2,.00019350569345988333,.5191941857337952,.3839643895626068,0,2,17,3,3,6,-1,18,3,1,6,3,.005871349014341831,.4918133914470673,.6187043190002441,0,2,1,8,18,10,-1,1,13,18,5,2,-.2483879029750824,.1836802959442139,.4988150000572205,0,2,13,0,3,10,-1,14,0,1,10,3,.0122560001909733,.5227053761482239,.3632029891014099,0,2,9,14,2,3,-1,9,15,2,1,3,.0008399017970077693,.4490250051021576,.5774148106575012,0,2,16,3,3,7,-1,17,3,1,7,3,.002540736924856901,.4804787039756775,.5858299136161804,0,2,4,0,3,10,-1,5,0,1,10,3,-.0148224299773574,.2521049976348877,.5023537278175354,0,2,16,3,3,7,-1,17,3,1,7,3,-.005797395948320627,.5996695756912231,.4853715002536774,0,2,0,9,1,2,-1,0,10,1,1,2,.000726621481589973,.5153716802597046,.3671779930591583,0,2,18,1,2,10,-1,18,1,1,10,2,-.0172325801104307,.6621719002723694,.4994656145572662,0,2,0,1,2,10,-1,1,1,1,10,2,.007862408645451069,.4633395075798035,.6256101727485657,0,2,10,16,3,4,-1,11,16,1,4,3,-.004734362009912729,.3615573048591614,.5281885266304016,0,2,2,8,3,3,-1,3,8,1,3,3,.0008304847870022058,.4442889094352722,.5550957918167114,0,3,11,0,2,6,-1,12,0,1,3,2,11,3,1,3,2,.00766021991148591,.5162935256958008,.2613354921340942,0,3,7,0,2,6,-1,7,0,1,3,2,8,3,1,3,2,-.004104837775230408,.2789632081985474,.5019031763076782,0,2,16,3,3,7,-1,17,3,1,7,3,.004851257894188166,.4968984127044678,.5661668181419373,0,2,1,3,3,7,-1,2,3,1,7,3,.0009989645332098007,.4445607960224152,.5551813244819641,0,2,14,1,6,16,-1,16,1,2,16,3,-.2702363133430481,.0293882098048925,.515131413936615,0,2,0,1,6,16,-1,2,1,2,16,3,-.0130906803533435,.5699399709701538,.4447459876537323,0,3,2,0,16,8,-1,10,0,8,4,2,2,4,8,4,2,-.009434279054403305,.4305466115474701,.5487895011901855,0,2,6,8,5,3,-1,6,9,5,1,3,-.0015482039889320731,.3680317103862763,.512808084487915,0,2,9,7,3,3,-1,10,7,1,3,3,.005374613218009472,.4838916957378388,.6101555824279785,0,2,8,8,4,3,-1,8,9,4,1,3,.0015786769799888134,.5325223207473755,.4118548035621643,0,2,9,6,2,4,-1,9,6,1,4,2,.003685605013743043,.4810948073863983,.6252303123474121,0,2,0,7,15,1,-1,5,7,5,1,3,.009388701990246773,.520022988319397,.3629410862922669,0,2,8,2,7,9,-1,8,5,7,3,3,.0127926301211119,.4961709976196289,.673801600933075,0,3,1,7,16,4,-1,1,7,8,2,2,9,9,8,2,2,-.003366104094311595,.4060279130935669,.5283598899841309,0,2,6,12,8,2,-1,6,13,8,1,2,.00039771420415490866,.4674113988876343,.5900775194168091,0,2,8,11,3,3,-1,8,12,3,1,3,.0014868030557408929,.4519116878509522,.6082053780555725,0,3,4,5,14,10,-1,11,5,7,5,2,4,10,7,5,2,-.0886867493391037,.2807899117469788,.5180991888046265,0,2,4,12,3,2,-1,4,13,3,1,2,-7429611287079751e-20,.5295584201812744,.408762514591217,0,2,9,11,6,1,-1,11,11,2,1,3,-14932939848222304e-21,.5461400151252747,.4538542926311493,0,2,4,9,7,6,-1,4,11,7,2,3,.005916223861277103,.5329161286354065,.4192134141921997,0,2,7,10,6,3,-1,7,11,6,1,3,.001114164013415575,.4512017965316773,.5706217288970947,0,2,9,11,2,2,-1,9,12,2,1,2,8924936264520511e-20,.4577805995941162,.5897638201713562,0,2,0,5,20,6,-1,0,7,20,2,3,.0025319510605186224,.5299603939056396,.3357639014720917,0,2,6,4,6,1,-1,8,4,2,1,3,.0124262003228068,.4959059059619904,.1346601992845535,0,2,9,11,6,1,-1,11,11,2,1,3,.0283357501029968,.5117079019546509,.0006104363710619509,0,2,5,11,6,1,-1,7,11,2,1,3,.006616588216274977,.4736349880695343,.7011628150939941,0,2,10,16,3,4,-1,11,16,1,4,3,.008046876639127731,.5216417908668518,.3282819986343384,0,2,8,7,3,3,-1,9,7,1,3,3,-.001119398046284914,.5809860825538635,.4563739001750946,0,2,2,12,16,8,-1,2,16,16,4,2,.0132775902748108,.5398362278938293,.4103901088237763,0,2,0,15,15,2,-1,0,16,15,1,2,.0004879473999608308,.424928605556488,.5410590767860413,0,2,15,4,5,6,-1,15,6,5,2,3,.0112431701272726,.526996374130249,.3438215851783752,0,2,9,5,2,4,-1,10,5,1,4,2,-.0008989666821435094,.5633075833320618,.4456613063812256,0,2,8,10,9,6,-1,8,12,9,2,3,.006667715962976217,.5312889218330383,.4362679123878479,0,2,2,19,15,1,-1,7,19,5,1,3,.0289472993463278,.4701794981956482,.657579779624939,0,2,10,16,3,4,-1,11,16,1,4,3,-.0234000496566296,0,.5137398838996887,0,2,0,15,20,4,-1,0,17,20,2,2,-.0891170501708984,.0237452797591686,.4942430853843689,0,2,10,16,3,4,-1,11,16,1,4,3,-.0140546001493931,.3127323091030121,.511751115322113,0,2,7,16,3,4,-1,8,16,1,4,3,.008123939856886864,.50090491771698,.2520025968551636,0,2,9,16,3,3,-1,9,17,3,1,3,-.004996465053409338,.6387143731117249,.4927811920642853,0,2,8,11,4,6,-1,8,14,4,3,2,.0031253970228135586,.5136849880218506,.3680452108383179,0,2,9,6,2,12,-1,9,10,2,4,3,.006766964215785265,.5509843826293945,.4363631904125214,0,2,8,17,4,3,-1,8,18,4,1,3,-.002371144015341997,.6162335276603699,.4586946964263916,0,3,9,18,8,2,-1,13,18,4,1,2,9,19,4,1,2,-.005352279171347618,.6185457706451416,.4920490980148315,0,2,1,18,8,2,-1,1,19,8,1,2,-.0159688591957092,.1382617950439453,.4983252882957459,0,2,13,5,6,15,-1,15,5,2,15,3,.004767606034874916,.4688057899475098,.5490046143531799,0,2,9,8,2,2,-1,9,9,2,1,2,-.002471469109877944,.2368514984846115,.5003952980041504,0,2,9,5,2,3,-1,9,5,1,3,2,-.0007103378884494305,.5856394171714783,.4721533060073853,0,2,1,5,6,15,-1,3,5,2,15,3,-.1411755979061127,.0869000628590584,.4961591064929962,0,3,4,1,14,8,-1,11,1,7,4,2,4,5,7,4,2,.1065180972218514,.5138837099075317,.1741005033254623,0,3,2,4,4,16,-1,2,4,2,8,2,4,12,2,8,2,-.0527447499334812,.7353636026382446,.4772881865501404,0,2,12,4,3,12,-1,12,10,3,6,2,-.00474317604675889,.3884406089782715,.5292701721191406,0,3,4,5,10,12,-1,4,5,5,6,2,9,11,5,6,2,.0009967676596716046,.5223492980003357,.4003424048423767,0,2,9,14,2,3,-1,9,15,2,1,3,.00802841316908598,.4959106147289276,.7212964296340942,0,2,5,4,2,3,-1,5,5,2,1,3,.0008602585876360536,.4444884061813355,.55384761095047,0,3,12,2,4,10,-1,14,2,2,5,2,12,7,2,5,2,.0009319150121882558,.539837121963501,.4163244068622589,0,2,6,4,7,3,-1,6,5,7,1,3,-.002508206060156226,.5854265093803406,.456250011920929,0,3,2,0,18,2,-1,11,0,9,1,2,2,1,9,1,2,-.0021378761157393456,.4608069062232971,.5280259251594543,0,3,0,0,18,2,-1,0,0,9,1,2,9,1,9,1,2,-.002154604997485876,.3791126906871796,.5255997180938721,0,3,13,13,4,6,-1,15,13,2,3,2,13,16,2,3,2,-.007621400989592075,.5998609066009521,.4952073991298676,0,3,3,13,4,6,-1,3,13,2,3,2,5,16,2,3,2,.002205536002293229,.4484206140041351,.5588530898094177,0,2,10,12,2,6,-1,10,15,2,3,2,.0012586950324475765,.5450747013092041,.4423840939998627,0,3,5,9,10,10,-1,5,9,5,5,2,10,14,5,5,2,-.005092672072350979,.4118275046348572,.5263035893440247,0,3,11,4,4,2,-1,13,4,2,1,2,11,5,2,1,2,-.0025095739401876926,.5787907838821411,.4998494982719421,0,2,7,12,6,8,-1,10,12,3,8,2,-.0773275569081306,.8397865891456604,.481112003326416,0,3,12,2,4,10,-1,14,2,2,5,2,12,7,2,5,2,-.041485819965601,.240861102938652,.5176993012428284,0,2,8,11,2,1,-1,9,11,1,1,2,.00010355669655837119,.4355360865592957,.5417054295539856,0,2,10,5,1,12,-1,10,9,1,4,3,.0013255809899419546,.5453971028327942,.4894095063209534,0,2,0,11,6,9,-1,3,11,3,9,2,-.00805987324565649,.5771024227142334,.4577918946743012,0,3,12,2,4,10,-1,14,2,2,5,2,12,7,2,5,2,.019058620557189,.5169867873191833,.3400475084781647,0,3,4,2,4,10,-1,4,2,2,5,2,6,7,2,5,2,-.0350578911602497,.2203243970870972,.5000503063201904,0,3,11,4,4,2,-1,13,4,2,1,2,11,5,2,1,2,.005729605909436941,.5043408274650574,.6597570776939392,0,2,0,14,6,3,-1,0,15,6,1,3,-.0116483299061656,.2186284959316254,.4996652901172638,0,3,11,4,4,2,-1,13,4,2,1,2,11,5,2,1,2,.0014544479781761765,.5007681846618652,.5503727793693542,0,2,6,1,3,2,-1,7,1,1,2,3,-.00025030909455381334,.4129841029644013,.524167001247406,0,3,11,4,4,2,-1,13,4,2,1,2,11,5,2,1,2,-.000829072727356106,.541286826133728,.4974496066570282,0,3,5,4,4,2,-1,5,4,2,1,2,7,5,2,1,2,.0010862209601327777,.460552990436554,.5879228711128235,0,3,13,0,2,12,-1,14,0,1,6,2,13,6,1,6,2,.0002000050008064136,.5278854966163635,.4705209136009216,0,2,6,0,3,10,-1,7,0,1,10,3,.0029212920926511288,.5129609704017639,.375553697347641,0,2,3,0,17,8,-1,3,4,17,4,2,.0253874007612467,.4822691977024078,.5790768265724182,0,2,0,4,20,4,-1,0,6,20,2,2,-.00319684692658484,.5248395204544067,.3962840139865875,90.25334930419922,182,0,2,0,3,8,2,-1,4,3,4,2,2,.005803173873573542,.3498983979225159,.596198320388794,0,2,8,11,4,3,-1,8,12,4,1,3,-.009000306949019432,.6816636919975281,.4478552043437958,0,3,5,7,6,4,-1,5,7,3,2,2,8,9,3,2,2,-.00115496595390141,.5585706233978271,.3578251004219055,0,2,8,3,4,9,-1,8,6,4,3,3,-.0011069850297644734,.5365036129951477,.3050428032875061,0,2,8,15,1,4,-1,8,17,1,2,2,.00010308309720130637,.363909512758255,.5344635844230652,0,2,4,5,12,7,-1,8,5,4,7,3,-.005098483990877867,.2859157025814056,.5504264831542969,0,3,4,2,4,10,-1,4,2,2,5,2,6,7,2,5,2,.0008257220033556223,.5236523747444153,.3476041853427887,0,2,3,0,17,2,-1,3,1,17,1,2,.009978332556784153,.4750322103500366,.621964693069458,0,2,2,2,16,15,-1,2,7,16,5,3,-.0374025292694569,.334337592124939,.527806282043457,0,2,15,2,5,2,-1,15,3,5,1,2,.0048548257909715176,.5192180871963501,.3700444102287293,0,2,9,3,2,2,-1,10,3,1,2,2,-.001866447040811181,.2929843962192535,.5091944932937622,0,2,4,5,16,15,-1,4,10,16,5,3,.0168888904154301,.3686845898628235,.5431225895881653,0,2,7,13,5,6,-1,7,16,5,3,2,-.005837262142449617,.3632183969020844,.5221335887908936,0,2,10,7,3,2,-1,11,7,1,2,3,-.00147137395106256,.5870683789253235,.4700650870800018,0,2,8,3,3,1,-1,9,3,1,1,3,-.0011522950371727347,.3195894956588745,.5140954256057739,0,2,9,16,3,3,-1,9,17,3,1,3,-.004256030078977346,.6301859021186829,.4814921021461487,0,2,0,2,5,2,-1,0,3,5,1,2,-.006737829186022282,.1977048069238663,.5025808215141296,0,2,12,5,4,3,-1,12,6,4,1,3,.0113826701417565,.495413213968277,.6867045760154724,0,2,1,7,12,1,-1,5,7,4,1,3,.005179470870643854,.5164427757263184,.3350647985935211,0,2,7,5,6,14,-1,7,12,6,7,2,-.1174378991127014,.2315246015787125,.5234413743019104,0,3,0,0,8,10,-1,0,0,4,5,2,4,5,4,5,2,.0287034492939711,.4664297103881836,.6722521185874939,0,2,9,1,3,2,-1,10,1,1,2,3,.004823103081434965,.5220875144004822,.2723532915115356,0,2,8,1,3,2,-1,9,1,1,2,3,.0026798530016094446,.5079277157783508,.2906948924064636,0,2,12,4,3,3,-1,12,5,3,1,3,.008050408214330673,.4885950982570648,.6395021080970764,0,2,7,4,6,16,-1,7,12,6,8,2,.004805495962500572,.5197256803512573,.365666389465332,0,2,12,4,3,3,-1,12,5,3,1,3,-.0022420159075409174,.6153467893600464,.4763701856136322,0,2,2,3,2,6,-1,2,5,2,2,3,-.0137577103450894,.2637344896793366,.5030903220176697,0,2,14,2,6,9,-1,14,5,6,3,3,-.1033829972147942,.2287521958351135,.5182461142539978,0,2,5,4,3,3,-1,5,5,3,1,3,-.009443208575248718,.6953303813934326,.4694949090480804,0,2,9,17,3,2,-1,10,17,1,2,3,.0008027118165045977,.5450655221939087,.4268783926963806,0,2,5,5,2,3,-1,5,6,2,1,3,-.004194566980004311,.6091387867927551,.4571642875671387,0,2,13,11,3,6,-1,13,13,3,2,3,.0109422104433179,.5241063237190247,.3284547030925751,0,2,3,14,2,6,-1,3,17,2,3,2,-.0005784106906503439,.5387929081916809,.4179368913173676,0,2,14,3,6,2,-1,14,4,6,1,2,-.002088862005621195,.4292691051959992,.5301715731620789,0,2,0,8,16,2,-1,0,9,16,1,2,.0032383969519287348,.379234790802002,.5220744013786316,0,2,14,3,6,2,-1,14,4,6,1,2,.004907502792775631,.5237283110618591,.4126757979393005,0,2,0,0,5,6,-1,0,2,5,2,3,-.0322779417037964,.1947655975818634,.4994502067565918,0,2,12,5,4,3,-1,12,6,4,1,3,-.008971123024821281,.6011285185813904,.4929032027721405,0,2,4,11,3,6,-1,4,13,3,2,3,.0153210898861289,.5009753704071045,.2039822041988373,0,2,12,5,4,3,-1,12,6,4,1,3,.002085556974634528,.4862189888954163,.5721694827079773,0,2,9,5,1,3,-1,9,6,1,1,3,.005061502102762461,.5000218749046326,.1801805943250656,0,2,12,5,4,3,-1,12,6,4,1,3,-.0037174751050770283,.5530117154121399,.4897592961788178,0,2,6,6,8,12,-1,6,12,8,6,2,-.0121705001220107,.4178605973720551,.5383723974227905,0,2,12,5,4,3,-1,12,6,4,1,3,.004624839872121811,.4997169971466065,.5761327147483826,0,2,5,12,9,2,-1,8,12,3,2,3,-.0002104042941937223,.5331807136535645,.4097681045532227,0,2,12,5,4,3,-1,12,6,4,1,3,-.0146417804062366,.5755925178527832,.5051776170730591,0,2,4,5,4,3,-1,4,6,4,1,3,.00331994891166687,.4576976895332336,.6031805872917175,0,2,6,6,9,2,-1,9,6,3,2,3,.003723687957972288,.4380396902561188,.541588306427002,0,2,4,11,1,3,-1,4,12,1,1,3,.0008295116131193936,.5163031816482544,.3702219128608704,0,2,14,12,6,6,-1,14,12,3,6,2,-.0114084901288152,.6072946786880493,.4862565100193024,0,2,7,0,3,7,-1,8,0,1,7,3,-.004532012157142162,.3292475938796997,.5088962912559509,0,2,9,8,3,3,-1,10,8,1,3,3,.00512760179117322,.4829767942428589,.6122708916664124,0,2,8,8,3,3,-1,9,8,1,3,3,.00985831581056118,.4660679996013641,.6556177139282227,0,2,5,10,11,3,-1,5,11,11,1,3,.036985918879509,.5204849243164062,.1690472066402435,0,2,5,7,10,1,-1,10,7,5,1,2,.004649116192013025,.5167322158813477,.3725225031375885,0,2,9,7,3,2,-1,10,7,1,2,3,-.004266470205038786,.6406493186950684,.4987342953681946,0,2,8,7,3,2,-1,9,7,1,2,3,-.0004795659042429179,.5897293090820312,.4464873969554901,0,2,11,9,4,2,-1,11,9,2,2,2,.0036827160511165857,.5441560745239258,.347266286611557,0,2,5,9,4,2,-1,7,9,2,2,2,-.0100598800927401,.2143162935972214,.500482976436615,0,2,14,10,2,4,-1,14,12,2,2,2,-.0003036184061784297,.538642406463623,.4590323865413666,0,2,7,7,3,2,-1,8,7,1,2,3,-.0014545479789376259,.5751184225082397,.4497095048427582,0,2,14,17,6,3,-1,14,18,6,1,3,.0016515209572389722,.5421937704086304,.4238520860671997,0,3,4,5,12,12,-1,4,5,6,6,2,10,11,6,6,2,-.007846863940358162,.4077920913696289,.5258157253265381,0,3,6,9,8,8,-1,10,9,4,4,2,6,13,4,4,2,-.005125985015183687,.422927588224411,.5479453206062317,0,2,0,4,15,4,-1,5,4,5,4,3,-.0368909612298012,.6596375703811646,.4674678146839142,0,2,13,2,4,1,-1,13,2,2,1,2,.0002403563994448632,.4251135885715485,.5573202967643738,0,2,4,12,2,2,-1,4,13,2,1,2,-15150169929256663e-21,.5259246826171875,.4074114859104157,0,2,8,13,4,3,-1,8,14,4,1,3,.0022108471021056175,.4671722948551178,.5886352062225342,0,2,9,13,2,3,-1,9,14,2,1,3,-.0011568620102480054,.5711066126823425,.4487161934375763,0,2,13,11,2,3,-1,13,12,2,1,3,.004999629221856594,.5264198184013367,.2898327112197876,0,3,7,12,4,4,-1,7,12,2,2,2,9,14,2,2,2,-.0014656189596280456,.3891738057136536,.5197871923446655,0,3,10,11,2,2,-1,11,11,1,1,2,10,12,1,1,2,-.0011975039960816503,.5795872807502747,.4927955865859985,0,2,8,17,3,2,-1,9,17,1,2,3,-.0044954330660402775,.2377603054046631,.5012555122375488,0,3,10,11,2,2,-1,11,11,1,1,2,10,12,1,1,2,.00014997160178609192,.4876626133918762,.5617607831954956,0,2,0,17,6,3,-1,0,18,6,1,3,.002639150945469737,.516808807849884,.3765509128570557,0,3,10,11,2,2,-1,11,11,1,1,2,10,12,1,1,2,-.0002936813107226044,.5446649193763733,.4874630868434906,0,3,8,11,2,2,-1,8,11,1,1,2,9,12,1,1,2,.0014211760135367513,.4687897861003876,.669133186340332,0,2,12,5,8,4,-1,12,5,4,4,2,.0794276371598244,.5193443894386292,.273294597864151,0,2,0,5,8,4,-1,4,5,4,4,2,.0799375027418137,.4971731007099152,.1782083958387375,0,2,13,2,4,1,-1,13,2,2,1,2,.0110892597585917,.5165994763374329,.3209475874900818,0,2,3,2,4,1,-1,5,2,2,1,2,.00016560709627810866,.4058471918106079,.5307276248931885,0,3,10,0,4,2,-1,12,0,2,1,2,10,1,2,1,2,-.0053354292176663876,.3445056974887848,.5158129930496216,0,2,7,12,3,1,-1,8,12,1,1,3,.0011287260567769408,.4594863057136536,.6075533032417297,0,3,8,11,4,8,-1,10,11,2,4,2,8,15,2,4,2,-.0219692196696997,.1680400967597961,.5228595733642578,0,2,9,9,2,2,-1,9,10,2,1,2,-.00021775320055894554,.3861596882343292,.5215672850608826,0,2,3,18,15,2,-1,3,19,15,1,2,.00020200149447191507,.5517979264259338,.4363039135932922,0,3,2,6,2,12,-1,2,6,1,6,2,3,12,1,6,2,-.0217331498861313,.7999460101127625,.4789851009845734,0,2,9,8,2,3,-1,9,9,2,1,3,-.0008439993252977729,.4085975885391235,.5374773144721985,0,2,7,10,3,2,-1,8,10,1,2,3,-.00043895249837078154,.5470405220985413,.4366143047809601,0,2,11,11,3,1,-1,12,11,1,1,3,.0015092400135472417,.4988996982574463,.5842149257659912,0,2,6,11,3,1,-1,7,11,1,1,3,-.003554783994331956,.6753690242767334,.4721005856990814,0,3,9,2,4,2,-1,11,2,2,1,2,9,3,2,1,2,.00048191400128416717,.541585385799408,.4357109069824219,0,2,4,12,2,3,-1,4,13,2,1,3,-.00602643983438611,.2258509993553162,.499188095331192,0,2,2,1,18,3,-1,8,1,6,3,3,-.0116681400686502,.625655472278595,.4927498996257782,0,2,5,1,4,14,-1,7,1,2,14,2,-.0028718370012938976,.3947784900665283,.524580180644989,0,2,8,16,12,3,-1,8,16,6,3,2,.0170511696487665,.4752511084079742,.5794224143028259,0,2,1,17,18,3,-1,7,17,6,3,3,-.0133520802482963,.6041104793548584,.4544535875320435,0,2,9,14,2,6,-1,9,17,2,3,2,-.0003930180100724101,.4258275926113129,.5544905066490173,0,2,9,12,1,8,-1,9,16,1,4,2,.0030483349692076445,.5233420133590698,.3780272901058197,0,2,9,14,2,3,-1,9,15,2,1,3,-.00435792887583375,.6371889114379883,.4838674068450928,0,2,9,6,2,12,-1,9,10,2,4,3,.0056661018170416355,.5374705791473389,.4163666069507599,0,2,12,9,3,3,-1,12,10,3,1,3,6067733920644969e-20,.4638795852661133,.5311625003814697,0,2,0,1,4,8,-1,2,1,2,8,2,.0367381609976292,.4688656032085419,.6466524004936218,0,3,9,1,6,2,-1,12,1,3,1,2,9,2,3,1,2,.008652813732624054,.5204318761825562,.2188657969236374,0,2,1,3,12,14,-1,1,10,12,7,2,-.1537135988473892,.1630371958017349,.4958840012550354,0,3,8,12,4,2,-1,10,12,2,1,2,8,13,2,1,2,-.00041560421232134104,.577445924282074,.4696458876132965,0,3,1,9,10,2,-1,1,9,5,1,2,6,10,5,1,2,-.0012640169588848948,.3977175951004028,.5217198133468628,0,2,8,15,4,3,-1,8,16,4,1,3,-.003547334112226963,.6046528220176697,.480831503868103,0,2,6,8,8,3,-1,6,9,8,1,3,3001906952704303e-20,.3996723890304565,.5228201150894165,0,2,9,15,5,3,-1,9,16,5,1,3,.00131130195222795,.4712158143520355,.5765997767448425,0,2,8,7,4,3,-1,8,8,4,1,3,-.0013374709524214268,.4109584987163544,.5253170132637024,0,2,7,7,6,2,-1,7,8,6,1,2,.0208767093718052,.5202993750572205,.1757981926202774,0,3,5,7,8,2,-1,5,7,4,1,2,9,8,4,1,2,-.007549794856458902,.6566609740257263,.4694975018501282,0,2,12,9,3,3,-1,12,10,3,1,3,.0241885501891375,.5128673911094666,.3370220959186554,0,2,4,7,4,2,-1,4,8,4,1,2,-.002935882890596986,.658078670501709,.4694541096687317,0,2,14,2,6,9,-1,14,5,6,3,3,.0575579293072224,.5146445035934448,.2775259912014008,0,2,4,9,3,3,-1,5,9,1,3,3,-.0011343370424583554,.3836601972579956,.5192667245864868,0,2,12,9,3,3,-1,12,10,3,1,3,.0168169997632504,.5085592865943909,.6177260875701904,0,2,0,2,6,9,-1,0,5,6,3,3,.005053517874330282,.5138763189315796,.3684791922569275,0,2,17,3,3,6,-1,18,3,1,6,3,-.004587471019476652,.5989655256271362,.4835202097892761,0,2,0,3,3,6,-1,1,3,1,6,3,.001688246033154428,.4509486854076386,.5723056793212891,0,2,17,14,1,2,-1,17,15,1,1,2,-.0016554000321775675,.3496770858764648,.5243319272994995,0,2,4,9,4,3,-1,6,9,2,3,2,-.0193738006055355,.1120536997914314,.496871292591095,0,2,12,9,3,3,-1,12,10,3,1,3,.0103744501248002,.5148196816444397,.4395213127136231,0,2,5,9,3,3,-1,5,10,3,1,3,.00014973050565458834,.4084999859333038,.526988685131073,0,3,9,5,6,8,-1,12,5,3,4,2,9,9,3,4,2,-.042981930077076,.6394104957580566,.501850426197052,0,3,5,5,6,8,-1,5,5,3,4,2,8,9,3,4,2,.008306593634188175,.470755398273468,.6698353290557861,0,2,16,1,4,6,-1,16,4,4,3,2,-.0041285790503025055,.4541369080543518,.5323647260665894,0,2,1,0,6,20,-1,3,0,2,20,3,.0017399420030415058,.433396190404892,.5439866185188293,0,2,12,11,3,2,-1,13,11,1,2,3,.00011739750334527344,.4579687118530273,.5543426275253296,0,2,5,11,3,2,-1,6,11,1,2,3,.00018585780344437808,.4324643909931183,.5426754951477051,0,2,9,4,6,1,-1,11,4,2,1,3,.005558769218623638,.525722086429596,.3550611138343811,0,2,0,0,8,3,-1,4,0,4,3,2,-.007985156029462814,.6043018102645874,.4630635976791382,0,2,15,0,2,5,-1,15,0,1,5,2,.0006059412262402475,.4598254859447479,.55331951379776,0,2,4,1,3,2,-1,5,1,1,2,3,-.0002298304025316611,.4130752086639404,.5322461128234863,0,2,7,0,6,15,-1,9,0,2,15,3,.0004374021082185209,.4043039977550507,.5409289002418518,0,2,6,11,3,1,-1,7,11,1,1,3,.0002948202018160373,.4494963884353638,.5628852248191833,0,2,12,0,3,4,-1,13,0,1,4,3,.0103126596659422,.5177510976791382,.2704316973686218,0,2,5,4,6,1,-1,7,4,2,1,3,-.007724110968410969,.1988019049167633,.4980553984642029,0,2,12,7,3,2,-1,12,8,3,1,2,-.004679720848798752,.6644750237464905,.5018296241760254,0,2,0,1,4,6,-1,0,4,4,3,2,-.005075545981526375,.3898304998874664,.5185269117355347,0,2,12,7,3,2,-1,12,8,3,1,2,.00224797404371202,.4801808893680573,.5660336017608643,0,2,2,16,3,3,-1,2,17,3,1,3,.0008332700817845762,.5210919976234436,.3957188129425049,0,3,13,8,6,10,-1,16,8,3,5,2,13,13,3,5,2,-.0412793308496475,.6154541969299316,.5007054209709167,0,2,0,9,5,2,-1,0,10,5,1,2,-.0005093018990010023,.3975942134857178,.5228403806686401,0,3,12,11,2,2,-1,13,11,1,1,2,12,12,1,1,2,.0012568780221045017,.4979138076305389,.5939183235168457,0,2,3,15,3,3,-1,3,16,3,1,3,.008004849776625633,.4984497129917145,.1633366048336029,0,2,12,7,3,2,-1,12,8,3,1,2,-.0011879300000146031,.5904964804649353,.4942624866962433,0,2,5,7,3,2,-1,5,8,3,1,2,.0006194895249791443,.4199557900428772,.5328726172447205,0,2,9,5,9,9,-1,9,8,9,3,3,.006682985927909613,.5418602824211121,.490588903427124,0,2,5,0,3,7,-1,6,0,1,7,3,-.0037062340416014194,.3725939095020294,.5138000249862671,0,2,5,2,12,5,-1,9,2,4,5,3,-.0397394113242626,.6478961110115051,.5050346851348877,0,3,6,11,2,2,-1,6,11,1,1,2,7,12,1,1,2,.0014085009461268783,.4682339131832123,.6377884149551392,0,2,15,15,3,2,-1,15,16,3,1,2,.0003932268882635981,.5458530187606812,.415048211812973,0,2,2,15,3,2,-1,2,16,3,1,2,-.0018979819724336267,.3690159916877747,.5149704217910767,0,3,14,12,6,8,-1,17,12,3,4,2,14,16,3,4,2,-.0139704402536154,.6050562858581543,.4811357855796814,0,2,2,8,15,6,-1,7,8,5,6,3,-.1010081991553307,.2017080038785934,.4992361962795258,0,2,2,2,18,17,-1,8,2,6,17,3,-.0173469204455614,.5713148713111877,.4899486005306244,0,2,5,1,4,1,-1,7,1,2,1,2,.000156197595060803,.4215388894081116,.5392642021179199,0,2,5,2,12,5,-1,9,2,4,5,3,.1343892961740494,.5136151909828186,.3767612874507904,0,2,3,2,12,5,-1,7,2,4,5,3,-.0245822407305241,.7027357816696167,.4747906923294067,0,3,4,9,12,4,-1,10,9,6,2,2,4,11,6,2,2,-.0038553720805794,.4317409098148346,.5427716970443726,0,3,5,15,6,2,-1,5,15,3,1,2,8,16,3,1,2,-.002316524973139167,.594269871711731,.4618647992610931,0,2,10,14,2,3,-1,10,15,2,1,3,-.004851812031120062,.6191568970680237,.4884895086288452,0,3,0,13,20,2,-1,0,13,10,1,2,10,14,10,1,2,.002469993894919753,.5256664752960205,.4017199873924255,0,3,4,9,12,8,-1,10,9,6,4,2,4,13,6,4,2,.0454969592392445,.5237867832183838,.2685773968696594,0,2,8,13,3,6,-1,8,16,3,3,2,-.0203195996582508,.213044598698616,.4979738891124725,0,2,10,12,2,2,-1,10,13,2,1,2,.0002699499891605228,.481404185295105,.5543122291564941,0,3,9,12,2,2,-1,9,12,1,1,2,10,13,1,1,2,-.0018232699949294329,.6482579708099365,.4709989130496979,0,3,4,11,14,4,-1,11,11,7,2,2,4,13,7,2,2,-.006301579065620899,.4581927955150604,.5306236147880554,0,2,8,5,4,2,-1,8,6,4,1,2,-.0002413949987385422,.5232086777687073,.4051763117313385,0,2,10,10,6,3,-1,12,10,2,3,3,-.001033036969602108,.5556201934814453,.4789193868637085,0,2,2,14,1,2,-1,2,15,1,1,2,.0001804116036510095,.5229442715644836,.4011810123920441,0,3,13,8,6,12,-1,16,8,3,6,2,13,14,3,6,2,-.0614078603684902,.62986820936203,.5010703206062317,0,3,1,8,6,12,-1,1,8,3,6,2,4,14,3,6,2,-.0695439130067825,.7228280901908875,.4773184061050415,0,2,10,0,6,10,-1,12,0,2,10,3,-.0705426633358002,.2269513010978699,.5182529091835022,0,3,5,11,8,4,-1,5,11,4,2,2,9,13,4,2,2,.0024423799477517605,.5237097144126892,.4098151028156281,0,3,10,16,8,4,-1,14,16,4,2,2,10,18,4,2,2,.0015494349645450711,.4773750901222229,.5468043088912964,0,2,7,7,6,6,-1,9,7,2,6,3,-.0239142198115587,.7146975994110107,.4783824980258942,0,2,10,2,4,10,-1,10,2,2,10,2,-.0124536901712418,.2635296881198883,.5241122841835022,0,2,6,1,4,9,-1,8,1,2,9,2,-.00020760179904755205,.3623757064342499,.5113608837127686,0,2,12,19,2,1,-1,12,19,1,1,2,29781080229440704e-21,.4705932140350342,.5432801842689514,104.74919891357422,211,0,2,1,2,4,9,-1,3,2,2,9,2,.0117727499455214,.3860518932342529,.6421167254447937,0,2,7,5,6,4,-1,9,5,2,4,3,.0270375702530146,.4385654926300049,.675403892993927,0,2,9,4,2,4,-1,9,6,2,2,2,-3641950024757534e-20,.5487101078033447,.34233158826828,0,2,14,5,2,8,-1,14,9,2,4,2,.001999540952965617,.3230532109737396,.5400317907333374,0,2,7,6,5,12,-1,7,12,5,6,2,.0045278300531208515,.5091639757156372,.2935043871402741,0,2,14,6,2,6,-1,14,9,2,3,2,.00047890920541249216,.4178153872489929,.5344064235687256,0,2,4,6,2,6,-1,4,9,2,3,2,.0011720920447260141,.2899182140827179,.5132070779800415,0,3,8,15,10,4,-1,13,15,5,2,2,8,17,5,2,2,.0009530570241622627,.428012490272522,.5560845136642456,0,2,6,18,2,2,-1,7,18,1,2,2,15099150004971307e-21,.4044871926307678,.5404760241508484,0,2,11,3,6,2,-1,11,4,6,1,2,-.0006081790197640657,.4271768927574158,.5503466129302979,0,2,2,0,16,6,-1,2,2,16,2,3,.003322452073916793,.3962723910808563,.5369734764099121,0,2,11,3,6,2,-1,11,4,6,1,2,-.0011037490330636501,.4727177917957306,.5237749814987183,0,2,4,11,10,3,-1,4,12,10,1,3,-.0014350269921123981,.5603008270263672,.4223509132862091,0,2,11,3,6,2,-1,11,4,6,1,2,.0020767399109899998,.5225917100906372,.4732725918292999,0,2,3,3,6,2,-1,3,4,6,1,2,-.00016412809782195836,.3999075889587402,.5432739853858948,0,2,16,0,4,7,-1,16,0,2,7,2,.008830243721604347,.4678385853767395,.6027327179908752,0,2,0,14,9,6,-1,0,16,9,2,3,-.0105520701035857,.3493967056274414,.5213974714279175,0,2,9,16,3,3,-1,9,17,3,1,3,-.00227316003292799,.6185818910598755,.4749062955379486,0,2,4,6,6,2,-1,6,6,2,2,3,-.0008478633244521916,.5285341143608093,.3843482136726379,0,2,15,11,1,3,-1,15,12,1,1,3,.0012081359745934606,.536064088344574,.3447335958480835,0,2,5,5,2,3,-1,5,6,2,1,3,.002651273040100932,.4558292031288147,.6193962097167969,0,2,10,9,2,2,-1,10,10,2,1,2,-.0011012479662895203,.368023008108139,.5327628254890442,0,2,3,1,4,3,-1,5,1,2,3,2,.0004956151824444532,.396059513092041,.5274940729141235,0,2,16,0,4,7,-1,16,0,2,7,2,-.0439017713069916,.7020444869995117,.4992839097976685,0,2,0,0,20,1,-1,10,0,10,1,2,.0346903502941132,.5049164295196533,.276660293340683,0,2,15,11,1,3,-1,15,12,1,1,3,-.002744219033047557,.2672632932662964,.5274971127510071,0,2,0,4,3,4,-1,1,4,1,4,3,.003331658896058798,.4579482972621918,.6001101732254028,0,2,16,3,3,6,-1,16,5,3,2,3,-.0200445707887411,.3171594142913818,.523571789264679,0,2,1,3,3,6,-1,1,5,3,2,3,.0013492030557245016,.5265362858772278,.4034324884414673,0,3,6,2,12,6,-1,12,2,6,3,2,6,5,6,3,2,.0029702018946409225,.5332456827163696,.4571984112262726,0,2,8,10,4,3,-1,8,11,4,1,3,.006303998176008463,.4593310952186585,.6034635901451111,0,3,4,2,14,6,-1,11,2,7,3,2,4,5,7,3,2,-.0129365902394056,.4437963962554932,.5372971296310425,0,2,9,11,2,3,-1,9,12,2,1,3,.004014872945845127,.4680323898792267,.6437833905220032,0,2,15,13,2,3,-1,15,14,2,1,3,-.002640167949721217,.3709631860256195,.5314332842826843,0,2,8,12,4,3,-1,8,13,4,1,3,.0139184398576617,.4723555147647858,.713080883026123,0,2,15,11,1,3,-1,15,12,1,1,3,-.00045087869511917233,.4492394030094147,.5370404124259949,0,2,7,13,5,2,-1,7,14,5,1,2,.00025384349282830954,.4406864047050476,.5514402985572815,0,2,7,12,6,3,-1,7,13,6,1,3,.002271000063046813,.4682416915893555,.5967984199523926,0,2,5,11,4,4,-1,5,13,4,2,2,.002412077970802784,.5079392194747925,.3018598854541779,0,2,11,4,3,3,-1,12,4,1,3,3,-3602567085181363e-20,.560103714466095,.4471096992492676,0,2,6,4,3,3,-1,7,4,1,3,3,-.0074905529618263245,.2207535058259964,.4989944100379944,0,2,16,5,3,6,-1,17,5,1,6,3,-.017513120546937,.6531215906143188,.5017648935317993,0,2,3,6,12,7,-1,7,6,4,7,3,.1428163051605225,.4967963099479675,.1482062041759491,0,2,16,5,3,6,-1,17,5,1,6,3,.005534526892006397,.4898946881294251,.5954223871231079,0,2,3,13,2,3,-1,3,14,2,1,3,-.0009632359142415226,.3927116990089417,.519607424736023,0,2,16,5,3,6,-1,17,5,1,6,3,-.0020370010752230883,.5613325238227844,.4884858131408691,0,2,1,5,3,6,-1,2,5,1,6,3,.0016614829655736685,.4472880065441132,.5578880906105042,0,2,1,9,18,1,-1,7,9,6,1,3,-.0031188090797513723,.3840532898902893,.5397477746009827,0,2,0,9,8,7,-1,4,9,4,7,2,-.006400061771273613,.5843983888626099,.4533218145370483,0,2,12,11,8,2,-1,12,12,8,1,2,.0003131960111204535,.5439221858978271,.4234727919101715,0,2,0,11,8,2,-1,0,12,8,1,2,-.0182220991700888,.1288464963436127,.4958404898643494,0,2,9,13,2,3,-1,9,14,2,1,3,.008796924725174904,.49512979388237,.7153480052947998,0,3,4,10,12,4,-1,4,10,6,2,2,10,12,6,2,2,-.004239507019519806,.3946599960327148,.5194936990737915,0,2,9,3,3,7,-1,10,3,1,7,3,.009708627127110958,.4897503852844238,.6064900159835815,0,2,7,2,3,5,-1,8,2,1,5,3,-.003993417136371136,.3245440125465393,.5060828924179077,0,3,9,12,4,6,-1,11,12,2,3,2,9,15,2,3,2,-.0167850591242313,.1581953018903732,.5203778743743896,0,2,8,7,3,6,-1,9,7,1,6,3,.018272090703249,.4680935144424439,.6626979112625122,0,2,15,4,4,2,-1,15,5,4,1,2,.00568728381767869,.5211697816848755,.3512184917926788,0,2,8,7,3,3,-1,9,7,1,3,3,-.0010739039862528443,.5768386125564575,.4529845118522644,0,2,14,2,6,4,-1,14,4,6,2,2,-.00370938703417778,.4507763087749481,.5313581228256226,0,2,7,16,6,1,-1,9,16,2,1,3,-.0002111070934915915,.5460820198059082,.4333376884460449,0,2,15,13,2,3,-1,15,14,2,1,3,.0010670139454305172,.5371856093406677,.4078390896320343,0,2,8,7,3,10,-1,9,7,1,10,3,.0035943021066486835,.4471287131309509,.5643836259841919,0,2,11,10,2,6,-1,11,12,2,2,3,-.005177603103220463,.4499393105506897,.5280330181121826,0,2,6,10,4,1,-1,8,10,2,1,2,-.00025414369883947074,.5516173243522644,.4407708048820496,0,2,10,9,2,2,-1,10,10,2,1,2,.006352256052196026,.5194190144538879,.2465227991342545,0,2,8,9,2,2,-1,8,10,2,1,2,-.00044205080484971404,.3830705881118774,.5139682292938232,0,3,12,7,2,2,-1,13,7,1,1,2,12,8,1,1,2,.0007448872784152627,.4891090989112854,.5974786877632141,0,3,5,7,2,2,-1,5,7,1,1,2,6,8,1,1,2,-.0035116379149258137,.7413681745529175,.4768764972686768,0,2,13,0,3,14,-1,14,0,1,14,3,-.0125409103929996,.3648819029331207,.5252826809883118,0,2,4,0,3,14,-1,5,0,1,14,3,.009493185207247734,.5100492835044861,.362958699464798,0,2,13,4,3,14,-1,14,4,1,14,3,.0129611501470208,.5232442021369934,.4333561062812805,0,2,9,14,2,3,-1,9,15,2,1,3,.004720944911241531,.4648149013519287,.6331052780151367,0,2,8,14,4,3,-1,8,15,4,1,3,-.0023119079414755106,.5930309891700745,.4531058073043823,0,2,4,2,3,16,-1,5,2,1,16,3,-.002826229901984334,.3870477974414825,.5257101058959961,0,2,7,2,8,10,-1,7,7,8,5,2,-.0014311339473351836,.552250325679779,.4561854898929596,0,2,6,14,7,3,-1,6,15,7,1,3,.0019378310535103083,.4546220898628235,.5736966729164124,0,3,9,2,10,12,-1,14,2,5,6,2,9,8,5,6,2,.00026343559147790074,.5345739126205444,.4571875035762787,0,2,6,7,8,2,-1,6,8,8,1,2,.0007825752254575491,.3967815935611725,.5220187902450562,0,2,8,13,4,6,-1,8,16,4,3,2,-.0195504408329725,.282964289188385,.5243508219718933,0,2,6,6,1,3,-1,6,7,1,1,3,.00043914958951063454,.4590066969394684,.589909017086029,0,2,16,2,4,6,-1,16,4,4,2,3,.0214520003646612,.523141086101532,.2855378985404968,0,3,6,6,4,2,-1,6,6,2,1,2,8,7,2,1,2,.0005897358059883118,.4397256970405579,.550642192363739,0,2,16,2,4,6,-1,16,4,4,2,3,-.0261576101183891,.3135079145431519,.5189175009727478,0,2,0,2,4,6,-1,0,4,4,2,3,-.0139598604291677,.3213272988796234,.5040717720985413,0,2,9,6,2,6,-1,9,6,1,6,2,-.006369901821017265,.6387544870376587,.4849506914615631,0,2,3,4,6,10,-1,3,9,6,5,2,-.008561382070183754,.2759132087230682,.5032019019126892,0,2,9,5,2,6,-1,9,5,1,6,2,.000966229010373354,.4685640931129456,.5834879279136658,0,2,3,13,2,3,-1,3,14,2,1,3,.0007655026856809855,.5175207257270813,.389642208814621,0,2,13,13,3,2,-1,13,14,3,1,2,-.008183334022760391,.2069136947393417,.5208122134208679,0,3,2,16,10,4,-1,2,16,5,2,2,7,18,5,2,2,-.009397693909704685,.6134091019630432,.4641222953796387,0,3,5,6,10,6,-1,10,6,5,3,2,5,9,5,3,2,.004802898038178682,.5454108119010925,.439521998167038,0,2,7,14,1,3,-1,7,15,1,1,3,-.003568056970834732,.6344485282897949,.4681093990802765,0,2,14,16,6,3,-1,14,17,6,1,3,.0040733120404183865,.5292683243751526,.4015620052814484,0,2,5,4,3,3,-1,5,5,3,1,3,.0012568129459396005,.4392988085746765,.5452824831008911,0,2,7,4,10,3,-1,7,5,10,1,3,-.0029065010603517294,.5898832082748413,.4863379895687103,0,2,0,4,5,4,-1,0,6,5,2,2,-.00244093406945467,.4069364964962006,.5247421860694885,0,2,13,11,3,9,-1,13,14,3,3,3,.0248307008296251,.5182725787162781,.3682524859905243,0,2,4,11,3,9,-1,4,14,3,3,3,-.0488540083169937,.1307577937841415,.496128112077713,0,2,9,7,2,1,-1,9,7,1,1,2,-.001611037994734943,.6421005725860596,.4872662127017975,0,2,5,0,6,17,-1,7,0,2,17,3,-.0970094799995422,.0477693490684032,.495098888874054,0,2,10,3,6,3,-1,10,3,3,3,2,.0011209240183234215,.4616267085075378,.5354745984077454,0,2,2,2,15,4,-1,7,2,5,4,3,-.001306409016251564,.626185417175293,.4638805985450745,0,3,8,2,8,2,-1,12,2,4,1,2,8,3,4,1,2,.00045771620352752507,.5384417772293091,.4646640121936798,0,2,8,1,3,6,-1,8,3,3,2,3,-.0006314995116554201,.3804047107696533,.51302570104599,0,2,9,17,2,2,-1,9,18,2,1,2,.0001450597046641633,.4554310142993927,.5664461851119995,0,2,0,0,2,14,-1,1,0,1,14,2,-.0164745505899191,.6596958041191101,.4715859889984131,0,2,12,0,7,3,-1,12,1,7,1,3,.0133695797994733,.519546627998352,.3035964965820313,0,2,1,14,1,2,-1,1,15,1,1,2,.00010271780047332868,.522917628288269,.4107066094875336,0,3,14,12,2,8,-1,15,12,1,4,2,14,16,1,4,2,-.0055311559699475765,.6352887749671936,.4960907101631165,0,2,1,0,7,3,-1,1,1,7,1,3,-.0026187049224972725,.3824546039104462,.5140984058380127,0,3,14,12,2,8,-1,15,12,1,4,2,14,16,1,4,2,.005083426833152771,.4950439929962158,.6220818758010864,0,3,6,0,8,12,-1,6,0,4,6,2,10,6,4,6,2,.0798181593418121,.4952335953712463,.1322475969791412,0,2,6,1,8,9,-1,6,4,8,3,3,-.0992265865206718,.7542728781700134,.5008416771888733,0,2,5,2,2,2,-1,5,3,2,1,2,-.0006517401780001819,.3699302971363068,.5130121111869812,0,3,13,14,6,6,-1,16,14,3,3,2,13,17,3,3,2,-.018996849656105,.6689178943634033,.4921202957630158,0,3,0,17,20,2,-1,0,17,10,1,2,10,18,10,1,2,.0173468999564648,.4983300864696503,.1859198063611984,0,3,10,3,2,6,-1,11,3,1,3,2,10,6,1,3,2,.0005508210160769522,.4574424028396606,.5522121787071228,0,2,5,12,6,2,-1,8,12,3,2,2,.002005605027079582,.5131744742393494,.3856469988822937,0,2,10,7,6,13,-1,10,7,3,13,2,-.007768819108605385,.4361700117588043,.5434309244155884,0,2,5,15,10,5,-1,10,15,5,5,2,.0508782789111137,.4682720899581909,.6840639710426331,0,2,10,4,4,10,-1,10,4,2,10,2,-.0022901780903339386,.4329245090484619,.5306099057197571,0,2,5,7,2,1,-1,6,7,1,1,2,-.00015715380141045898,.5370057225227356,.4378164112567902,0,2,10,3,6,7,-1,10,3,3,7,2,.1051924005150795,.5137274265289307,.0673614665865898,0,2,4,3,6,7,-1,7,3,3,7,2,.002719891956076026,.4112060964107513,.5255665183067322,0,2,1,7,18,5,-1,7,7,6,5,3,.0483377799391747,.5404623746871948,.4438967108726502,0,2,3,17,4,3,-1,5,17,2,3,2,.0009570376132614911,.4355969130992889,.5399510860443115,0,3,8,14,12,6,-1,14,14,6,3,2,8,17,6,3,2,-.0253712590783834,.5995175242424011,.5031024813652039,0,3,0,13,20,4,-1,0,13,10,2,2,10,15,10,2,2,.0524579510092735,.4950287938117981,.1398351043462753,0,3,4,5,14,2,-1,11,5,7,1,2,4,6,7,1,2,-.0123656298965216,.639729917049408,.496410608291626,0,3,1,2,10,12,-1,1,2,5,6,2,6,8,5,6,2,-.1458971947431564,.1001669988036156,.494632214307785,0,2,6,1,14,3,-1,6,2,14,1,3,-.0159086007624865,.3312329947948456,.5208340883255005,0,2,8,16,2,3,-1,8,17,2,1,3,.00039486068999394774,.4406363964080811,.5426102876663208,0,2,9,17,3,2,-1,10,17,1,2,3,-.0052454001270234585,.2799589931964874,.5189967155456543,0,3,5,15,4,2,-1,5,15,2,1,2,7,16,2,1,2,-.005042179953306913,.6987580060958862,.4752142131328583,0,2,10,15,1,3,-1,10,16,1,1,3,.0029812189750373363,.4983288943767548,.6307479739189148,0,3,8,16,4,4,-1,8,16,2,2,2,10,18,2,2,2,-.007288430817425251,.298233300447464,.5026869773864746,0,2,6,11,8,6,-1,6,14,8,3,2,.0015094350092113018,.5308442115783691,.3832970857620239,0,2,2,13,5,2,-1,2,14,5,1,2,-.009334079921245575,.2037964016199112,.4969817101955414,0,3,13,14,6,6,-1,16,14,3,3,2,13,17,3,3,2,.0286671407520771,.5025696754455566,.6928027272224426,0,2,1,9,18,4,-1,7,9,6,4,3,.1701968014240265,.4960052967071533,.1476442962884903,0,3,13,14,6,6,-1,16,14,3,3,2,13,17,3,3,2,-.003261447884142399,.5603063702583313,.4826056063175201,0,2,0,2,1,6,-1,0,4,1,2,3,.0005576927796937525,.5205562114715576,.4129633009433746,0,2,5,0,15,20,-1,5,10,15,10,2,.3625833988189697,.5221652984619141,.3768612146377564,0,3,1,14,6,6,-1,1,14,3,3,2,4,17,3,3,2,-.0116151301190257,.6022682785987854,.4637489914894104,0,3,8,14,4,6,-1,10,14,2,3,2,8,17,2,3,2,-.004079519771039486,.4070447087287903,.5337479114532471,0,2,7,11,2,1,-1,8,11,1,1,2,.0005720430053770542,.4601835012435913,.5900393128395081,0,2,9,17,3,2,-1,10,17,1,2,3,.000675433489959687,.5398252010345459,.4345428943634033,0,2,8,17,3,2,-1,9,17,1,2,3,.0006329569732770324,.5201563239097595,.4051358997821808,0,3,12,14,4,6,-1,14,14,2,3,2,12,17,2,3,2,.00124353205319494,.4642387926578522,.5547441244125366,0,3,4,14,4,6,-1,4,14,2,3,2,6,17,2,3,2,-.004736385773867369,.6198567152023315,.4672552049160004,0,3,13,14,2,6,-1,14,14,1,3,2,13,17,1,3,2,-.006465846206992865,.6837332844734192,.5019000768661499,0,3,5,14,2,6,-1,5,14,1,3,2,6,17,1,3,2,.000350173213519156,.4344803094863892,.5363622903823853,0,2,7,0,6,12,-1,7,4,6,4,3,.00015754920605104417,.4760079085826874,.5732020735740662,0,2,0,7,12,2,-1,4,7,4,2,3,.009977436624467373,.5090985894203186,.3635039925575256,0,2,10,3,3,13,-1,11,3,1,13,3,-.0004146452993154526,.5570064783096313,.4593802094459534,0,2,7,3,3,13,-1,8,3,1,13,3,-.00035888899583369493,.5356845855712891,.4339134991168976,0,2,10,8,6,3,-1,10,9,6,1,3,.0004046325047966093,.4439803063869476,.5436776876449585,0,2,3,11,3,2,-1,4,11,1,2,3,-.0008218478760682046,.4042294919490814,.5176299214363098,0,3,13,12,6,8,-1,16,12,3,4,2,13,16,3,4,2,.005946741905063391,.4927651882171631,.5633779764175415,0,2,7,6,6,5,-1,9,6,2,5,3,-.0217533893883228,.8006293773651123,.480084091424942,0,2,17,11,2,7,-1,17,11,1,7,2,-.0145403798669577,.3946054875850678,.5182222723960876,0,2,3,13,8,2,-1,7,13,4,2,2,-.0405107699334621,.0213249903172255,.4935792982578278,0,2,6,9,8,3,-1,6,10,8,1,3,-.0005845826817676425,.4012795984745026,.5314025282859802,0,2,4,3,4,3,-1,4,4,4,1,3,.005515180062502623,.4642418920993805,.5896260738372803,0,2,11,3,4,3,-1,11,4,4,1,3,-.006062622182071209,.6502159237861633,.5016477704048157,0,2,1,4,17,12,-1,1,8,17,4,3,.0945358425378799,.5264708995819092,.4126827120780945,0,2,11,3,4,3,-1,11,4,4,1,3,.004731505177915096,.4879199862480164,.5892447829246521,0,2,4,8,6,3,-1,4,9,6,1,3,-.0005257147131487727,.391728013753891,.5189412832260132,0,2,12,3,5,3,-1,12,4,5,1,3,-.002546404954046011,.5837599039077759,.498570591211319,0,2,1,11,2,7,-1,2,11,1,7,2,-.0260756891220808,.1261983960866928,.4955821931362152,0,3,15,12,2,8,-1,16,12,1,4,2,15,16,1,4,2,-.00547797093167901,.5722513794898987,.5010265707969666,0,2,4,8,11,3,-1,4,9,11,1,3,.005133774131536484,.527326226234436,.4226376116275787,0,3,9,13,6,2,-1,12,13,3,1,2,9,14,3,1,2,.000479449809063226,.4450066983699799,.5819587111473083,0,2,6,13,4,3,-1,6,14,4,1,3,-.0021114079281687737,.5757653117179871,.451171487569809,0,2,9,12,3,3,-1,10,12,1,3,3,-.0131799904629588,.1884381026029587,.5160734057426453,0,2,5,3,3,3,-1,5,4,3,1,3,-.004796809982508421,.6589789986610413,.4736118912696838,0,2,9,4,2,3,-1,9,5,2,1,3,.0067483168095350266,.5259429812431335,.3356395065784454,0,2,0,2,16,3,-1,0,3,16,1,3,.0014623369788751006,.5355271100997925,.4264092147350311,0,3,15,12,2,8,-1,16,12,1,4,2,15,16,1,4,2,.004764515906572342,.5034406781196594,.5786827802658081,0,3,3,12,2,8,-1,3,12,1,4,2,4,16,1,4,2,.0068066660314798355,.475660502910614,.6677829027175903,0,2,14,13,3,6,-1,14,15,3,2,3,.0036608621012419462,.5369611978530884,.4311546981334686,0,2,3,13,3,6,-1,3,15,3,2,3,.0214496403932571,.4968641996383667,.1888816058635712,0,3,6,5,10,2,-1,11,5,5,1,2,6,6,5,1,2,.004167890176177025,.4930733144283295,.5815368890762329,0,2,2,14,14,6,-1,2,17,14,3,2,.008646756410598755,.5205205082893372,.4132595062255859,0,2,10,14,1,3,-1,10,15,1,1,3,-.0003611407882999629,.5483555197715759,.4800927937030792,0,3,4,16,2,2,-1,4,16,1,1,2,5,17,1,1,2,.0010808729566633701,.4689902067184448,.6041421294212341,0,2,10,6,2,3,-1,10,7,2,1,3,.005771995987743139,.5171142220497131,.3053277134895325,0,3,0,17,20,2,-1,0,17,10,1,2,10,18,10,1,2,.001572077046148479,.5219978094100952,.4178803861141205,0,2,13,6,1,3,-1,13,7,1,1,3,-.0019307859474793077,.5860369801521301,.4812920093536377,0,2,8,13,3,2,-1,9,13,1,2,3,-.007892627269029617,.1749276965856552,.497173398733139,0,2,12,2,3,3,-1,13,2,1,3,3,-.002222467912361026,.434258908033371,.521284818649292,0,3,3,18,2,2,-1,3,18,1,1,2,4,19,1,1,2,.0019011989934369922,.4765186905860901,.689205527305603,0,2,9,16,3,4,-1,10,16,1,4,3,.0027576119173318148,.5262191295623779,.4337486028671265,0,2,6,6,1,3,-1,6,7,1,1,3,.005178744904696941,.4804069101810455,.7843729257583618,0,2,13,1,5,2,-1,13,2,5,1,2,-.0009027334162965417,.412084698677063,.5353423953056335,0,3,7,14,6,2,-1,7,14,3,1,2,10,15,3,1,2,.005179795902222395,.4740372896194458,.6425960063934326,0,2,11,3,3,4,-1,12,3,1,4,3,-.0101140001788735,.2468792051076889,.5175017714500427,0,2,1,13,12,6,-1,5,13,4,6,3,-.0186170600354671,.5756294131278992,.4628978967666626,0,2,14,11,5,2,-1,14,12,5,1,2,.0059225959703326225,.5169625878334045,.3214271068572998,0,3,2,15,14,4,-1,2,15,7,2,2,9,17,7,2,2,-.006294507998973131,.3872014880180359,.5141636729240417,0,3,3,7,14,2,-1,10,7,7,1,2,3,8,7,1,2,.0065353019163012505,.4853048920631409,.6310489773750305,0,2,1,11,4,2,-1,1,12,4,1,2,.0010878399480134249,.5117315053939819,.3723258972167969,0,2,14,0,6,14,-1,16,0,2,14,3,-.0225422400981188,.5692740082740784,.4887112975120544,0,2,4,11,1,3,-1,4,12,1,1,3,-.003006566083058715,.2556012868881226,.5003992915153503,0,2,14,0,6,14,-1,16,0,2,14,3,.007474127225577831,.4810872972011566,.5675926804542542,0,2,1,10,3,7,-1,2,10,1,7,3,.0261623207479715,.4971194863319397,.1777237057685852,0,2,8,12,9,2,-1,8,13,9,1,2,.0009435273823328316,.4940010905265808,.549125075340271,0,2,0,6,20,1,-1,10,6,10,1,2,.0333632417023182,.5007612109184265,.2790724039077759,0,2,8,4,4,4,-1,8,4,2,4,2,-.0151186501607299,.7059578895568848,.4973031878471375,0,2,0,0,2,2,-1,0,1,2,1,2,.0009864894673228264,.5128620266914368,.3776761889457703,105.76110076904297,213,0,2,5,3,10,9,-1,5,6,10,3,3,-.0951507985591888,.6470757126808167,.4017286896705627,0,2,15,2,4,10,-1,15,2,2,10,2,.006270234007388353,.399982213973999,.574644923210144,0,2,8,2,2,7,-1,9,2,1,7,2,.000300180894555524,.355877012014389,.5538809895515442,0,2,7,4,12,1,-1,11,4,4,1,3,.0011757409665733576,.425653487443924,.5382617712020874,0,2,3,4,9,1,-1,6,4,3,1,3,4423526843311265e-20,.3682908117771149,.5589926838874817,0,2,15,10,1,4,-1,15,12,1,2,2,-29936920327600092e-21,.5452470183372498,.4020367860794067,0,2,4,10,6,4,-1,7,10,3,4,2,.003007319988682866,.5239058136940002,.3317843973636627,0,2,15,9,1,6,-1,15,12,1,3,2,-.0105138896033168,.4320689141750336,.5307983756065369,0,2,7,17,6,3,-1,7,18,6,1,3,.008347682654857635,.4504637122154236,.6453298926353455,0,3,14,3,2,16,-1,15,3,1,8,2,14,11,1,8,2,-.0031492270063608885,.4313425123691559,.5370525121688843,0,2,4,9,1,6,-1,4,12,1,3,2,-1443564997316571e-20,.5326603055000305,.381797194480896,0,2,12,1,5,2,-1,12,2,5,1,2,-.00042855090578086674,.430516391992569,.5382009744644165,0,3,6,18,4,2,-1,6,18,2,1,2,8,19,2,1,2,.00015062429883982986,.4235970973968506,.5544965267181396,0,3,2,4,16,10,-1,10,4,8,5,2,2,9,8,5,2,.0715598315000534,.5303059816360474,.2678802907466888,0,2,6,5,1,10,-1,6,10,1,5,2,.0008409518050029874,.3557108938694,.5205433964729309,0,2,4,8,15,2,-1,9,8,5,2,3,.0629865005612373,.5225362777709961,.2861376106739044,0,2,1,8,15,2,-1,6,8,5,2,3,-.0033798629883676767,.3624185919761658,.5201697945594788,0,2,9,5,3,6,-1,9,7,3,2,3,-.00011810739670181647,.547447681427002,.3959893882274628,0,2,5,7,8,2,-1,9,7,4,2,2,-.0005450560129247606,.3740422129631043,.5215715765953064,0,2,9,11,2,3,-1,9,12,2,1,3,-.0018454910023137927,.5893052220344543,.4584448933601379,0,2,1,0,16,3,-1,1,1,16,1,3,-.0004383237101137638,.4084582030773163,.5385351181030273,0,2,11,2,7,2,-1,11,3,7,1,2,-.002400083001703024,.377745509147644,.5293580293655396,0,2,5,1,10,18,-1,5,7,10,6,3,-.0987957417964935,.2963612079620361,.5070089101791382,0,2,17,4,3,2,-1,18,4,1,2,3,.0031798239797353745,.4877632856369019,.6726443767547607,0,2,8,13,1,3,-1,8,14,1,1,3,.00032406419632025063,.4366911053657532,.5561109781265259,0,2,3,14,14,6,-1,3,16,14,2,3,-.0325472503900528,.31281578540802,.5308616161346436,0,2,0,2,3,4,-1,1,2,1,4,3,-.007756113074719906,.6560224890708923,.4639872014522553,0,2,12,1,5,2,-1,12,2,5,1,2,.0160272493958473,.5172680020332336,.3141897916793823,0,2,3,1,5,2,-1,3,2,5,1,2,710023505234858e-20,.4084446132183075,.5336294770240784,0,2,10,13,2,3,-1,10,14,2,1,3,.007342280820012093,.4966922104358673,.660346508026123,0,2,8,13,2,3,-1,8,14,2,1,3,-.0016970280557870865,.5908237099647522,.4500182867050171,0,2,14,12,2,3,-1,14,13,2,1,3,.0024118260480463505,.5315160751342773,.3599720895290375,0,2,7,2,2,3,-1,7,3,2,1,3,-.005530093796551228,.2334040999412537,.4996814131736755,0,3,5,6,10,4,-1,10,6,5,2,2,5,8,5,2,2,-.0026478730142116547,.5880935788154602,.4684734046459198,0,2,9,13,1,6,-1,9,16,1,3,2,.0112956296652555,.4983777105808258,.1884590983390808,0,3,10,12,2,2,-1,11,12,1,1,2,10,13,1,1,2,-.000669528788421303,.5872138142585754,.4799019992351532,0,2,4,12,2,3,-1,4,13,2,1,3,.0014410680159926414,.5131189227104187,.350101113319397,0,2,14,4,6,6,-1,14,6,6,2,3,.0024637870956212282,.5339372158050537,.4117639064788818,0,2,8,17,2,3,-1,8,18,2,1,3,.0003311451873742044,.4313383102416992,.5398246049880981,0,2,16,4,4,6,-1,16,6,4,2,3,-.0335572697222233,.26753368973732,.5179154872894287,0,2,0,4,4,6,-1,0,6,4,2,3,.0185394193977118,.4973869919776917,.2317177057266235,0,2,14,6,2,3,-1,14,6,1,3,2,-.00029698139405809343,.552970826625824,.4643664062023163,0,2,4,9,8,1,-1,8,9,4,1,2,-.0004557725915219635,.5629584193229675,.4469191133975983,0,2,8,12,4,3,-1,8,13,4,1,3,-.0101589802652597,.6706212759017944,.4925918877124786,0,2,5,12,10,6,-1,5,14,10,2,3,-22413829356082715e-21,.5239421725273132,.3912901878356934,0,2,11,12,1,2,-1,11,13,1,1,2,7203496352303773e-20,.4799438118934631,.5501788854598999,0,2,8,15,4,2,-1,8,16,4,1,2,-.006926720961928368,.6930009722709656,.4698084890842438,0,3,6,9,8,8,-1,10,9,4,4,2,6,13,4,4,2,-.007699783891439438,.409962385892868,.5480883121490479,0,3,7,12,4,6,-1,7,12,2,3,2,9,15,2,3,2,-.007313054986298084,.3283475935459137,.5057886242866516,0,2,10,11,3,1,-1,11,11,1,1,3,.0019650589674711227,.4978047013282776,.6398249864578247,0,3,9,7,2,10,-1,9,7,1,5,2,10,12,1,5,2,.007164760027080774,.4661160111427307,.6222137212753296,0,2,8,0,6,6,-1,10,0,2,6,3,-.0240786392241716,.2334644943475723,.5222162008285522,0,2,3,11,2,6,-1,3,13,2,2,3,-.0210279691964388,.1183653995394707,.4938226044178009,0,2,16,12,1,2,-1,16,13,1,1,2,.00036017020465806127,.5325019955635071,.4116711020469666,0,3,1,14,6,6,-1,1,14,3,3,2,4,17,3,3,2,-.0172197297215462,.6278762221336365,.4664269089698792,0,2,13,1,3,6,-1,14,1,1,6,3,-.007867214269936085,.3403415083885193,.5249736905097961,0,2,8,8,2,2,-1,8,9,2,1,2,-.000447773898486048,.3610411882400513,.5086259245872498,0,2,9,9,3,3,-1,10,9,1,3,3,.005548601038753986,.4884265959262848,.6203498244285583,0,2,8,7,3,3,-1,8,8,3,1,3,-.00694611482322216,.262593001127243,.5011097192764282,0,2,14,0,2,3,-1,14,0,1,3,2,.00013569870498031378,.4340794980525971,.5628312230110168,0,2,1,0,18,9,-1,7,0,6,9,3,-.0458802506327629,.6507998704910278,.4696274995803833,0,2,11,5,4,15,-1,11,5,2,15,2,-.0215825606137514,.3826502859592438,.5287616848945618,0,2,5,5,4,15,-1,7,5,2,15,2,-.0202095396816731,.3233368098735809,.5074477195739746,0,2,14,0,2,3,-1,14,0,1,3,2,.005849671084433794,.5177603960037231,.4489670991897583,0,2,4,0,2,3,-1,5,0,1,3,2,-5747637987951748e-20,.4020850956439972,.5246363878250122,0,3,11,12,2,2,-1,12,12,1,1,2,11,13,1,1,2,-.001151310047134757,.6315072178840637,.490515410900116,0,3,7,12,2,2,-1,7,12,1,1,2,8,13,1,1,2,.0019862831104546785,.4702459871768951,.6497151255607605,0,2,12,0,3,4,-1,13,0,1,4,3,-.005271951202303171,.3650383949279785,.5227652788162231,0,2,4,11,3,3,-1,4,12,3,1,3,.0012662699446082115,.5166100859642029,.387761801481247,0,2,12,7,4,2,-1,12,8,4,1,2,-.006291944067925215,.737589418888092,.5023847818374634,0,2,8,10,3,2,-1,9,10,1,2,3,.000673601112794131,.4423226118087769,.5495585799217224,0,2,9,9,3,2,-1,10,9,1,2,3,-.0010523450328037143,.5976396203041077,.4859583079814911,0,2,8,9,3,2,-1,9,9,1,2,3,-.00044216238893568516,.5955939292907715,.4398930966854096,0,2,12,0,3,4,-1,13,0,1,4,3,.0011747940443456173,.5349888205528259,.4605058133602142,0,2,5,0,3,4,-1,6,0,1,4,3,.005245743785053492,.5049191117286682,.2941577136516571,0,3,4,14,12,4,-1,10,14,6,2,2,4,16,6,2,2,-.0245397202670574,.2550177872180939,.5218586921691895,0,2,8,13,2,3,-1,8,14,2,1,3,.0007379304151982069,.4424861073493958,.5490816235542297,0,2,10,10,3,8,-1,10,14,3,4,2,.0014233799884095788,.5319514274597168,.4081355929374695,0,3,8,10,4,8,-1,8,10,2,4,2,10,14,2,4,2,-.0024149110540747643,.4087659120559692,.5238950252532959,0,2,10,8,3,1,-1,11,8,1,1,3,-.0012165299849584699,.567457914352417,.4908052980899811,0,2,9,12,1,6,-1,9,15,1,3,2,-.0012438809499144554,.4129425883293152,.5256118178367615,0,2,10,8,3,1,-1,11,8,1,1,3,.006194273941218853,.5060194134712219,.7313653230667114,0,2,7,8,3,1,-1,8,8,1,1,3,-.0016607169527560472,.5979632139205933,.4596369862556458,0,2,5,2,15,14,-1,5,9,15,7,2,-.0273162592202425,.4174365103244782,.5308842062950134,0,3,2,1,2,10,-1,2,1,1,5,2,3,6,1,5,2,-.00158455700147897,.56158047914505,.4519486129283905,0,2,14,14,2,3,-1,14,15,2,1,3,-.0015514739789068699,.4076187014579773,.5360785126686096,0,2,2,7,3,3,-1,3,7,1,3,3,.0003844655875582248,.4347293972969055,.5430442094802856,0,2,17,4,3,3,-1,17,5,3,1,3,-.0146722598001361,.1659304946660996,.5146093964576721,0,2,0,4,3,3,-1,0,5,3,1,3,.008160888217389584,.4961819052696228,.1884745955467224,0,3,13,5,6,2,-1,16,5,3,1,2,13,6,3,1,2,.0011121659772470593,.4868263900279999,.6093816161155701,0,2,4,19,12,1,-1,8,19,4,1,3,-.007260377053171396,.6284325122833252,.4690375924110413,0,2,12,12,2,4,-1,12,14,2,2,2,-.00024046430189628154,.5575000047683716,.4046044051647186,0,2,3,15,1,3,-1,3,16,1,1,3,-.00023348190006799996,.4115762114524841,.5252848267555237,0,2,11,16,6,4,-1,11,16,3,4,2,.005573648028075695,.4730072915554047,.5690100789070129,0,2,2,10,3,10,-1,3,10,1,10,3,.0306237693876028,.4971886873245239,.1740095019340515,0,2,12,8,2,4,-1,12,8,1,4,2,.0009207479888573289,.5372117757797241,.4354872107505798,0,2,6,8,2,4,-1,7,8,1,4,2,-4355073906481266e-20,.5366883873939514,.4347316920757294,0,2,10,14,2,3,-1,10,14,1,3,2,-.006645271088927984,.3435518145561218,.516053318977356,0,2,5,1,10,3,-1,10,1,5,3,2,.0432219989597797,.4766792058944702,.7293652892112732,0,2,10,7,3,2,-1,11,7,1,2,3,.0022331769578158855,.5029315948486328,.5633171200752258,0,2,5,6,9,2,-1,8,6,3,2,3,.0031829739455133677,.4016092121601105,.5192136764526367,0,2,9,8,2,2,-1,9,9,2,1,2,-.00018027749320026487,.4088315963745117,.5417919754981995,0,3,2,11,16,6,-1,2,11,8,3,2,10,14,8,3,2,-.0052934689447283745,.407567709684372,.5243561863899231,0,3,12,7,2,2,-1,13,7,1,1,2,12,8,1,1,2,.0012750959722325206,.4913282990455627,.6387010812759399,0,2,9,5,2,3,-1,9,6,2,1,3,.004338532220572233,.5031672120094299,.2947346866130829,0,2,9,7,3,2,-1,10,7,1,2,3,.00852507445961237,.4949789047241211,.6308869123458862,0,2,5,1,8,12,-1,5,7,8,6,2,-.0009426635224372149,.5328366756439209,.4285649955272675,0,2,13,5,2,2,-1,13,6,2,1,2,.0013609660090878606,.4991525113582611,.5941501259803772,0,2,5,5,2,2,-1,5,6,2,1,2,.0004478250921238214,.4573504030704498,.5854480862617493,0,2,12,4,3,3,-1,12,5,3,1,3,.001336005050688982,.4604358971118927,.584905207157135,0,2,4,14,2,3,-1,4,15,2,1,3,-.0006096754805184901,.3969388902187347,.522942304611206,0,2,12,4,3,3,-1,12,5,3,1,3,-.002365678083151579,.5808320045471191,.4898357093334198,0,2,5,4,3,3,-1,5,5,3,1,3,.001073434017598629,.435121089220047,.5470039248466492,0,3,9,14,2,6,-1,10,14,1,3,2,9,17,1,3,2,.0021923359017819166,.535506010055542,.3842903971672058,0,2,8,14,3,2,-1,9,14,1,2,3,.005496861878782511,.5018138885498047,.2827191948890686,0,2,9,5,6,6,-1,11,5,2,6,3,-.0753688216209412,.1225076019763947,.5148826837539673,0,2,5,5,6,6,-1,7,5,2,6,3,.0251344703137875,.4731766879558563,.702544629573822,0,2,13,13,1,2,-1,13,14,1,1,2,-2935859993158374e-20,.5430532097816467,.465608686208725,0,2,0,2,10,2,-1,0,3,10,1,2,-.0005835591000504792,.4031040072441101,.5190119743347168,0,2,13,13,1,2,-1,13,14,1,1,2,-.0026639450807124376,.4308126866817474,.5161771178245544,0,3,5,7,2,2,-1,5,7,1,1,2,6,8,1,1,2,-.0013804089976474643,.621982991695404,.4695515930652618,0,2,13,5,2,7,-1,13,5,1,7,2,.0012313219485804439,.5379363894462585,.4425831139087677,0,2,6,13,1,2,-1,6,14,1,1,2,-14644179827882908e-21,.5281640291213989,.4222503006458283,0,2,11,0,3,7,-1,12,0,1,7,3,-.0128188095986843,.2582092881202698,.5179932713508606,0,3,0,3,2,16,-1,0,3,1,8,2,1,11,1,8,2,.0228521898388863,.4778693020343781,.7609264254570007,0,2,11,0,3,7,-1,12,0,1,7,3,.0008230597013607621,.5340992212295532,.4671724140644074,0,2,6,0,3,7,-1,7,0,1,7,3,.0127701200544834,.4965761005878449,.1472366005182266,0,2,11,16,8,4,-1,11,16,4,4,2,-.0500515103340149,.641499400138855,.5016592144966125,0,2,1,16,8,4,-1,5,16,4,4,2,.0157752707600594,.4522320032119751,.5685362219810486,0,2,13,5,2,7,-1,13,5,1,7,2,-.0185016207396984,.2764748930931091,.5137959122657776,0,2,5,5,2,7,-1,6,5,1,7,2,.0024626250378787518,.5141941905021667,.3795408010482788,0,2,18,6,2,14,-1,18,13,2,7,2,.0629161670804024,.5060648918151855,.658043384552002,0,2,6,10,3,4,-1,6,12,3,2,2,-21648500478477217e-21,.5195388197898865,.401988685131073,0,2,14,7,1,2,-1,14,8,1,1,2,.0021180990152060986,.4962365031242371,.5954458713531494,0,3,0,1,18,6,-1,0,1,9,3,2,9,4,9,3,2,-.0166348908096552,.3757933080196381,.517544686794281,0,2,14,7,1,2,-1,14,8,1,1,2,-.002889947034418583,.6624013781547546,.5057178735733032,0,2,0,6,2,14,-1,0,13,2,7,2,.076783262193203,.4795796871185303,.8047714829444885,0,2,17,0,3,12,-1,18,0,1,12,3,.003917067777365446,.4937882125377655,.5719941854476929,0,2,0,6,18,3,-1,0,7,18,1,3,-.0726706013083458,.0538945607841015,.4943903982639313,0,2,6,0,14,16,-1,6,8,14,8,2,.5403950214385986,.5129774212837219,.1143338978290558,0,2,0,0,3,12,-1,1,0,1,12,3,.0029510019812732935,.4528343975543976,.5698574185371399,0,2,13,0,3,7,-1,14,0,1,7,3,.0034508369863033295,.5357726812362671,.4218730926513672,0,2,5,7,1,2,-1,5,8,1,1,2,-.0004207793972454965,.5916172862052917,.4637925922870636,0,2,14,4,6,6,-1,14,6,6,2,3,.0033051050268113613,.5273385047912598,.438204288482666,0,2,5,7,7,2,-1,5,8,7,1,2,.0004773506079800427,.4046528041362763,.5181884765625,0,2,8,6,6,9,-1,8,9,6,3,3,-.0259285103529692,.7452235817909241,.5089386105537415,0,2,5,4,6,1,-1,7,4,2,1,3,-.002972979098558426,.3295435905456543,.5058795213699341,0,3,13,0,6,4,-1,16,0,3,2,2,13,2,3,2,2,.005850832909345627,.4857144057750702,.5793024897575378,0,2,1,2,18,12,-1,1,6,18,4,3,-.0459675192832947,.4312731027603149,.5380653142929077,0,2,3,2,17,12,-1,3,6,17,4,3,.1558596044778824,.5196170210838318,.1684713959693909,0,2,5,14,7,3,-1,5,15,7,1,3,.0151648297905922,.4735757112503052,.6735026836395264,0,2,10,14,1,3,-1,10,15,1,1,3,-.0010604249546304345,.5822926759719849,.4775702953338623,0,2,3,14,3,3,-1,3,15,3,1,3,.006647629197686911,.4999198913574219,.231953501701355,0,2,14,4,6,6,-1,14,6,6,2,3,-.0122311301529408,.4750893115997315,.5262982249259949,0,2,0,4,6,6,-1,0,6,6,2,3,.005652888212352991,.5069767832756042,.3561818897724152,0,2,12,5,4,3,-1,12,6,4,1,3,.0012977829901501536,.4875693917274475,.5619062781333923,0,2,4,5,4,3,-1,4,6,4,1,3,.0107815898954868,.4750770032405853,.6782308220863342,0,2,18,0,2,6,-1,18,2,2,2,3,.002865477930754423,.5305461883544922,.4290736019611359,0,2,8,1,4,9,-1,10,1,2,9,2,.0028663428965955973,.4518479108810425,.5539351105690002,0,2,6,6,8,2,-1,6,6,4,2,2,-.005198332015424967,.4149119853973389,.5434188842773438,0,3,6,5,4,2,-1,6,5,2,1,2,8,6,2,1,2,.005373999010771513,.471789687871933,.6507657170295715,0,2,10,5,2,3,-1,10,6,2,1,3,-.0146415298804641,.2172164022922516,.5161777138710022,0,2,9,5,1,3,-1,9,6,1,1,3,-15042580344015732e-21,.533738374710083,.4298836886882782,0,2,9,10,2,2,-1,9,11,2,1,2,-.0001187566012958996,.4604594111442566,.5582447052001953,0,2,0,8,4,3,-1,0,9,4,1,3,.0169955305755138,.4945895075798035,.0738800764083862,0,2,6,0,8,6,-1,6,3,8,3,2,-.0350959412753582,.70055091381073,.4977591037750244,0,3,1,0,6,4,-1,1,0,3,2,2,4,2,3,2,2,.0024217350874096155,.4466265141963959,.5477694272994995,0,2,13,0,3,7,-1,14,0,1,7,3,-.0009634033776819706,.4714098870754242,.5313338041305542,0,2,9,16,2,2,-1,9,17,2,1,2,.00016391130338888615,.4331546127796173,.5342242121696472,0,2,11,4,6,10,-1,11,9,6,5,2,-.0211414601653814,.2644700109958649,.5204498767852783,0,2,0,10,19,2,-1,0,11,19,1,2,.0008777520270086825,.5208349823951721,.4152742922306061,0,2,9,5,8,9,-1,9,8,8,3,3,-.0279439203441143,.6344125270843506,.5018811821937561,0,2,4,0,3,7,-1,5,0,1,7,3,.006729737855494022,.5050438046455383,.3500863909721375,0,3,8,6,4,12,-1,10,6,2,6,2,8,12,2,6,2,.0232810396701097,.4966318011283875,.6968677043914795,0,2,0,2,6,4,-1,0,4,6,2,2,-.0116449799388647,.3300260007381439,.5049629807472229,0,2,8,15,4,3,-1,8,16,4,1,3,.0157643090933561,.4991598129272461,.7321153879165649,0,2,8,0,3,7,-1,9,0,1,7,3,-.001361147966235876,.3911735117435455,.5160670876502991,0,2,9,5,3,4,-1,10,5,1,4,3,-.0008152233785949647,.5628911256790161,.49497190117836,0,2,8,5,3,4,-1,9,5,1,4,3,-.0006006627227179706,.585359513759613,.4550595879554749,0,2,7,6,6,1,-1,9,6,2,1,3,.0004971551825292408,.4271470010280609,.5443599224090576,0,3,7,14,4,4,-1,7,14,2,2,2,9,16,2,2,2,.0023475370835512877,.5143110752105713,.3887656927108765,0,3,13,14,4,6,-1,15,14,2,3,2,13,17,2,3,2,-.008926156908273697,.6044502258300781,.497172087430954,0,2,7,8,1,8,-1,7,12,1,4,2,-.013919910416007,.2583160996437073,.5000367760658264,0,3,16,0,2,8,-1,17,0,1,4,2,16,4,1,4,2,.0010209949687123299,.4857374131679535,.5560358166694641,0,3,2,0,2,8,-1,2,0,1,4,2,3,4,1,4,2,-.0027441629208624363,.5936884880065918,.464577704668045,0,2,6,1,14,3,-1,6,2,14,1,3,-.0162001308053732,.3163014948368073,.5193495154380798,0,2,7,9,3,10,-1,7,14,3,5,2,.004333198070526123,.5061224102973938,.3458878993988037,0,2,9,14,2,2,-1,9,15,2,1,2,.0005849793087691069,.4779017865657806,.5870177745819092,0,2,7,7,6,8,-1,7,11,6,4,2,-.0022466450463980436,.4297851026058197,.5374773144721985,0,2,9,7,3,6,-1,9,10,3,3,2,.0023146099410951138,.5438671708106995,.4640969932079315,0,2,7,13,3,3,-1,7,14,3,1,3,.008767912164330482,.472689300775528,.6771789789199829,0,2,9,9,2,2,-1,9,10,2,1,2,-.00022448020172305405,.4229173064231873,.5428048968315125,0,2,0,1,18,2,-1,6,1,6,2,3,-.007433602120727301,.6098880767822266,.4683673977851868,0,2,7,1,6,14,-1,7,8,6,7,2,-.0023189240600913763,.5689436793327332,.4424242079257965,0,2,1,9,18,1,-1,7,9,6,1,3,-.0021042178850620985,.3762221038341522,.5187087059020996,0,2,9,7,2,2,-1,9,7,1,2,2,.000460348412161693,.4699405133724213,.5771207213401794,0,2,9,3,2,9,-1,10,3,1,9,2,.0010547629790380597,.4465216994285584,.5601701736450195,0,2,18,14,2,3,-1,18,15,2,1,3,.0008714881842024624,.544980525970459,.3914709091186523,0,2,7,11,3,1,-1,8,11,1,1,3,.00033364820410497487,.4564009010791779,.5645738840103149,0,2,10,8,3,4,-1,11,8,1,4,3,-.0014853250468149781,.5747377872467041,.4692778885364533,0,2,7,14,3,6,-1,8,14,1,6,3,.0030251620337367058,.5166196823120117,.3762814104557037,0,2,10,8,3,4,-1,11,8,1,4,3,.005028074141591787,.5002111792564392,.6151527166366577,0,2,7,8,3,4,-1,8,8,1,4,3,-.0005816451157443225,.5394598245620728,.4390751123428345,0,2,7,9,6,9,-1,7,12,6,3,3,.0451415292918682,.5188326835632324,.206303596496582,0,2,0,14,2,3,-1,0,15,2,1,3,-.001079562003724277,.3904685080051422,.5137907266616821,0,2,11,12,1,2,-1,11,13,1,1,2,.00015995999274309725,.4895322918891907,.5427504181861877,0,2,4,3,8,3,-1,8,3,4,3,2,-.0193592701107264,.6975228786468506,.4773507118225098,0,2,0,4,20,6,-1,0,4,10,6,2,.207255095243454,.5233635902404785,.3034991919994354,0,2,9,14,1,3,-1,9,15,1,1,3,-.00041953290929086506,.5419396758079529,.4460186064243317,0,2,8,14,4,3,-1,8,15,4,1,3,.0022582069505006075,.4815764129161835,.6027408838272095,0,2,0,15,14,4,-1,0,17,14,2,2,-.0067811207845807076,.3980278968811035,.5183305740356445,0,2,1,14,18,6,-1,1,17,18,3,2,.0111543098464608,.543123185634613,.4188759922981262,0,3,0,0,10,6,-1,0,0,5,3,2,5,3,5,3,2,.0431624315679073,.4738228023052216,.6522961258888245])
},function(t,e){
tracking.ViolaJones.classifiers.mouth=new Float64Array([25,15,-1.4372119903564453,13,0,2,0,0,14,9,-1,0,3,14,3,3,-.1192855015397072,.7854182124137878,-.4541360139846802,0,2,17,1,8,14,-1,17,8,8,7,2,-.0641647726297379,-.7407680749893188,.265203595161438,0,2,7,3,11,6,-1,7,5,11,2,3,.0910761803388596,-.2063370943069458,.8400946259498596,0,2,5,2,15,6,-1,5,4,15,2,3,-.1129330024123192,.8284121751785278,-.1866362988948822,0,2,6,4,11,6,-1,6,6,11,2,3,-.0741933435201645,.8354660272598267,-.1527701020240784,0,2,17,1,6,3,-1,19,1,2,3,3,21404659491963685e-21,-.0716945603489876,.1858334988355637,0,2,5,0,15,6,-1,5,2,15,2,3,-.0996975302696228,.6870458126068115,-.1721730977296829,0,2,7,3,13,6,-1,7,5,13,2,3,-.0900413617491722,.7310237884521484,-.1368771940469742,0,2,5,3,6,5,-1,8,3,3,5,2,.0002513831132091582,-.3469826877117157,.3647777140140533,0,2,21,14,4,1,-1,21,14,2,1,2,16144449546118267e-21,-.3085466027259827,.2320024073123932,0,2,0,3,3,12,-1,0,7,3,4,3,1936390981427394e-20,-.381985604763031,.2404107004404068,0,2,22,10,3,4,-1,22,11,3,2,2,.006967364810407162,.0545878112316132,-.748706579208374,0,2,0,10,3,4,-1,0,11,3,2,2,-.004718930926173925,-.7476686835289001,.1205869019031525,-1.541659951210022,13,0,2,5,0,15,8,-1,5,2,15,4,2,-.1006335020065308,.7848083972930908,-.3866829872131348,0,2,20,0,5,9,-1,20,3,5,3,3,-.0366767607629299,.545323371887207,-.401267796754837,0,2,6,2,13,4,-1,6,4,13,2,2,.0815562233328819,-.1315398067235947,.808495819568634,0,2,7,2,15,6,-1,7,4,15,2,3,-.10641860216856,.6782389879226685,-.2083356976509094,0,2,2,3,4,12,-1,2,9,4,6,2,.0156307406723499,-.3749788105487824,.3150509893894196,0,2,6,1,14,6,-1,6,3,14,2,3,.0711290463805199,-.15573850274086,.7050542831420898,0,2,8,3,9,6,-1,8,5,9,2,3,.0736639127135277,-.1547683030366898,.6715884804725647,0,2,21,0,4,6,-1,21,3,4,3,2,-.00010592950275167823,.1365388035774231,-.2670182883739471,0,2,1,12,1,3,-1,1,13,1,1,3,-.001923952018842101,-.7261438965797424,.136457696557045,0,2,23,12,1,3,-1,23,13,1,1,3,.002305730013176799,.0706136971712112,-.6423184275627136,0,2,1,12,1,3,-1,1,13,1,1,3,.0018073299434036016,.1355642974376679,-.7050786018371582,0,2,7,7,11,8,-1,7,9,11,4,2,-.0664333626627922,.6158788204193115,-.1400263011455536,0,2,8,4,9,6,-1,8,6,9,2,3,-.0689277201890945,.6765924096107483,-.1224988028407097,-1.532431960105896,29,0,2,1,0,15,9,-1,1,3,15,3,3,-.182265505194664,.5961514711380005,-.3195483088493347,0,2,9,0,11,15,-1,9,5,11,5,3,.2893281877040863,-.0240151602774858,.3762707114219666,0,2,0,8,3,4,-1,0,9,3,2,2,-.00424566213041544,-.7117397785186768,.1214720010757446,0,2,7,9,12,6,-1,7,12,12,3,2,.0545681491494179,-.1822118014097214,.4597271978855133,0,2,0,5,2,6,-1,0,7,2,2,3,-.0044434829615056515,-.5354676842689514,.1655835956335068,0,2,14,0,2,11,-1,14,0,1,11,2,-.0204923897981644,-.8770608901977539,-.0151639897376299,0,2,0,9,2,6,-1,0,11,2,2,3,-.004800747148692608,-.5431423187255859,.1356130987405777,0,3,1,0,24,12,-1,13,0,12,6,2,1,6,12,6,2,.1226660013198853,.112447202205658,-.657440185546875,0,2,0,0,3,4,-1,0,2,3,2,2,-5525497908820398e-20,.1536739021539688,-.3841981887817383,0,2,7,3,14,6,-1,7,5,14,2,3,-.1131860986351967,.4927195906639099,-.1094276010990143,0,2,5,3,15,4,-1,5,5,15,2,2,.0792956873774529,-.164746105670929,.4720517992973328,0,2,8,13,12,1,-1,12,13,4,1,3,.0148729300126433,.0740143731236458,-.5926275849342346,0,2,2,3,12,6,-1,8,3,6,6,2,.0538397915661335,-.2111544013023377,.3537890911102295,1,2,21,2,4,9,-1,21,2,2,9,2,-.0759592726826668,.5931801795959473,-.1090068966150284,0,2,6,2,13,6,-1,6,4,13,2,3,.1158166006207466,-.0984905213117599,.5940334796905518,0,2,5,3,15,2,-1,5,4,15,1,2,-.0160826407372952,.3794195055961609,-.165405198931694,0,2,0,11,5,3,-1,0,12,5,1,3,.0067254770547151566,.0937571078538895,-.7060937881469727,0,2,14,0,11,14,-1,14,7,11,7,2,-.0611884109675884,-.4381029903888702,.0796229690313339,1,2,2,10,4,1,-1,3,11,2,1,2,-.005515203811228275,-.7019357085227966,.0781789273023605,0,3,1,0,24,12,-1,13,0,12,6,2,1,6,12,6,2,-.1988534033298492,-.6726130843162537,.0560497716069222,0,3,0,4,6,6,-1,0,4,3,3,2,3,7,3,3,2,.0194473192095757,-.1165110021829605,.4151527881622315,1,2,23,9,1,4,-1,22,10,1,2,2,-.004670621827244759,-.6090158820152283,.1049979999661446,1,2,2,9,4,1,-1,3,10,2,1,2,.0040827528573572636,.0689968466758728,-.5490871071815491,0,3,16,4,8,10,-1,20,4,4,5,2,16,9,4,5,2,-.0201979596167803,.2884930074214935,-.1804888993501663,0,2,8,7,9,6,-1,8,9,9,2,3,.0504430681467056,-.0897706300020218,.4609920978546143,0,2,11,12,4,3,-1,12,12,2,3,2,-.005013956222683191,-.4820869863033295,.0588099807500839,0,2,0,0,3,3,-1,0,1,3,1,3,.008574193343520164,.0568646714091301,-.5979083180427551,0,2,11,9,14,2,-1,11,9,7,2,2,-.0121624497696757,.1446305960416794,-.1168325990438461,0,2,9,13,4,1,-1,10,13,2,1,2,-.0019329390488564968,-.5450860857963562,.060978390276432,-1.4849940538406372,34,0,2,0,0,8,6,-1,0,3,8,3,2,-.0320550985634327,.4280030131340027,-.4258942902088165,0,2,5,1,15,6,-1,5,3,15,2,3,-.1231034025549889,.5121241807937622,-.2055584937334061,0,2,0,7,4,3,-1,0,8,4,1,3,-.005858825985342264,-.7101820707321167,.1075906008481979,0,2,3,3,20,6,-1,8,3,10,6,2,.0977141335606575,-.1477957963943481,.45711749792099,0,2,0,6,24,5,-1,6,6,12,5,2,-.0527394600212574,.3743767142295837,-.2183827012777329,0,2,8,5,9,6,-1,8,7,9,2,3,.0584189109504223,-.1386294066905975,.4993282854557037,0,2,5,2,14,4,-1,5,4,14,2,2,.0887569189071655,-.1315895020961762,.6216561794281006,0,2,22,8,3,6,-1,22,10,3,2,3,.0145876696333289,.0915696695446968,-.5815675258636475,0,3,3,9,18,2,-1,3,9,9,1,2,12,10,9,1,2,.1044600009918213,.005274035967886448,-56644.51953125,0,2,22,8,3,6,-1,22,10,3,2,3,-.008432278409600258,-.4866046011447907,.0979617610573769,0,3,0,0,24,6,-1,0,0,12,3,2,12,3,12,3,2,.040655929595232,.1391579061746597,-.3656015992164612,0,2,14,11,4,4,-1,15,11,2,4,2,.006336689926683903,.064174547791481,-.6245471239089966,0,2,5,5,15,2,-1,5,6,15,1,2,.0158455893397331,-.1791914999485016,.2889905869960785,0,2,5,4,15,6,-1,5,6,15,2,3,-.0746863335371017,.5424023270606995,-.1314727962017059,0,2,0,7,2,3,-1,0,8,2,1,3,.004769525025039911,.0965340435504913,-.6561154723167419,0,2,6,6,13,6,-1,6,8,13,2,3,-.0535226687788963,.4636800885200501,-.135343000292778,0,2,0,11,6,3,-1,0,12,6,1,3,-.006364875007420778,-.6624563932418823,.0684857368469238,0,2,11,0,14,14,-1,11,7,14,7,2,-.2447337061166763,-.8181337118148804,.0450799688696861,0,2,7,13,4,1,-1,8,13,2,1,2,-.0024634969886392355,-.7681804895401001,.0495845898985863,0,2,6,9,13,6,-1,6,11,13,2,3,-.0358034893870354,.3749603927135468,-.1447928994894028,0,2,0,9,4,4,-1,0,10,4,2,2,-.005672052968293428,-.6127536296844482,.0935847163200378,0,2,21,0,4,6,-1,21,3,4,3,2,-.0132687101140618,.286378413438797,-.255188912153244,0,2,0,12,6,3,-1,0,13,6,1,3,-.006251893937587738,-.5896773934364319,.067711167037487,0,2,16,11,4,3,-1,17,11,2,3,2,.007309257052838802,.0272198095917702,-.5714861154556274,0,3,0,7,10,8,-1,0,7,5,4,2,5,11,5,4,2,.0258194394409657,-.132600799202919,.305025190114975,1,2,22,2,3,8,-1,22,2,3,4,2,-.0211078803986311,.1200629025697708,-.1475265026092529,0,2,1,3,16,4,-1,9,3,8,4,2,.0408483408391476,-.1736883074045181,.253044605255127,0,3,1,13,24,2,-1,13,13,12,1,2,1,14,12,1,2,-.0179475992918015,-.7117617130279541,.0583698004484177,0,2,5,5,4,10,-1,6,5,2,10,2,-.0138895902782679,-.6778132915496826,.04356300085783,1,2,13,7,2,6,-1,11,9,2,2,3,-.009848898276686668,.1479212939739227,-.0897465273737907,0,2,8,9,8,6,-1,8,12,8,3,2,-.0659847036004066,.5683801770210266,-.0681742578744888,0,2,24,7,1,4,-1,24,8,1,2,2,-.0018370660254731774,-.4986937940120697,.0779643580317497,0,2,5,7,15,6,-1,5,9,15,2,3,-.0277651809155941,.2679949104785919,-.1382624953985214,0,2,21,8,4,3,-1,21,9,4,1,3,.00998893566429615,.0445619411766529,-.7317379117012024,-1.5437099933624268,42,0,2,5,2,15,4,-1,5,3,15,2,2,-.0456383489072323,.6275423169136047,-.2494937032461166,0,2,6,4,15,3,-1,6,5,15,1,3,-.031067680567503,.6427816152572632,-.1671900004148483,0,3,0,3,2,12,-1,0,3,1,6,2,1,9,1,6,2,.00301934196613729,-.2399346977472305,.3676818013191223,0,2,7,3,11,4,-1,7,4,11,2,2,.0315676406025887,-.1147691980004311,.5750172734260559,0,2,0,0,6,6,-1,0,3,6,3,2,-.006414634175598621,.2154625058174133,-.3768770098686218,0,2,24,3,1,12,-1,24,7,1,4,3,-.005701086018234491,-.4533824026584625,.0946888476610184,0,3,0,0,24,12,-1,0,0,12,6,2,12,6,12,6,2,.1890300065279007,.0801155269145966,-.7184885144233704,0,3,1,1,24,14,-1,13,1,12,7,2,1,8,12,7,2,.1293978989124298,.1093719005584717,-.5197048783302307,1,2,5,3,8,4,-1,5,3,8,2,2,-.0657683908939362,.5003104209899902,-.1238735020160675,1,2,24,9,1,4,-1,23,10,1,2,2,-.0040884059853851795,-.5118011236190796,.0594223700463772,0,2,7,7,11,8,-1,7,9,11,4,2,-.0306642707437277,.2964648902416229,-.1741248071193695,1,2,24,9,1,4,-1,23,10,1,2,2,.0027700960636138916,.0846907272934914,-.4009515047073364,0,2,0,6,1,9,-1,0,9,1,3,3,-.0062402039766311646,-.5560923218727112,.0800850465893745,0,2,8,2,9,3,-1,8,3,9,1,3,.010515259578824,-.1309404969215393,.3612711131572723,0,2,9,4,7,4,-1,9,5,7,2,2,.0181792695075274,-.124518096446991,.3556562960147858,0,2,22,0,3,2,-1,22,1,3,1,2,.005303769838064909,.0638220235705376,-.6178466081619263,0,2,0,0,13,14,-1,0,7,13,7,2,-.1947806030511856,-.7228901982307434,.0475768186151981,0,2,21,9,4,4,-1,21,10,4,2,2,.007223042193800211,.0453382283449173,-.5460836291313171,0,2,0,9,4,4,-1,0,10,4,2,2,.005037583876401186,.080446831882,-.4817472100257874,1,2,22,9,1,4,-1,21,10,1,2,2,-.00719348294660449,-.5018991827964783,.0128700295463204,1,2,3,9,4,1,-1,4,10,2,1,2,-.004494159948080778,-.5862709879875183,.0634675025939941,0,3,15,3,10,12,-1,20,3,5,6,2,15,9,5,6,2,.0874131396412849,-.0676202401518822,.4797031879425049,0,3,0,8,14,6,-1,0,8,7,3,2,7,11,7,3,2,-.0377015694975853,.3913342952728272,-.0978809297084808,1,2,23,10,1,4,-1,22,11,1,2,2,.0030070370994508266,.0484924912452698,-.2472224980592728,0,3,0,3,10,12,-1,0,3,5,6,2,5,9,5,6,2,.0974098667502403,-.0669010728597641,.5813519954681396,1,2,23,0,2,1,-1,23,0,1,1,2,-.004016656894236803,-.5456554293632507,.0363924615085125,0,2,8,3,9,3,-1,8,4,9,1,3,.0104924896731973,-.1087466031312943,.3253425061702728,0,2,7,5,11,4,-1,7,6,11,2,2,.024965999647975,-.1137896031141281,.3056510984897614,0,2,2,7,20,8,-1,12,7,10,8,2,.1301030069589615,-.1220476999878883,.303536593914032,0,2,12,5,9,8,-1,15,5,3,8,3,-.0843720883131027,-.6943122148513794,.0178856607526541,1,2,2,0,1,2,-1,2,0,1,1,2,-.002926785033196211,-.5401834845542908,.0564073212444782,1,2,21,3,4,4,-1,22,4,2,4,2,-.0206745099276304,.4180921018123627,-.0685340464115143,0,2,4,5,9,8,-1,7,5,3,8,3,-.05145063996315,-.6289098262786865,.0529876984655857,1,2,22,10,3,2,-1,22,10,3,1,2,-.008926119655370712,-.4644356071949005,.023655079305172,0,2,0,5,24,5,-1,6,5,12,5,2,-.0830484703183174,.3304196894168854,-.093869760632515,0,2,9,7,7,3,-1,9,8,7,1,3,.0113369999453425,-.0979600325226784,.3484053015708923,0,2,2,0,20,9,-1,7,0,10,9,2,.0827779024839401,-.1159391030669212,.2680957913398743,0,2,11,2,8,9,-1,13,2,4,9,2,-.0478848814964294,-.6079211235046387,.0222362894564867,1,2,1,8,4,1,-1,2,9,2,1,2,-.003858269890770316,-.4688901007175446,.0554540418088436,0,3,19,5,6,10,-1,22,5,3,5,2,19,10,3,5,2,-.0334531292319298,.4192667901515961,-.0631088465452194,0,3,0,5,6,10,-1,0,5,3,5,2,3,10,3,5,2,.0126036396250129,-.1227632984519005,.2175220996141434,0,2,10,10,9,2,-1,13,10,3,2,3,.0262600891292095,.0162896700203419,-.5688759088516235,-1.5637760162353516,64,0,2,5,2,15,2,-1,5,3,15,1,2,-.019779309630394,.447209507226944,-.2573797106742859,0,2,21,4,4,3,-1,21,4,2,3,2,-.009199723601341248,.4397894144058228,-.1382309943437576,0,2,1,5,15,4,-1,1,6,15,2,2,.0222425796091557,-.1761150062084198,.3406811952590942,0,3,21,5,4,10,-1,23,5,2,5,2,21,10,2,5,2,.005365055054426193,-.1087490990757942,.1631094068288803,0,2,0,0,21,8,-1,7,0,7,8,3,.7425013780593872,.00046233131433837116,-1417.2740478515625,0,2,5,0,15,6,-1,5,2,15,2,3,-.1289999037981033,.4220936894416809,-.1264209002256393,0,2,2,2,21,3,-1,9,2,7,3,3,.4214023947715759,.003029906889423728,1207.18701171875,0,2,6,3,15,6,-1,6,5,15,2,3,-.1431712061166763,.5070012211799622,-.1091170981526375,0,3,0,5,4,10,-1,0,5,2,5,2,2,10,2,5,2,.004436612129211426,-.2218814045190811,.2446105927228928,1,2,22,10,1,4,-1,21,11,1,2,2,.003017731010913849,.1072233989834786,-.3470205068588257,0,2,0,7,3,4,-1,0,8,3,2,2,-.004822094924747944,-.6534119248390198,.0803434476256371,0,2,1,3,24,3,-1,7,3,12,3,2,.0362788289785385,-.220707505941391,.2242490947246552,0,2,0,0,24,13,-1,6,0,12,13,2,-.1675994992256165,.4059072136878967,-.1054169982671738,0,2,5,3,15,4,-1,5,4,15,2,2,-.0509919412434101,.3452283143997192,-.1206474006175995,0,2,5,4,14,3,-1,5,5,14,1,3,.0161635298281908,-.1465175002813339,.3696750998497009,1,2,23,8,2,4,-1,22,9,2,2,2,.00832686759531498,.0642398297786713,-.5490669012069702,1,2,2,8,4,2,-1,3,9,2,2,2,-.007261487189680338,-.6105815768241882,.0538330897688866,0,2,9,8,9,6,-1,9,10,9,2,3,-.0427855290472507,.3435507118701935,-.1058441996574402,0,2,0,0,11,14,-1,0,7,11,7,2,-.0558885596692562,-.4213463068008423,.0855342373251915,0,3,1,0,24,12,-1,13,0,12,6,2,1,6,12,6,2,.1077039018273354,.0796676799654961,-.5105268955230713,0,2,0,0,3,4,-1,0,2,3,2,2,-48622798203723505e-21,.1164970993995667,-.3022361099720001,0,2,7,2,15,4,-1,7,3,15,2,2,.0272718109190464,-.0831976532936096,.3410704135894775,1,2,2,10,4,1,-1,3,11,2,1,2,.002794212894514203,.0836139172315598,-.4521746933460236,0,2,21,11,4,4,-1,21,12,4,2,2,-.005964955780655146,-.5814967751502991,.0588471181690693,0,3,1,7,12,8,-1,1,7,6,4,2,7,11,6,4,2,-.0364551208913326,.2987614870071411,-.116396501660347,0,2,7,8,11,6,-1,7,11,11,3,2,.0560359284281731,-.1189749017357826,.349049985408783,0,2,0,13,2,2,-1,0,14,2,1,2,.0019068910041823983,.0623399801552296,-.5222734212875366,0,2,10,3,8,6,-1,12,3,4,6,2,-.0314803011715412,-.5988280177116394,.0221100505441427,0,2,7,3,8,6,-1,9,3,4,6,2,-.0291779898107052,-.7628328204154968,.037851981818676,0,2,22,6,3,3,-1,22,7,3,1,3,.009344181977212429,.0293787997215986,-.5464184880256653,0,2,0,5,5,6,-1,0,7,5,2,3,.0012941689928993583,-.2152619063854218,.1293071061372757,0,2,8,7,9,6,-1,8,9,9,2,3,.0399527512490749,-.0815632417798042,.3440327942371368,0,2,2,0,20,13,-1,12,0,10,13,2,.2579689919948578,-.0829713121056557,.2971759140491486,0,3,19,3,6,4,-1,22,3,3,2,2,19,5,3,2,2,.008397597819566727,-.1235759034752846,.3130742907524109,0,2,3,8,12,3,-1,9,8,6,3,2,-.0210481006652117,.2553890943527222,-.1077592000365257,1,2,22,3,2,5,-1,22,3,1,5,2,.0184192396700382,-.0348858311772347,.4613004922866821,0,2,6,7,8,8,-1,8,7,4,8,2,-.0335993207991123,-.6385626196861267,.0432357601821423,1,2,20,0,3,1,-1,21,1,1,1,3,-.005936917848885059,-.3381235003471375,.0261388104408979,1,2,5,0,1,3,-1,4,1,1,1,3,.007424450945109129,.041649479418993,-.601313591003418,1,2,22,11,1,3,-1,21,12,1,1,3,-.003834150033071637,-.3147934973239899,.0227260906249285,0,2,1,4,4,3,-1,3,4,2,3,2,.00592639297246933,-.0845179632306099,.2986125946044922,0,3,19,4,6,8,-1,22,4,3,4,2,19,8,3,4,2,-.0194444190710783,.2213757932186127,-.0513583682477474,0,3,0,4,8,8,-1,0,4,4,4,2,4,8,4,4,2,.0187752693891525,-.1223364025354385,.2647691071033478,1,2,22,11,1,3,-1,21,12,1,1,3,.006485750898718834,.0205634497106075,-.5246906280517578,0,3,0,1,24,14,-1,0,1,12,7,2,12,8,12,7,2,-.2598725855350494,-.6570193767547607,.0345496907830238,0,2,23,8,2,4,-1,23,9,2,2,2,-.005815083160996437,-.6595460772514343,.0302442405372858,0,2,5,3,15,4,-1,5,4,15,2,2,-.0261219404637814,.187040701508522,-.1252924054861069,0,2,8,1,9,3,-1,8,2,9,1,3,-.0057821800000965595,.2328509986400604,-.1182496026158333,0,2,0,8,2,4,-1,0,9,2,2,2,-.002959564095363021,-.4579938054084778,.0564655400812626,0,2,18,10,7,2,-1,18,11,7,1,2,-.0120882000774145,-.5189349055290222,.0244996603578329,0,2,6,11,12,4,-1,6,12,12,2,2,-.008810916915535927,.2570025026798248,-.0927671566605568,0,2,14,0,6,15,-1,16,0,2,15,3,-.0459428504109383,-.447971910238266,.0299462303519249,0,2,0,10,7,2,-1,0,11,7,1,2,-.0100041404366493,-.6149634122848511,.0364212691783905,0,3,15,5,6,6,-1,18,5,3,3,2,15,8,3,3,2,-.0116753997281194,.117287702858448,-.0613474808633327,0,2,5,0,6,15,-1,7,0,2,15,3,-.0524668507277966,-.7613652944564819,.0306894704699516,0,2,8,7,9,4,-1,8,8,9,2,2,.0182263404130936,-.0854801833629608,.2695373892784119,0,2,7,6,10,6,-1,7,8,10,2,3,-.0452684201300144,.3264470100402832,-.0773756429553032,1,2,19,11,1,3,-1,18,12,1,1,3,-.008142688311636448,-.4582937955856323,.009397351182997227,1,2,6,11,3,1,-1,7,12,1,1,3,-.005334928166121244,-.5775498151779175,.0352523885667324,0,2,16,10,4,1,-1,16,10,2,1,2,-.0010754769900813699,.1434753984212875,-.1015762984752655,0,2,0,0,1,2,-1,0,1,1,1,2,-.0035198600962758064,-.6082041263580322,.0328880697488785,0,2,8,1,9,3,-1,8,2,9,1,3,.0112483501434326,-.0905500426888466,.2323783040046692,0,2,0,6,5,3,-1,0,7,5,1,3,-.0119920196011662,-.5705332159996033,.0367036312818527,1,2,21,8,1,4,-1,20,9,1,2,2,-.012105530127883,-.708626925945282,.004459870047867298,-1.5267670154571533,57,0,2,5,1,15,6,-1,5,3,15,2,3,-.1112890988588333,.5214446783065796,-.2762526869773865,0,3,23,0,2,2,-1,24,0,1,1,2,23,1,1,1,2,-.003131008008494973,-.6073393225669861,.0243980996310711,0,2,3,3,15,6,-1,3,5,15,2,3,-.09750135242939,.5489286780357361,-.1652427017688751,0,2,19,0,6,9,-1,19,3,6,3,3,-.0652247071266174,.3402006924152374,-.2693930864334106,0,2,5,2,15,6,-1,5,4,15,2,3,.1191802993416786,-.1123576015233994,.63959801197052,0,2,17,3,8,3,-1,17,4,8,1,3,-.0140629801899195,.3342761993408203,-.1284538954496384,1,2,4,3,8,4,-1,4,3,8,2,2,-.056402500718832,.3790628910064697,-.1554156988859177,0,2,16,4,6,2,-1,16,5,6,1,2,.00717424089089036,-.1133088991045952,.1825089007616043,0,3,0,0,24,12,-1,0,0,12,6,2,12,6,12,6,2,.1259752959012985,.0945485532283783,-.485344409942627,1,2,22,10,3,2,-1,22,10,3,1,2,.0059177991934120655,.0701321363449097,-.5377039909362793,1,2,6,3,6,6,-1,4,5,6,2,3,-.0439277403056622,.395074188709259,-.1080185994505882,1,2,14,4,9,1,-1,17,7,3,1,3,-.009831470437347889,.0959606170654297,-.0468075983226299,1,2,3,10,2,3,-1,3,10,1,3,2,.005635340232402086,.0943416282534599,-.5247716903686523,1,2,20,8,5,2,-1,20,8,5,1,2,-.0115382801741362,-.5154880285263062,.0138055300340056,0,3,0,9,16,6,-1,0,9,8,3,2,8,12,8,3,2,.0286462493240833,-.1382701992988586,.275043785572052,0,2,6,2,13,3,-1,6,3,13,1,3,.0138679798692465,-.1203586980700493,.3521435856819153,0,2,0,1,3,4,-1,0,3,3,2,2,-.0004046937101520598,.1522637009620667,-.2590084075927734,0,2,8,0,9,12,-1,8,6,9,6,2,-.1594581007957459,-.6391854882240295,.0514649897813797,1,2,4,0,1,2,-1,4,0,1,1,2,-.0027928699273616076,-.5840150713920593,.0542793795466423,0,2,5,3,15,3,-1,5,4,15,1,3,.0183532107621431,-.1051151007413864,.3529815971851349,1,2,3,10,2,3,-1,3,10,1,3,2,-.00518105598166585,-.4741767942905426,.0798512324690819,0,3,19,4,6,4,-1,22,4,3,2,2,19,6,3,2,2,.009232129901647568,-.0759327188134193,.1852813959121704,0,3,0,3,8,4,-1,0,3,4,2,2,4,5,4,2,2,.0121171101927757,-.1117528975009918,.285363495349884,0,2,19,10,5,3,-1,19,11,5,1,3,-.007261281833052635,-.5885108709335327,.0526883192360401,0,2,1,10,5,3,-1,1,11,5,1,3,.005613490007817745,.0474684908986092,-.5394589900970459,0,2,12,1,13,14,-1,12,8,13,7,2,-.1945167928934097,-.5634222030639648,.0302108898758888,0,2,0,1,13,14,-1,0,8,13,7,2,.355094313621521,.0630894526839256,-.4980587959289551,0,3,11,3,6,12,-1,14,3,3,6,2,11,9,3,6,2,.0331119708716869,.034632470458746,-.5246484875679016,0,3,9,5,6,10,-1,9,5,3,5,2,12,10,3,5,2,.0342818088829517,.0431439802050591,-.6470713019371033,0,2,20,8,5,4,-1,20,9,5,2,2,-.007825661450624466,-.4688000977039337,.0402393713593483,0,2,0,8,5,4,-1,0,9,5,2,2,.0111560495570302,.0401505008339882,-.609553873538971,0,2,8,9,9,3,-1,8,10,9,1,3,.0113630602136254,-.0827489867806435,.3811689019203186,0,2,7,10,6,4,-1,9,10,2,4,3,.020405100658536,.0425756387412548,-.7467774152755737,0,2,6,6,14,4,-1,6,7,14,2,2,.019111629575491,-.123919703066349,.2226520031690598,0,2,9,6,5,4,-1,9,7,5,2,2,-.0073364898562431335,.3034206926822662,-.0926956906914711,0,2,22,5,3,6,-1,22,7,3,2,3,-.008653892204165459,-.3351745009422302,.0585405789315701,0,2,0,5,3,6,-1,0,7,3,2,3,.0347895994782448,.0337578095495701,-.7483453154563904,0,2,17,1,5,4,-1,17,2,5,2,2,-.0174188297241926,.2445363998413086,-.0698786973953247,0,2,3,1,6,4,-1,3,2,6,2,2,.003511907998472452,-.1277886927127838,.2403315007686615,0,2,21,14,4,1,-1,21,14,2,1,2,.0005066979792900383,-.1169779002666473,.1439380049705505,1,2,4,8,3,2,-1,5,9,1,2,3,-.005951274186372757,-.5078160762786865,.0478522293269634,0,2,14,2,4,7,-1,14,2,2,7,2,.0503778010606766,.002928252099081874,-.7751696109771729,0,2,7,2,4,7,-1,9,2,2,7,2,.003886251011863351,-.1550420969724655,.1570920050144196,0,2,9,3,8,5,-1,11,3,4,5,2,.0385116301476955,.0230970401316881,-.6291617155075073,0,2,5,10,15,1,-1,10,10,5,1,3,-.0055746049620211124,.1807070970535278,-.1298052966594696,0,2,2,6,21,9,-1,9,6,7,9,3,.1266476064920425,-.0865593999624252,.2957325875759125,0,2,0,4,6,6,-1,0,6,6,2,3,.005412611179053783,-.152832493185997,.1662916988134384,0,2,1,12,24,3,-1,7,12,12,3,2,-.0361530818045139,.2797313034534454,-.1039886027574539,0,2,6,7,6,2,-1,6,8,6,1,2,.007167399860918522,-.0945642217993736,.2778528034687042,1,2,13,8,2,4,-1,13,8,2,2,2,-.006779035087674856,.1679068058729172,-.0839543119072914,0,2,8,6,8,5,-1,10,6,4,5,2,-.029867609962821,-.7236117124557495,.0346310697495937,0,2,11,5,6,4,-1,11,6,6,2,2,.006526551209390163,-.1173760965466499,.1346033960580826,0,2,0,14,4,1,-1,2,14,2,1,2,340809601766523e-19,-.1753176003694534,.1322204023599625,0,2,16,2,4,13,-1,17,2,2,13,2,-.0176294595003128,-.5160853862762451,.0253861900418997,0,2,0,7,1,4,-1,0,8,1,2,2,-.0015446309698745608,-.4142186045646668,.0513300895690918,0,2,24,0,1,2,-1,24,1,1,1,2,.0011520429980009794,.0366159491240978,-.3692800998687744,0,2,0,5,2,4,-1,1,5,1,4,2,-.002961277961730957,.2446188032627106,-.0842714235186577,-1.4507639408111572,64,0,2,0,1,8,4,-1,0,3,8,2,2,-.0141031695529819,.2699790894985199,-.3928318023681641,0,3,15,11,10,4,-1,20,11,5,2,2,15,13,5,2,2,.005471440032124519,-.2269169986248016,.2749052047729492,0,2,7,5,11,3,-1,7,6,11,1,3,.0166354794055223,-.1547908037900925,.322420209646225,0,2,21,4,4,3,-1,21,4,2,3,2,-.008447717875242233,.3320780992507935,-.1249654963612557,0,2,0,5,4,1,-1,2,5,2,1,2,-.0024904569145292044,.2900204956531525,-.1460298001766205,0,2,7,3,12,4,-1,7,4,12,2,2,.0282104406505823,-.0831937119364738,.4805397987365723,0,2,8,6,7,3,-1,8,7,7,1,3,.009317990392446518,-.1692426949739456,.3482030928134918,0,2,16,0,9,14,-1,16,7,9,7,2,-.0579102896153927,-.5040398836135864,.0840934887528419,0,3,0,0,24,6,-1,0,0,12,3,2,12,3,12,3,2,.0882126465439796,.073309987783432,-.4883395135402679,0,2,23,13,2,1,-1,23,13,1,1,2,60974380176048726e-21,-.1594507992267609,.147327795624733,0,3,0,13,24,2,-1,0,13,12,1,2,12,14,12,1,2,-.0142063600942492,-.6365684866905212,.0507153607904911,0,2,19,12,5,3,-1,19,13,5,1,3,-.007718190085142851,-.6330028772354126,.0328688994050026,0,2,9,7,7,4,-1,9,8,7,2,2,.0120071703568101,-.1254525035619736,.2893699109554291,1,2,14,0,4,7,-1,14,0,2,7,2,.0707826167345047,.0305656604468822,-.5666698217391968,1,2,11,0,7,4,-1,11,0,7,2,2,-.050412330776453,-.5089793801307678,.0710048824548721,0,2,9,4,14,2,-1,9,5,14,1,2,.0220727995038033,-.1444841027259827,.2781184911727905,0,2,3,2,15,4,-1,3,3,15,2,2,.0147649403661489,-.1283989995718002,.3290185928344727,0,2,19,12,5,3,-1,19,13,5,1,3,.0068206568248569965,.0654795467853546,-.5463265776634216,0,3,0,11,8,4,-1,0,11,4,2,2,4,13,4,2,2,.0020179790444672108,-.2028342932462692,.167965903878212,0,2,7,9,11,6,-1,7,11,11,2,3,.0250812191516161,-.1104943975806236,.3191860020160675,0,2,0,11,7,4,-1,0,12,7,2,2,.008939135819673538,.0734132081270218,-.553839921951294,0,2,20,0,5,2,-1,20,1,5,1,2,-.00046396959805861115,.1123031005263329,-.169712707400322,1,2,5,10,3,2,-1,6,11,1,2,3,-.008560219779610634,-.7347347736358643,.0417169481515884,0,3,17,4,8,10,-1,21,4,4,5,2,17,9,4,5,2,-.0389347188174725,.2292626947164536,-.0792299434542656,0,2,5,3,15,2,-1,5,4,15,1,2,-.0215415991842747,.3007172048091888,-.1152340024709702,0,2,16,4,5,2,-1,16,5,5,1,2,.0049337721429765224,-.1002838015556335,.1348572969436646,0,3,1,0,22,10,-1,1,0,11,5,2,12,5,11,5,2,.1615066975355148,.0588171891868114,-.5656744837760925,0,2,20,0,5,2,-1,20,1,5,1,2,-.0123260198161006,-.2823328077793121,.0187596306204796,0,2,0,0,5,2,-1,0,1,5,1,2,.0052987951785326,.0524063482880592,-.5719032287597656,0,3,10,1,6,12,-1,13,1,3,6,2,10,7,3,6,2,.0289043206721544,.047710869461298,-.4854584038257599,0,2,0,0,1,8,-1,0,4,1,4,2,.0155697297304869,.0493178516626358,-.5100051760673523,0,2,6,0,13,6,-1,6,2,13,2,3,-.093812070786953,.2564809024333954,-.1057069003582001,1,2,4,3,4,4,-1,3,4,4,2,2,-.0286933295428753,.5247043967247009,-.05095025151968,0,2,20,8,5,3,-1,20,9,5,1,3,.0072301640175282955,.0583653002977371,-.4894312024116516,0,3,7,13,2,2,-1,7,13,1,1,2,8,14,1,1,2,8266483928309754e-20,-.143721804022789,.1820268929004669,0,3,16,13,2,2,-1,17,13,1,1,2,16,14,1,1,2,.001524175051599741,.0201267991214991,-.3884589970111847,0,3,7,13,2,2,-1,7,13,1,1,2,8,14,1,1,2,-6551230762852356e-20,.2280354052782059,-.1581206023693085,0,2,19,5,6,1,-1,21,5,2,1,3,.0024175599683076143,-.0890450775623322,.2839250862598419,0,2,0,8,6,6,-1,0,10,6,2,3,.0343084894120693,.0391304790973663,-.626339316368103,0,2,6,8,13,4,-1,6,9,13,2,2,.0127667998895049,-.0984294191002846,.2857427895069122,0,2,3,10,8,1,-1,7,10,4,1,2,-.0027450299821794033,.2090786993503571,-.1267945021390915,0,2,16,11,4,4,-1,17,11,2,4,2,-.007062985096126795,-.4784719944000244,.0229746792465448,0,2,5,6,15,2,-1,5,7,15,1,2,.0109674101695418,-.1310741007328033,.1712857037782669,0,2,3,1,20,10,-1,3,1,10,10,2,-.1530689001083374,.2361073046922684,-.096540167927742,0,2,2,4,3,3,-1,2,5,3,1,3,.002167609054595232,-.1028804033994675,.2537584006786346,0,2,16,11,4,4,-1,17,11,2,4,2,.0107051497325301,.0160892698913813,-.5868526101112366,0,2,5,11,4,4,-1,6,11,2,4,2,-.006114291958510876,-.6146798133850098,.034404631704092,0,3,17,4,8,10,-1,21,4,4,5,2,17,9,4,5,2,-.0160057693719864,.0954133197665215,-.0657811686396599,0,2,0,8,5,3,-1,0,9,5,1,3,.008554169908165932,.042579360306263,-.5490341186523438,0,2,23,13,2,1,-1,23,13,1,1,2,-5574294118559919e-20,.1505846977233887,-.0978325977921486,0,2,0,13,2,1,-1,1,13,1,1,2,4988848013454117e-20,-.1522217988967896,.1464709937572479,0,2,10,1,7,3,-1,10,2,7,1,3,.00939861312508583,-.0793018564581871,.2222844958305359,0,3,0,3,8,12,-1,0,3,4,6,2,4,9,4,6,2,-.0445945896208286,.3217073082923889,-.0712599530816078,0,2,6,0,16,11,-1,6,0,8,11,2,.2763071060180664,-.0312894396483898,.4636780917644501,0,2,2,0,21,3,-1,9,0,7,3,3,-.0459242798388004,.2685551047325134,-.0946981832385063,1,2,23,1,2,12,-1,23,1,2,6,2,.0328284502029419,.0420088581740856,-.1909179985523224,1,2,2,0,1,2,-1,2,0,1,1,2,.005841621197760105,.0443820804357529,-.5017232894897461,0,2,15,0,6,3,-1,17,0,2,3,3,.0253127701580524,.007676819805055857,-.4524691104888916,0,2,8,9,6,4,-1,10,9,2,4,3,-.0206803791224957,-.708233118057251,.02775271050632,0,2,20,5,5,6,-1,20,7,5,2,3,.0019456259906291962,-.1725641041994095,.0885240733623505,0,3,0,4,24,8,-1,0,4,12,4,2,12,8,12,4,2,.1318278014659882,.0378756709396839,-.5236573815345764,1,2,22,10,1,4,-1,21,11,1,2,2,-.004844982177019119,-.3831801116466522,.0295521095395088,0,2,7,0,11,3,-1,7,1,11,1,3,.005329558160156012,-.1172816008329392,.1712217032909393,0,2,6,0,13,4,-1,6,1,13,2,2,-.035328458994627,.3731549978256226,-.0650273412466049,-1.3936280012130737,77,0,2,7,11,11,4,-1,7,13,11,2,2,.0136478496715426,-.2802368998527527,.3575335144996643,0,3,21,3,4,12,-1,23,3,2,6,2,21,9,2,6,2,.0123078199103475,-.1484645009040833,.2714886069297791,0,2,2,4,21,6,-1,9,6,7,2,9,.4659403860569,-.0705008506774902,.5868018865585327,0,3,23,3,2,10,-1,24,3,1,5,2,23,8,1,5,2,.001569333951920271,-.1150237023830414,.1375536024570465,0,3,0,3,2,10,-1,0,3,1,5,2,1,8,1,5,2,.002517673885449767,-.1778890937566757,.2172407060861588,1,2,24,10,1,4,-1,23,11,1,2,2,.004529970232397318,.0458603501319885,-.5376703143119812,1,2,1,10,4,1,-1,2,11,2,1,2,.004029551055282354,.0599071383476257,-.5803095102310181,0,2,8,10,9,4,-1,8,11,9,2,2,.009028165601193905,-.088961161673069,.3474006950855255,0,2,5,8,13,6,-1,5,11,13,3,2,-.0710994601249695,.4003205001354218,-.0876752585172653,0,2,5,0,15,4,-1,5,2,15,2,2,-.0905078798532486,.3202385008335114,-.1107280030846596,0,2,1,0,22,15,-1,12,0,11,15,2,.3949914872646332,-.0544822700321674,.4376561045646668,0,2,10,14,8,1,-1,12,14,4,1,2,.0060021281242370605,.0412968583405018,-.6277515888214111,0,2,1,3,8,4,-1,1,4,8,2,2,-.0126753300428391,.1864306032657623,-.158659502863884,0,2,15,13,1,2,-1,15,14,1,1,2,.0005252318806014955,-.0737809464335442,.1131825000047684,0,2,5,2,15,6,-1,5,4,15,2,3,.151985302567482,-.0698502063751221,.5526459217071533,1,2,23,12,2,1,-1,23,12,1,1,2,-.005917444825172424,-.4224376976490021,.0234292708337307,1,2,2,12,1,2,-1,2,12,1,1,2,.0005108569748699665,-.1782114058732987,.1747542023658752,0,2,8,13,9,2,-1,11,13,3,2,3,-.0286266505718231,-.7806789875030518,.0430335216224194,0,2,8,0,8,2,-1,8,1,8,1,2,.0032388539984822273,-.1174874976277351,.2301342934370041,0,2,20,12,4,3,-1,20,13,4,1,3,-.0068310899659991264,-.5170273780822754,.0224770605564117,0,3,3,0,18,10,-1,3,0,9,5,2,12,5,9,5,2,-.1381812989711762,-.6718307137489319,.0339458398520947,0,2,10,12,6,3,-1,12,12,2,3,3,.0129029303789139,.0190411508083344,-.4739249050617218,0,2,0,0,1,8,-1,0,2,1,4,2,.0063398052006959915,.0412811301648617,-.5821130871772766,0,2,22,5,3,4,-1,22,6,3,2,2,8406751294387504e-20,-.2301639020442963,.124085396528244,0,2,0,5,4,4,-1,0,6,4,2,2,.0172388590872288,.0539665818214417,-.5818564891815186,0,3,6,0,14,10,-1,13,0,7,5,2,6,5,7,5,2,-.0786773264408112,-.4061115086078644,.056923508644104,0,2,1,12,4,3,-1,1,13,4,1,3,.005585959181189537,.0368424393236637,-.5646867752075195,0,3,20,7,2,2,-1,21,7,1,1,2,20,8,1,1,2,-.0006132239941507578,.1785047054290772,-.0668883100152016,0,3,3,7,2,2,-1,3,7,1,1,2,4,8,1,1,2,.0007940084906294942,-.0783978328108788,.3054557144641876,0,2,22,6,3,4,-1,22,7,3,2,2,.012827199883759,.0404374599456787,-.6479570865631104,0,2,9,6,7,3,-1,9,7,7,1,3,.0119779799133539,-.0993791595101357,.2267276048660278,0,2,11,6,4,2,-1,11,7,4,1,2,-.00493787694722414,.270632803440094,-.0839221030473709,0,2,0,6,5,4,-1,0,7,5,2,2,.0203377306461334,.040057111531496,-.6170961260795593,0,2,5,3,15,6,-1,5,5,15,2,3,-.1582631021738052,.371801108121872,-.0776448771357536,0,2,4,4,5,2,-1,4,5,5,1,2,.004515057895332575,-.1424572020769119,.1946897059679031,0,2,11,12,6,3,-1,13,12,2,3,3,-.0179421696811914,-.7258480787277222,.0292347799986601,1,2,3,0,1,3,-1,2,1,1,1,3,.005215315148234367,.0460041500627995,-.4536756873130798,0,2,7,11,12,2,-1,11,11,4,2,3,-.007786383852362633,.1746426969766617,-.1098980978131294,0,2,0,8,4,4,-1,0,9,4,2,2,.009413344785571098,.0346476286649704,-.5983666181564331,0,2,8,7,9,3,-1,8,8,9,1,3,.00762187410145998,-.1057026013731957,.2037336975336075,0,2,8,8,9,6,-1,8,10,9,2,3,.0216018799692392,-.0909303426742554,.2887038886547089,0,2,20,11,5,4,-1,20,12,5,2,2,-.0118230897933245,-.6303614974021912,.0240826196968555,0,2,7,5,8,3,-1,9,5,4,3,2,-.020232979208231,-.7420278787612915,.0235212203115225,0,3,16,0,2,2,-1,17,0,1,1,2,16,1,1,1,2,.0006451014778576791,-.0552557893097401,.1650166064500809,0,2,0,11,5,4,-1,0,12,5,2,2,-.008187602274119854,-.5770931839942932,.0352346412837505,0,3,16,0,2,2,-1,17,0,1,1,2,16,1,1,1,2,-.00045044958824291825,.1859780997037888,-.08243677765131,0,2,5,9,6,6,-1,7,9,2,6,3,-.0273097790777683,-.7204548716545105,.0276838503777981,0,3,14,10,10,4,-1,19,10,5,2,2,14,12,5,2,2,.007305101957172155,-.0758159905672073,.1228180006146431,0,2,6,6,3,1,-1,7,6,1,1,3,.0007211818010546267,-.0847066268324852,.2212305068969727,0,2,16,6,3,2,-1,17,6,1,2,3,-.0005579470889642835,.092200443148613,-.0512673109769821,0,2,6,6,3,2,-1,7,6,1,2,3,-.0012906070332974195,.236485093832016,-.085636742413044,1,2,13,3,8,4,-1,12,4,8,2,2,-.0234409496188164,-.341759204864502,.0303556900471449,1,2,2,0,1,2,-1,2,0,1,1,2,6700373342027888e-20,-.1778312027454376,.1098366007208824,1,2,21,0,2,1,-1,21,0,1,1,2,-.0020913260523229837,-.3296548128128052,.0488219298422337,1,2,4,0,1,2,-1,4,0,1,1,2,.005288336891680956,.047602079808712,-.4229690134525299,1,2,13,1,8,6,-1,11,3,8,2,3,.1046722009778023,.0145577099174261,-.5163959860801697,1,2,12,3,4,8,-1,13,4,2,8,2,.0410936884582043,.0255694594234228,-.6734575033187866,0,2,3,0,20,15,-1,3,0,10,15,2,.4545299112796783,-.0473212711513042,.4647259116172791,0,2,9,0,7,3,-1,9,1,7,1,3,-.004420027136802673,.2172905951738358,-.0805237367749214,0,2,12,1,5,2,-1,12,2,5,1,2,-.0033253689762204885,.1196364015340805,-.084737166762352,0,2,6,1,13,3,-1,6,2,13,1,3,.0152236903086305,-.0892436280846596,.2284111976623535,0,3,14,3,10,12,-1,19,3,5,6,2,14,9,5,6,2,-.0312239099293947,.1464260965585709,-.1012998968362808,0,2,1,6,21,6,-1,8,6,7,6,3,-.0729675367474556,.1977909952402115,-.0998045280575752,0,2,12,0,10,12,-1,12,0,5,12,2,.0434687100350857,-.0738932862877846,.1571179032325745,0,2,7,8,11,3,-1,7,9,11,1,3,.007742725778371096,-.090792253613472,.244967594742775,0,2,2,5,22,10,-1,2,5,11,10,2,-.0834884494543076,.1732859015464783,-.1288128942251205,0,2,5,4,15,4,-1,5,6,15,2,2,.0421115085482597,-.1475321054458618,.1373448967933655,0,2,7,1,15,6,-1,7,3,15,2,3,.0966737270355225,-.0551961399614811,.3563303947448731,0,2,0,8,2,6,-1,0,10,2,2,3,-.008899398148059845,-.5261930823326111,.0388906002044678,0,2,5,1,15,4,-1,5,2,15,2,2,-.0238508302718401,.1924559026956558,-.1050153970718384,0,3,7,8,2,2,-1,7,8,1,1,2,8,9,1,1,2,-.000749021302908659,.2476740926504135,-.073859728872776,0,2,11,9,9,2,-1,14,9,3,2,3,-.0230488497763872,-.5220348238945007,.0295383799821138,0,3,7,8,2,2,-1,7,8,1,1,2,8,9,1,1,2,.0005792090087197721,-.080705501139164,.2493984997272492,0,2,17,10,8,4,-1,17,11,8,2,2,-.0254354309290648,-.6520490050315857,.0163280703127384,0,2,0,10,8,4,-1,0,11,8,2,2,.01763916015625,.0246949195861816,-.6850522756576538,0,2,16,11,6,4,-1,18,11,2,4,3,.0205357391387224,.0165182203054428,-.4285225868225098,0,2,0,13,24,1,-1,6,13,12,1,2,.0111132804304361,-.0871591791510582,.2062001973390579,-1.3217060565948486,73,0,3,0,9,10,6,-1,0,9,5,3,2,5,12,5,3,2,.0140618495643139,-.2737283110618591,.4017829895019531,0,3,13,5,10,10,-1,18,5,5,5,2,13,10,5,5,2,-.0334245301783085,.3433864116668701,-.1524070948362351,0,2,0,4,4,2,-1,2,4,2,2,2,-.003398272907361388,.3046114146709442,-.2162856012582779,0,3,13,5,12,10,-1,19,5,6,5,2,13,10,6,5,2,.0673939511179924,-.0539562106132507,.3304964005947113,0,3,0,5,12,10,-1,0,5,6,5,2,6,10,6,5,2,-.0515447482466698,.3804036974906921,-.1334261000156403,0,2,11,11,3,4,-1,11,13,3,2,2,.0036630779504776,-.1760202944278717,.2139966934919357,1,2,5,8,2,5,-1,5,8,1,5,2,.007883662357926369,.0570616200566292,-.5150743126869202,0,2,4,14,18,1,-1,4,14,9,1,2,-.008948004804551601,.2230996936559677,-.1190536990761757,0,2,1,0,1,6,-1,1,3,1,3,2,-.0005576058756560087,.0999659672379494,-.2558285892009735,0,2,8,9,9,4,-1,8,10,9,2,2,.009538939222693443,-.0655315071344376,.3246265947818756,0,2,0,9,5,4,-1,0,10,5,2,2,.007790413219481707,.0450260303914547,-.6068859100341797,0,2,19,5,6,2,-1,21,5,2,2,3,.004069277085363865,-.0624743513762951,.1570695042610169,0,2,0,5,6,2,-1,2,5,2,2,3,.0031110940035432577,-.0744680091738701,.2600801885128021,0,2,13,9,6,3,-1,15,9,2,3,3,.0156514495611191,.0255663506686687,-.5172523260116577,0,2,2,3,21,9,-1,9,3,7,9,3,.2044613063335419,-.0763430967926979,.332390695810318,0,2,11,9,10,2,-1,11,9,5,2,2,-.0101691596210003,.1606681048870087,-.1091597974300385,0,3,0,0,24,14,-1,0,0,12,7,2,12,7,12,7,2,.1894780993461609,.0538599416613579,-.5398759841918945,0,2,5,2,15,6,-1,5,4,15,2,3,-.14792400598526,.2385465949773789,-.1132820993661881,0,2,2,0,16,11,-1,10,0,8,11,2,-.1483031064271927,.3646511137485504,-.0753156766295433,0,2,5,0,15,6,-1,5,2,15,2,3,-.132553294301033,.2919555902481079,-.0949441567063332,0,2,10,5,5,4,-1,10,6,5,2,2,-.0163901709020138,.3920511901378632,-.0685021281242371,0,2,23,0,2,3,-1,23,1,2,1,3,-.006324097979813814,-.6633772253990173,.0337768010795116,0,2,0,0,6,3,-1,0,1,6,1,3,.0147409504279494,.0431423708796501,-.5016931891441345,0,2,10,5,15,2,-1,10,6,15,1,2,.0171020403504372,-.1739968061447144,.2036074995994568,0,3,0,4,6,4,-1,0,4,3,2,2,3,6,3,2,2,-.007523206062614918,.2614240050315857,-.0894730314612389,1,2,21,7,2,4,-1,20,8,2,2,2,.008089945651590824,.0491316393017769,-.3869245946407318,1,2,4,7,4,2,-1,5,8,2,2,2,-.0111914901062846,-.7151393890380859,.0292793400585651,0,2,24,13,1,2,-1,24,14,1,1,2,-6485549238277599e-20,.1147895976901054,-.1195824965834618,0,2,2,0,4,15,-1,3,0,2,15,2,.0263162907212973,.0260859299451113,-.8071029186248779,1,2,21,0,4,1,-1,22,1,2,1,2,-.0132494196295738,-.321144312620163,.0075486088171601295,1,2,4,0,1,4,-1,3,1,1,2,2,.006218059919774532,.0555592402815819,-.4065248966217041,0,3,1,1,24,14,-1,13,1,12,7,2,1,8,12,7,2,.1724980026483536,.0407503582537174,-.5056337714195251,0,2,6,9,6,6,-1,8,9,2,6,3,-.0216798391193151,-.6235452890396118,.0264780297875404,0,2,5,3,15,4,-1,10,3,5,4,3,.0167031493037939,-.1379484981298447,.1374935954809189,0,2,0,0,20,10,-1,5,0,10,10,2,-.0904578119516373,.2364515066146851,-.0822857320308685,0,3,19,3,6,12,-1,22,3,3,6,2,19,9,3,6,2,-.0319220200181007,.2578540146350861,-.0472433306276798,0,2,3,2,7,2,-1,3,3,7,1,2,-.0107858600094914,.1915684044361115,-.1092626005411148,0,3,19,3,6,12,-1,22,3,3,6,2,19,9,3,6,2,.0153568601235747,-.0915980264544487,.1492947041988373,0,3,0,3,6,12,-1,0,3,3,6,2,3,9,3,6,2,-.0298386197537184,.3693186044692993,-.0698615685105324,0,2,19,14,6,1,-1,19,14,3,1,2,.0015088700456544757,-.0684053674340248,.1167493984103203,0,2,4,2,6,13,-1,6,2,2,13,3,-.0391593612730503,-.5139203071594238,.037696298211813,0,2,17,14,8,1,-1,19,14,4,1,2,.009695762768387794,.0178152993321419,-.4685910940170288,0,2,0,14,8,1,-1,2,14,4,1,2,.0007268316112458706,-.13107830286026,.157490000128746,1,2,23,11,2,2,-1,23,11,2,1,2,.003989457152783871,.0452235005795956,-.4237715899944305,1,2,2,11,2,2,-1,2,11,1,2,2,-.005160097032785416,-.5150998830795288,.03480564057827,0,2,8,4,9,4,-1,8,5,9,2,2,-.0237389300018549,.2213699966669083,-.0842292308807373,0,2,8,4,9,3,-1,8,5,9,1,3,.0145637700334191,-.0898087024688721,.2186468988656998,0,3,22,6,2,4,-1,23,6,1,2,2,22,8,1,2,2,.0007284965831786394,-.0709035396575928,.1204996034502983,0,2,7,3,6,8,-1,9,3,2,8,3,-.031149860471487,-.6067348122596741,.0294798705726862,0,2,22,4,3,4,-1,22,5,3,2,2,.0167685598134995,.0236525908112526,-.4164066910743713,1,2,3,9,4,2,-1,4,10,2,2,2,-.008903334848582745,-.5536022186279297,.0302125699818134,0,3,17,7,2,2,-1,18,7,1,1,2,17,8,1,1,2,.0005396113265305758,-.0588473901152611,.1531303972005844,0,2,9,11,6,1,-1,11,11,2,1,3,-.008388601243495941,-.7052780985832214,.0250979401171207,0,3,17,7,2,2,-1,18,7,1,1,2,17,8,1,1,2,-.00034085000515915453,.177186906337738,-.1048467978835106,0,2,0,7,2,4,-1,0,8,2,2,2,.006182800978422165,.0330388285219669,-.4948574900627136,0,2,20,5,5,6,-1,20,7,5,2,3,.0008270256803371012,-.1844830960035324,.0777885988354683,0,3,6,7,2,2,-1,6,7,1,1,2,7,8,1,1,2,-.0006098083104006946,.1959578990936279,-.0837520435452461,0,3,17,7,2,2,-1,18,7,1,1,2,17,8,1,1,2,.00012273030006326735,-.0814708098769188,.1209300011396408,0,3,6,7,2,2,-1,6,7,1,1,2,7,8,1,1,2,.00046565610682591796,-.0953319519758224,.2288299947977066,0,2,15,0,4,9,-1,16,0,2,9,2,-.0216477997601032,-.69338059425354,.0170615408569574,0,3,5,1,14,14,-1,5,1,7,7,2,12,8,7,7,2,.0595006607472897,.0526031702756882,-.2782197892665863,0,2,15,0,4,9,-1,16,0,2,9,2,.025365199893713,.00899545382708311,-.6383489966392517,0,2,0,7,5,3,-1,0,8,5,1,3,-.0039667091332376,-.3175272047519684,.0470112897455692,1,2,21,2,3,4,-1,22,3,1,4,3,.008278477936983109,-.0544440597295761,.2219938933849335,0,2,6,0,4,15,-1,7,0,2,15,2,-.0221254508942366,-.6738150715827942,.0225456394255161,1,2,21,2,3,4,-1,22,3,1,4,3,-.0180159192532301,.1972057968378067,-.0419279783964157,1,2,4,2,4,3,-1,3,3,4,1,3,.008442623540759087,-.0605471916496754,.2649214863777161,1,2,13,5,3,7,-1,14,6,1,7,3,-.0325668416917324,-.7107285857200623,.0118406098335981,0,2,4,10,15,1,-1,9,10,5,1,3,-.004765549208968878,.1384397000074387,-.1150531992316246,0,2,12,6,10,9,-1,12,6,5,9,2,.056936290115118,-.0613397099077702,.2665694057941437,0,2,1,1,22,14,-1,12,1,11,14,2,.1374146044254303,-.1139679029583931,.1789363026618958,0,2,11,8,3,2,-1,11,9,3,1,2,.003412300953641534,-.0668940767645836,.259561687707901,0,2,2,5,11,2,-1,2,6,11,1,2,.0116290198639035,-.1346206963062286,.1518495976924896,-1.4393190145492554,102,1,2,4,1,10,4,-1,3,2,10,2,2,-.0302658006548882,.3809668123722076,-.133776992559433,0,2,5,1,15,6,-1,5,3,15,2,3,-.1888993978500366,.3472220003604889,-.1143490970134735,0,3,0,9,6,6,-1,0,9,3,3,2,3,12,3,3,2,.004475660156458616,-.1779001951217651,.1983720064163208,0,2,19,3,5,2,-1,19,4,5,1,2,-.0092559102922678,.2553296089172363,-.0956856831908226,0,3,2,10,14,4,-1,2,10,7,2,2,9,12,7,2,2,.0103751895949245,-.1290100961923599,.2047273963689804,0,2,1,3,24,8,-1,9,3,8,8,3,.2527360022068024,-.0779134780168533,.341371089220047,0,2,0,8,2,6,-1,0,10,2,2,3,.007995231077075005,.119166798889637,-.4138369858264923,0,2,23,14,2,1,-1,23,14,1,1,2,66510503529571e-18,-.2305306047201157,.1328932046890259,0,3,0,4,6,4,-1,0,4,3,2,2,3,6,3,2,2,.0104297399520874,-.0622061118483543,.2935121059417725,0,2,3,13,21,1,-1,10,13,7,1,3,-.009451309219002724,.1671503931283951,-.1161310002207756,0,3,0,0,24,14,-1,0,0,12,7,2,12,7,12,7,2,-.138630598783493,-.4514685869216919,.0725729763507843,0,2,24,0,1,10,-1,24,5,1,5,2,-.0154232997447252,-.4277118146419525,.0248409193009138,1,2,4,11,2,2,-1,4,11,1,2,2,-.006578299216926098,-.6540787816047668,.0402618311345577,0,2,23,14,2,1,-1,23,14,1,1,2,-68917557655368e-18,.2068260014057159,-.1195247992873192,0,2,0,14,2,1,-1,1,14,1,1,2,7141628884710371e-20,-.1625899970531464,.1518989056348801,0,2,7,2,11,6,-1,7,4,11,2,3,.1354866027832031,-.0504554286599159,.4712490141391754,1,2,2,2,2,2,-1,2,2,1,2,2,.001128623029217124,-.1934940963983536,.149202898144722,0,2,24,0,1,10,-1,24,5,1,5,2,.0376871302723885,-.0006513047264888883,-.5566216707229614,0,2,0,0,1,10,-1,0,5,1,5,2,-.0177724994719028,-.5733047127723694,.0462512709200382,0,2,12,11,6,2,-1,14,11,2,2,3,-.0141524598002434,-.7905998826026917,.0153570203110576,0,2,2,0,20,2,-1,7,0,10,2,2,-.019447410479188,.2123239040374756,-.1021943986415863,0,2,10,0,10,4,-1,10,0,5,4,2,.012915019877255,-.0788644626736641,.1457864940166473,0,2,0,0,20,1,-1,10,0,10,1,2,.007728312164545059,-.1338106989860535,.2055318057537079,0,2,8,4,10,3,-1,8,5,10,1,3,-.0264210291206837,.272904098033905,-.0841038301587105,0,2,9,6,7,6,-1,9,8,7,2,3,-.0216425806283951,.2165616005659103,-.0997976064682007,0,2,8,5,9,3,-1,8,6,9,1,3,-.0186041705310345,.3167817890644074,-.0684646219015121,1,2,6,0,1,3,-1,5,1,1,1,3,.007918447256088257,.038932591676712,-.5849621891975403,0,2,24,0,1,4,-1,24,2,1,2,2,-9086877980735153e-20,.1183537989854813,-.2693997025489807,0,2,9,10,2,1,-1,10,10,1,1,2,-6327161099761724e-20,.1483621001243591,-.1414014995098114,1,2,22,10,1,4,-1,21,11,1,2,2,.003012385917827487,.0475597009062767,-.3168076872825623,0,2,4,0,6,5,-1,6,0,2,5,3,.0202028602361679,.0363369397819042,-.4958786964416504,0,3,17,3,8,12,-1,21,3,4,6,2,17,9,4,6,2,.0681129470467567,-.0636018067598343,.3745648860931397,0,3,0,3,8,12,-1,0,3,4,6,2,4,9,4,6,2,-.0613449215888977,.3703984022140503,-.0626903176307678,0,3,10,3,6,10,-1,13,3,3,5,2,10,8,3,5,2,-.0239223092794418,-.3475331962108612,.0568292401731014,1,2,3,10,4,1,-1,4,11,2,1,2,.004427940119057894,.0318974405527115,-.5085908770561218,1,2,16,2,9,4,-1,16,2,9,2,2,-.0923664569854736,-.4889659881591797,.009993869811296463,1,2,9,2,4,9,-1,9,2,2,9,2,-.003187831025570631,.0857494324445724,-.2382344007492065,0,2,20,9,3,3,-1,20,10,3,1,3,.006260529160499573,.0244128108024597,-.5500137209892273,0,2,6,1,13,4,-1,6,2,13,2,2,.0217170491814613,-.084798701107502,.2182479947805405,0,2,10,4,5,4,-1,10,5,5,2,2,.0102959601208568,-.1032914966344833,.1945870965719223,0,2,0,5,3,3,-1,0,6,3,1,3,.0121496301144362,.0322238989174366,-.5932865738868713,0,2,21,5,4,4,-1,21,6,4,2,2,.0191168300807476,.0309407506138086,-.4538871943950653,0,2,0,5,4,4,-1,0,6,4,2,2,.0007106770062819123,-.1545806974172592,.1262297928333283,0,2,8,9,9,6,-1,8,11,9,2,3,-.029427420347929,.2070481926202774,-.0861818864941597,1,2,4,11,3,1,-1,5,12,1,1,3,-.003706746967509389,-.5155926942825317,.0383589081466198,0,2,23,14,2,1,-1,23,14,1,1,2,60146670875838026e-21,-.102361798286438,.0884054377675056,0,2,0,14,2,1,-1,1,14,1,1,2,-6871361256344244e-20,.1984436959028244,-.0994443595409393,0,2,11,1,4,14,-1,11,8,4,7,2,-.0848333984613419,-.3900933861732483,.0397581607103348,1,2,4,0,2,3,-1,3,1,2,1,3,.0115453395992517,.0299104899168015,-.5021548867225647,0,2,24,12,1,2,-1,24,13,1,1,2,.001272176974453032,.0357883498072624,-.3856284022331238,0,2,0,1,14,14,-1,0,8,14,7,2,.378940612077713,.0429151207208633,-.3726823925971985,0,2,13,0,6,15,-1,15,0,2,15,3,.0587286688387394,.0175066608935595,-.7129334807395935,0,2,0,1,1,4,-1,0,3,1,2,2,-7266741886269301e-20,.0852374136447906,-.1796067953109741,0,2,24,13,1,2,-1,24,14,1,1,2,-.0025661939289420843,-.4941900074481964,.0211067497730255,0,2,0,13,1,2,-1,0,14,1,1,2,-6254477193579078e-20,.1260727941989899,-.1358107030391693,0,2,23,11,2,4,-1,23,12,2,2,2,-.0033382088877260685,-.342547595500946,.0313290804624558,0,2,0,11,2,4,-1,0,12,2,2,2,.004003258887678385,.0353341810405254,-.4785414040088654,0,3,16,10,2,2,-1,17,10,1,1,2,16,11,1,1,2,7872544665588066e-20,-.0865093916654587,.1098069027066231,0,3,7,10,2,2,-1,7,10,1,1,2,8,11,1,1,2,.0003541138139553368,-.0866223275661469,.1815810948610306,0,3,1,0,24,6,-1,13,0,12,3,2,1,3,12,3,2,-.100329302251339,-.4118100106716156,.0407990105450153,0,2,6,1,6,12,-1,8,1,2,12,3,.0457341782748699,.0250630006194115,-.5801063179969788,0,2,19,6,6,3,-1,19,7,6,1,3,.014357109554112,.0273739993572235,-.3111906945705414,0,2,5,6,7,2,-1,5,7,7,1,2,.004282395821064711,-.1212206035852432,.1300680041313171,0,2,9,6,7,4,-1,9,7,7,2,2,-.0191692691296339,.3547115027904511,-.0586979016661644,0,2,0,6,6,3,-1,0,7,6,1,3,.0203719399869442,.0270470399409533,-.6216102838516235,0,2,6,8,13,4,-1,6,9,13,2,2,-.0119816595688462,.1762886941432953,-.094315692782402,0,3,7,10,2,2,-1,7,10,1,1,2,8,11,1,1,2,-9427832264918834e-20,.1507049947977066,-.1071290969848633,0,2,12,11,6,2,-1,14,11,2,2,3,.0101822800934315,.016143349930644,-.3503915071487427,0,3,6,0,12,10,-1,6,0,6,5,2,12,5,6,5,2,-.0520590804517269,-.312146008014679,.0477841906249523,0,2,12,11,6,2,-1,14,11,2,2,3,-.0249434690922499,-.7933396100997925,-.00040430951048620045,0,3,7,0,2,2,-1,7,0,1,1,2,8,1,1,1,2,-.0006225982797332108,.2043831050395966,-.0712744519114494,0,3,16,0,2,2,-1,17,0,1,1,2,16,1,1,1,2,-5685929863830097e-20,.0861500576138496,-.0658712089061737,0,3,7,0,2,2,-1,7,0,1,1,2,8,1,1,1,2,.00040834350511431694,-.1051706001162529,.2224697023630142,0,2,12,11,6,2,-1,14,11,2,2,3,-.0011075460352003574,.0464305393397808,-.0319086797535419,0,2,7,11,6,2,-1,9,11,2,2,3,-.0123662399128079,-.6207143068313599,.0261646900326014,0,2,5,12,18,3,-1,11,12,6,3,3,-.0354762189090252,.1230582967400551,-.0519298203289509,1,2,2,0,1,2,-1,2,0,1,1,2,-.002379444893449545,-.3795419931411743,.0417488515377045,0,3,21,4,4,2,-1,23,4,2,1,2,21,5,2,1,2,.0013966970145702362,-.0851486772298813,.1512037962675095,0,2,9,3,7,3,-1,9,4,7,1,3,.005143789108842611,-.0816644281148911,.1789588034152985,1,2,13,2,8,5,-1,15,4,4,5,2,-.1239939033985138,-.6658980846405029,.00952041894197464,1,2,12,1,6,4,-1,11,2,6,2,2,.0393908508121967,.0182536505162716,-.7637290954589844,0,2,22,0,2,2,-1,22,1,2,1,2,.0029372270219027996,.0226261299103498,-.3233875036239624,0,2,4,1,16,12,-1,12,1,8,12,2,.1816650927066803,-.0618673898279667,.229893296957016,0,2,3,0,20,10,-1,3,0,10,10,2,.0892752110958099,-.0848015919327736,.2109096944332123,0,3,0,4,6,6,-1,0,4,3,3,2,3,7,3,3,2,.0179201308637857,-.0663900971412659,.2243462055921555,1,2,22,4,3,3,-1,23,5,1,3,3,.005502411164343357,-.055913619697094,.1079157963395119,1,2,3,4,3,3,-1,2,5,3,1,3,-.0126318400725722,.3352184891700745,-.0470694787800312,0,2,22,7,3,4,-1,22,8,3,2,2,.008204018697142601,.0521674789488316,-.5830680727958679,0,2,3,1,4,7,-1,4,1,2,7,2,.0215438604354858,.0103719802573323,-.8169081807136536,0,2,22,7,3,4,-1,22,8,3,2,2,-.0042779878713190556,-.3437061011791229,.034835658967495,1,2,2,0,1,2,-1,2,0,1,1,2,.00957217626273632,.0160374492406845,-.7592146992683411,0,2,18,4,6,2,-1,18,5,6,1,2,.005949999205768108,-.0835138633847237,.0937561765313149,0,2,5,3,15,6,-1,5,5,15,2,3,-.0868803784251213,.1977919936180115,-.0735685229301453,0,2,16,4,8,4,-1,16,5,8,2,2,.005769073031842709,-.0611343309283257,.0826714411377907,0,3,0,1,24,10,-1,0,1,12,5,2,12,6,12,5,2,.148064598441124,.0396532900631428,-.408526211977005,0,2,14,0,4,7,-1,15,0,2,7,2,-.018668269738555,-.6671301126480103,.015644509345293,0,2,0,7,3,4,-1,0,8,3,2,2,.0101426700130105,.0211487896740437,-.5610821843147278,0,3,18,5,4,4,-1,20,5,2,2,2,18,7,2,2,2,-.002626311033964157,.0881423130631447,-.0586008317768574,0,3,5,5,6,2,-1,5,5,3,1,2,8,6,3,1,2,.0030406240839511156,-.0699731782078743,.1942113041877747,0,2,21,9,2,3,-1,21,10,2,1,3,-.004052311182022095,-.3989843130111694,.0284519009292126,0,3,7,1,2,2,-1,7,1,1,1,2,8,2,1,1,2,.00033293411252088845,-.0920187085866928,.1521372944116592,0,3,16,1,2,2,-1,17,1,1,1,2,16,2,1,1,2,-.00014471479516942054,.1328881978988648,-.0869787335395813,-1.3500690460205078,115,0,2,9,7,7,6,-1,9,9,7,2,3,-.0305288899689913,.3361127972602844,-.1605879068374634,0,2,17,2,7,2,-1,17,3,7,1,2,-.0068238358944654465,.2510839104652405,-.2578383982181549,1,2,4,2,9,4,-1,3,3,9,2,2,-.0260700508952141,.3176701068878174,-.111156202852726,0,2,19,14,6,1,-1,19,14,3,1,2,.0016021650517359376,-.1096177026629448,.1561331003904343,0,2,6,9,11,6,-1,6,11,11,2,3,-.0346175394952297,.2614395916461945,-.0955564379692078,0,3,17,3,8,12,-1,21,3,4,6,2,17,9,4,6,2,.0825498923659325,-.0359772108495235,.3189736902713776,0,3,0,7,24,8,-1,0,7,12,4,2,12,11,12,4,2,-.1079908013343811,-.4661987125873566,.0965379774570465,0,3,5,3,16,12,-1,13,3,8,6,2,5,9,8,6,2,-.0710962936282158,-.3290941119194031,.0201707594096661,0,2,0,3,24,6,-1,8,5,8,2,9,.6102272272109985,-.0410851910710335,.5919780731201172,0,2,1,8,24,1,-1,7,8,12,1,2,-.009618048556149006,.1845327019691467,-.1256957054138184,0,3,1,9,14,6,-1,1,9,7,3,2,8,12,7,3,2,-.0216567497700453,.355886310338974,-.0654195472598076,0,2,19,5,3,2,-1,19,6,3,1,2,.0032288730144500732,-.1597114056348801,.1442176997661591,0,2,0,14,10,1,-1,5,14,5,1,2,.0036023850552737713,-.1301265954971314,.1848530024290085,0,2,5,1,15,6,-1,5,3,15,2,3,.1224254965782166,-.050962008535862,.478727400302887,0,2,1,1,7,6,-1,1,3,7,2,3,-.0398168414831162,.1911015063524246,-.1490415036678314,0,2,15,12,6,3,-1,17,13,2,1,9,.0165654607117176,.0250385701656342,-.2660810947418213,1,2,4,0,1,3,-1,3,1,1,1,3,.006731497123837471,.0361662209033966,-.5751237273216248,0,2,1,12,24,3,-1,7,12,12,3,2,-.0238826293498278,.1817242056131363,-.1013408973813057,0,2,3,12,6,3,-1,5,13,2,1,9,.0168766304850578,.0499957092106342,-.496448814868927,0,3,1,0,24,12,-1,13,0,12,6,2,1,6,12,6,2,.0814632922410965,.0508196912705898,-.3092927038669586,0,2,2,0,21,15,-1,9,0,7,15,3,.1567866057157517,-.0846417918801308,.209758996963501,0,2,17,3,6,2,-1,17,4,6,1,2,.0107369897887111,-.0588766187429428,.2673564851284027,0,2,3,3,14,2,-1,3,4,14,1,2,-.0162507798522711,.21858249604702,-.1275278925895691,0,2,4,0,21,4,-1,11,0,7,4,3,-.0513998307287693,.1707165986299515,-.0564976185560226,0,2,6,13,4,1,-1,7,13,2,1,2,.0018661050125956535,.0403385981917381,-.4740450084209442,0,3,17,3,8,12,-1,21,3,4,6,2,17,9,4,6,2,-.0494354106485844,.1537600010633469,-.0417859293520451,0,3,0,3,8,12,-1,0,3,4,6,2,4,9,4,6,2,.0696671828627586,-.0588539093732834,.309996485710144,0,3,5,0,16,8,-1,13,0,8,4,2,5,4,8,4,2,-.0781185403466225,-.41095170378685,.0523068793118,1,2,3,7,4,2,-1,4,8,2,2,2,-.008616194128990173,-.5668942928314209,.0286804605275393,0,2,5,11,15,4,-1,5,12,15,2,2,.006891637109220028,-.0957784205675125,.1680631041526794,0,2,10,13,1,2,-1,10,14,1,1,2,8473441994283348e-20,-.1476065963506699,.1278074979782105,0,2,12,14,6,1,-1,14,14,2,1,3,-.0065460228361189365,-.5353912711143494,.0211423803120852,0,2,9,5,6,4,-1,9,6,6,2,2,-.0119369700551033,.2489618957042694,-.0659059137105942,0,2,12,5,13,2,-1,12,6,13,1,2,.0160134993493557,-.0751639306545258,.0920000970363617,0,2,5,0,15,6,-1,5,2,15,2,3,-.179788202047348,.3122220933437347,-.0546800307929516,0,2,3,0,20,15,-1,3,0,10,15,2,.4293603003025055,-.0467442497611046,.4671711027622223,0,2,1,1,22,14,-1,12,1,11,14,2,.1762980967760086,-.1196762025356293,.2303612977266312,0,2,15,5,10,2,-1,15,6,10,1,2,.0434980615973473,.0213767793029547,-.3402695953845978,0,2,0,5,13,2,-1,0,6,13,1,2,.0168955195695162,-.1305568963289261,.1834042966365814,0,2,5,2,15,4,-1,5,3,15,2,2,.0185353793203831,-.0754243135452271,.2354936003684998,0,2,5,4,15,3,-1,5,5,15,1,3,.0173294302076101,-.0853839814662933,.2036404013633728,0,2,21,11,4,4,-1,21,12,4,2,2,.008663074113428593,.0385910011827946,-.6201460957527161,1,2,5,0,1,2,-1,5,0,1,1,2,.005705268122255802,.0312472805380821,-.4070529043674469,0,2,23,3,2,4,-1,23,3,1,4,2,-.0018030379433184862,.1957851052284241,-.1433366984128952,0,2,7,1,4,6,-1,8,1,2,6,2,-.0187879204750061,-.8691418766975403,.0169819705188274,0,2,8,6,11,3,-1,8,7,11,1,3,.0186009202152491,-.0818153098225594,.189138799905777,0,2,0,13,2,1,-1,1,13,1,1,2,8412059833062813e-20,-.1289912015199661,.1211050972342491,0,2,21,12,3,3,-1,21,13,3,1,3,-.005605712998658419,-.4698300957679749,.0159890707582235,0,2,1,12,3,3,-1,1,13,3,1,3,.003519257064908743,.0361930206418037,-.4484112858772278,0,2,23,3,2,4,-1,23,3,1,4,2,.0017741440096870065,-.0433034710586071,.139557495713234,0,2,0,3,2,4,-1,1,3,1,4,2,-.001635042019188404,.1395068019628525,-.1124152988195419,0,3,21,3,4,10,-1,23,3,2,5,2,21,8,2,5,2,.006479477044194937,-.0600515604019165,.0728941932320595,0,3,0,3,4,10,-1,0,3,2,5,2,2,8,2,5,2,-.0203247498720884,.429781585931778,-.0396846085786819,0,2,24,1,1,4,-1,24,2,1,2,2,-.006345304194837809,-.2533842921257019,.0242939405143261,0,2,0,0,1,6,-1,0,2,1,2,3,.009095997549593449,.0340887792408466,-.4518730044364929,0,2,16,1,4,4,-1,17,1,2,4,2,.0161635801196098,.0068225921131670475,-.7205737829208374,0,2,5,1,4,4,-1,6,1,2,4,2,-.0112293101847172,-.6191986203193665,.0222914796322584,0,2,15,2,10,12,-1,15,8,10,6,2,-.1763328015804291,-.6819115877151489,.008840755559504032,0,2,8,5,9,3,-1,8,6,9,1,3,.0192962400615215,-.079629048705101,.2013067007064819,0,2,6,7,14,2,-1,6,8,14,1,2,.0105654401704669,-.0832984521985054,.1872760951519013,0,2,10,7,5,4,-1,10,8,5,2,2,-.006761673837900162,.2069583982229233,-.0813189968466759,0,2,23,12,2,3,-1,23,13,2,1,3,-.0023086878936737776,-.2798121869564056,.0293897707015276,0,2,0,7,4,4,-1,0,8,4,2,2,-.006918931845575571,-.5095586180686951,.0291001908481121,0,2,3,13,21,2,-1,10,13,7,2,3,-.019592609256506,.1248695999383926,-.0666698589920998,0,2,6,1,3,1,-1,7,1,1,1,3,-.000566988019272685,.1772525012493134,-.0755556300282478,0,3,16,0,2,2,-1,17,0,1,1,2,16,1,1,1,2,.0006518710870295763,-.0468317084014416,.1377387940883637,0,3,7,0,2,2,-1,7,0,1,1,2,8,1,1,1,2,-.0004324443871155381,.1750548034906387,-.0822173282504082,0,2,23,12,2,3,-1,23,13,2,1,3,.003209128975868225,.0258904304355383,-.3546032905578613,0,2,8,8,9,2,-1,11,8,3,2,3,-.028899360448122,-.7315214276313782,.0180548094213009,0,2,23,12,2,3,-1,23,13,2,1,3,988036990747787e-19,-.0383186303079128,.0343451388180256,0,2,0,12,2,3,-1,0,13,2,1,3,-.0022848090156912804,-.3603490889072418,.0380517281591892,0,2,8,4,9,9,-1,8,7,9,3,3,.2230083048343658,-.035387709736824,.4118692874908447,0,3,3,11,12,4,-1,3,11,6,2,2,9,13,6,2,2,.0038663020823150873,-.114794097840786,.1196625977754593,0,2,10,10,5,4,-1,10,11,5,2,2,.0036781090311706066,-.088786207139492,.2093122005462647,0,2,7,14,6,1,-1,9,14,2,1,3,.0036886930465698242,.0420652516186237,-.3311671912670136,0,2,4,0,18,15,-1,4,0,9,15,2,-.5000842809677124,.4582319855690002,-.0300164502114058,0,2,0,3,4,4,-1,1,3,2,4,2,.00324575905688107,-.058139480650425,.2244455963373184,0,2,22,0,3,4,-1,22,2,3,2,2,-.000725153717212379,.0857456997036934,-.2164471000432968,0,2,0,0,20,8,-1,5,0,10,8,2,.0756241232156754,-.0728698670864105,.1809341013431549,0,3,1,5,24,10,-1,13,5,12,5,2,1,10,12,5,2,-.1401147991418839,-.3049497008323669,.0322263389825821,0,2,0,5,5,6,-1,0,7,5,2,3,.0012914249673485756,-.1651930958032608,.0796989724040031,0,2,18,3,4,2,-1,18,4,4,1,2,.004806306213140488,-.0511631406843662,.1528493016958237,1,2,2,3,4,2,-1,2,3,4,1,2,.0197005104273558,-.0214679203927517,.589863121509552,0,2,14,1,6,6,-1,16,1,2,6,3,-.0282465498894453,-.3611007034778595,.021594600751996,0,2,5,1,6,6,-1,7,1,2,6,3,.0318388007581234,.0213881190866232,-.5591915845870972,0,2,11,10,6,1,-1,13,10,2,1,3,.005292695946991444,.0171414706856012,-.3245368003845215,0,2,6,8,11,4,-1,6,9,11,2,2,.009317620657384396,-.069147951900959,.1877806931734085,0,3,23,13,2,2,-1,24,13,1,1,2,23,14,1,1,2,.0001981267996598035,-.0710251703858376,.1166272014379501,0,2,6,0,13,4,-1,6,1,13,2,2,.0172033403068781,-.0834768265485764,.1448491960763931,1,2,17,0,3,1,-1,18,1,1,1,3,.008054856210947037,.0214444492012262,-.2763100862503052,1,2,8,0,1,3,-1,7,1,1,1,3,.006741908844560385,.0341341383755207,-.355537086725235,0,3,22,12,2,2,-1,23,12,1,1,2,22,13,1,1,2,5713692007702775e-20,-.0699329003691673,.0822271332144737,0,2,0,13,2,1,-1,1,13,1,1,2,-6001443034620024e-20,.1533315926790237,-.080194279551506,0,2,22,13,2,1,-1,22,13,1,1,2,-6637762271566316e-20,.0740585327148438,-.0435769110918045,0,2,1,13,2,1,-1,2,13,1,1,2,7060549251036718e-20,-.1192411035299301,.1157367005944252,0,2,22,13,3,1,-1,23,13,1,1,3,7230143819469959e-20,-.0702318474650383,.0793638303875923,0,2,1,2,2,12,-1,2,2,1,12,2,-.0014867830323055387,.124576099216938,-.1076287999749184,0,2,18,3,4,2,-1,18,4,4,1,2,-.005243482068181038,.111677497625351,-.0614912398159504,0,2,3,3,4,2,-1,3,4,4,1,2,.007805523928254843,-.0496800504624844,.3046393096446991,0,2,24,0,1,12,-1,24,3,1,6,2,.0167157892137766,.0242684707045555,-.5641499757766724,0,2,5,8,15,6,-1,5,10,15,2,3,-.0197794307023287,.129310205578804,-.101400800049305,1,2,19,7,6,2,-1,19,7,6,1,2,-6775221845600754e-20,.0773630663752556,-.0876037329435349,0,2,1,10,5,3,-1,1,11,5,1,3,-.0129433302208781,-.8692914843559265,.0158042199909687,0,2,24,0,1,12,-1,24,3,1,6,2,-.0125468103215098,-.1350758969783783,.045630618929863,0,2,0,0,1,12,-1,0,3,1,6,2,.007972786203026772,.0405779294669628,-.3409133851528168,0,2,9,0,12,1,-1,13,0,4,1,3,-.006315289996564388,.137299194931984,-.056167159229517,0,2,4,0,12,1,-1,8,0,4,1,3,-.0036897659301757812,.1639326065778732,-.0914164036512375,0,2,3,0,20,1,-1,8,0,10,1,2,.005057888105511665,-.0800797268748283,.1433712989091873,0,2,1,0,9,2,-1,4,0,3,2,3,-.0299335699528456,-.5326762199401855,.0227312203496695,0,2,11,6,8,2,-1,11,7,8,1,2,.0070810988545417786,-.0732182189822197,.1027508974075317,0,2,11,3,3,8,-1,11,7,3,4,2,.0508137904107571,.0516868904232979,-.2544622123241425,1,2,20,4,4,2,-1,21,5,2,2,2,.0047044758684933186,-.0572907589375973,.076064832508564,1,2,6,7,2,6,-1,6,7,1,6,2,.0046408819034695625,.0559986904263496,-.2172269970178604,1,2,20,4,4,2,-1,21,5,2,2,2,-.009512174874544144,.1812860071659088,-.0377242304384708,1,2,5,4,2,4,-1,4,5,2,2,2,.002572624944150448,-.1238458007574081,.1421934068202972,-1.3960490226745605,128,0,2,7,5,11,3,-1,7,6,11,1,3,.0184330195188522,-.1618741005659103,.3351263999938965,0,2,20,1,3,4,-1,20,2,3,2,2,.0048202150501310825,-.097200833261013,.2755692005157471,0,2,8,4,9,3,-1,8,5,9,1,3,.0214508101344109,-.1013654991984367,.3922119140625,0,2,9,6,9,3,-1,9,7,9,1,3,.0201995000243187,-.1041551977396011,.3485709130764008,0,3,0,7,8,8,-1,0,7,4,4,2,4,11,4,4,2,.0154604399576783,-.1814713031053543,.2296576052904129,0,2,9,7,7,3,-1,9,8,7,1,3,.0121146701276302,-.0955794528126717,.3321264982223511,0,2,8,3,9,3,-1,8,4,9,1,3,.0166161693632603,-.0751067474484444,.3475660085678101,1,2,21,1,1,6,-1,19,3,1,2,3,-.0151290399953723,.1396238952875137,-.1150512024760246,0,2,0,7,24,5,-1,6,7,12,5,2,-.0707296282052994,.2683610916137695,-.1016533970832825,1,2,24,11,1,2,-1,24,11,1,1,2,.002283175941556692,.0443518795073032,-.4632245898246765,1,2,5,2,8,5,-1,5,2,4,5,2,.005585364997386932,.0919516831636429,-.3147256970405579,0,3,16,3,8,12,-1,20,3,4,6,2,16,9,4,6,2,-.040678508579731,.1471066027879715,-.0726505890488625,0,3,0,0,24,12,-1,0,0,12,6,2,12,6,12,6,2,-.1358978003263474,-.5053529739379883,.0469954796135426,0,3,8,2,10,8,-1,13,2,5,4,2,8,6,5,4,2,-.0384974703192711,-.3717043101787567,.05520835891366,0,3,0,3,2,8,-1,0,3,1,4,2,1,7,1,4,2,.0027928350027650595,-.1162076964974403,.1937797069549561,0,2,22,11,2,4,-1,22,12,2,2,2,.005341255106031895,.0129640102386475,-.4924449026584625,0,2,1,11,2,4,-1,1,12,2,2,2,-.002660450991243124,-.4564127027988434,.0437755398452282,0,2,12,2,13,12,-1,12,8,13,6,2,.3209887146949768,.0484563298523426,-.3930096924304962,1,2,5,8,2,4,-1,5,8,1,4,2,-.007249520160257816,-.4188942015171051,.0410884395241737,0,2,15,6,6,7,-1,17,6,2,7,3,.0233532395213842,.0302080996334553,-.3757928013801575,0,2,4,6,6,6,-1,6,6,2,6,3,-.022498020902276,-.4524075090885162,.0389229394495487,0,2,13,13,9,2,-1,16,13,3,2,3,-.0238666702061892,-.5288146734237671,.0138155296444893,1,2,4,4,7,4,-1,3,5,7,2,2,-.0336419306695461,.4436714053153992,-.0403416194021702,0,3,18,4,6,8,-1,21,4,3,4,2,18,8,3,4,2,.0221408791840076,-.0495454296469688,.2051838934421539,0,2,3,14,9,1,-1,6,14,3,1,3,.010603429749608,.0319968499243259,-.5148760080337524,0,3,11,11,14,4,-1,18,11,7,2,2,11,13,7,2,2,.009635714814066887,-.1237379983067513,.1527843028306961,0,3,1,4,6,8,-1,1,4,3,4,2,4,8,3,4,2,.0297187492251396,-.0567854084074497,.2904588878154755,1,2,23,0,2,2,-1,23,0,1,2,2,.0002054842043435201,-.2718465924263001,.1070784032344818,0,2,6,0,13,4,-1,6,1,13,2,2,-.0486726500093937,.4235774874687195,-.0456859990954399,0,2,11,0,4,2,-1,11,1,4,1,2,.0025377809070050716,-.0727348327636719,.2103600949048996,1,2,2,0,2,2,-1,2,0,2,1,2,-.003394152969121933,-.3815236985683441,.0445483289659023,0,2,20,9,5,6,-1,20,11,5,2,3,-.0237451493740082,-.4413619935512543,.0249414704740047,0,2,5,2,15,3,-1,5,3,15,1,3,-.020092299208045,.1694606989622116,-.0953345969319344,0,2,9,2,7,3,-1,9,3,7,1,3,.0110265100374818,-.0721762925386429,.2484644949436188,0,2,2,14,21,1,-1,9,14,7,1,3,-.0158068798482418,.2241718024015427,-.0724460408091545,0,2,8,11,16,4,-1,8,11,8,4,2,.0490073598921299,-.0551217384636402,.2583925127983093,0,2,0,12,24,2,-1,12,12,12,2,2,.0288716107606888,-.1153011992573738,.1924846023321152,0,2,22,9,3,6,-1,22,11,3,2,3,.007399017922580242,.0522995889186859,-.2191856950521469,0,3,0,1,12,2,-1,0,1,6,1,2,6,2,6,1,2,-.0061737848445773125,.2038096934556961,-.0696693286299706,0,2,8,9,9,3,-1,8,10,9,1,3,.009433256462216377,-.0534071698784828,.2586283981800079,0,2,0,9,3,6,-1,0,11,3,2,3,.0143210804089904,.0336425192654133,-.4679594039916992,0,3,11,11,14,4,-1,18,11,7,2,2,11,13,7,2,2,.0224872808903456,-.0431007482111454,.1123055964708328,0,2,7,9,4,6,-1,8,9,2,6,2,-.008801883086562157,-.5997744798660278,.0238500293344259,0,2,10,12,6,2,-1,12,12,2,2,3,-.009282492101192474,-.3792850077152252,.0247395392507315,0,2,0,12,1,2,-1,0,13,1,1,2,-3828879926004447e-20,.1094501987099648,-.127059206366539,0,3,15,3,10,12,-1,20,3,5,6,2,15,9,5,6,2,-.1060767024755478,.1223917007446289,-.0179706607013941,0,3,10,9,4,6,-1,10,9,2,3,2,12,12,2,3,2,.0145011199638247,.0254385806620121,-.5499516725540161,0,2,11,3,6,4,-1,11,3,3,4,2,-.0294254906475544,-.4407989084720612,.0163295306265354,0,2,0,0,14,14,-1,0,7,14,7,2,-.2141247987747192,-.581714928150177,.0224080495536327,0,3,15,2,10,12,-1,20,2,5,6,2,15,8,5,6,2,-.0159379299730062,.0447719283401966,-.0470217689871788,0,2,8,3,6,4,-1,11,3,3,4,2,.0358322896063328,.0257156305015087,-.5430511236190796,0,2,23,5,2,6,-1,23,7,2,2,3,-.011497899889946,-.4132392108440399,.0246592592447996,0,2,10,8,5,3,-1,10,9,5,1,3,.0076680490747094154,-.0596144981682301,.2419749945402145,0,2,20,7,5,4,-1,20,8,5,2,2,.0123357502743602,.0375008806586266,-.4776956140995026,0,2,7,10,11,4,-1,7,11,11,2,2,.0130474697798491,-.0609255395829678,.2419895976781845,0,2,16,13,1,2,-1,16,14,1,1,2,52074559789616615e-21,-.0981822684407234,.0891881734132767,0,2,3,1,5,4,-1,3,2,5,2,2,.0032866070978343487,-.0941056609153748,.1441165059804916,0,2,17,3,8,2,-1,17,4,8,1,2,-.0417326614260674,-.6405817270278931,.0221338905394077,0,2,0,7,5,4,-1,0,8,5,2,2,.00976381916552782,.0412781611084938,-.33542799949646,0,2,9,4,12,6,-1,13,4,4,6,3,.1077456995844841,.008176249451935291,-.4347884058952332,0,2,4,4,12,6,-1,8,4,4,6,3,.1119699031114578,.0199715103954077,-.6503595113754272,0,2,11,0,12,9,-1,11,0,6,9,2,.0680430680513382,-.0602735094726086,.138449102640152,0,2,4,5,16,8,-1,12,5,8,8,2,.1206192970275879,-.0666261836886406,.2128939926624298,0,2,16,12,2,1,-1,16,12,1,1,2,-.0027089789509773254,-.421476811170578,.007006293162703514,0,2,7,12,2,1,-1,8,12,1,1,2,-9879899153020233e-20,.1287330985069275,-.1178120002150536,0,3,19,3,6,4,-1,22,3,3,2,2,19,5,3,2,2,.017797689884901,-.0398075394332409,.2582241892814636,0,2,8,10,6,3,-1,10,10,2,3,3,-.0155267501249909,-.5375617146492004,.0254285801202059,0,3,16,6,2,2,-1,17,6,1,1,2,16,7,1,1,2,-.001137480023317039,.1497129052877426,-.0317900516092777,0,3,0,0,24,2,-1,0,0,12,1,2,12,1,12,1,2,.0219873897731304,.0302675794810057,-.4156928062438965,0,3,16,6,2,2,-1,17,6,1,1,2,16,7,1,1,2,5988097109366208e-20,-.0641673132777214,.079953707754612,0,3,0,3,6,4,-1,0,3,3,2,2,3,5,3,2,2,.007696608081459999,-.0727465227246284,.1708455979824066,0,2,22,0,3,4,-1,22,2,3,2,2,.0006279948865994811,.0341552086174488,-.1379152983427048,0,2,11,0,2,3,-1,11,1,2,1,3,-.001262214034795761,.1615235060453415,-.0755578279495239,1,2,21,7,2,4,-1,20,8,2,2,2,-.0110059296712279,-.4823004007339478,.0268340297043324,0,2,4,9,10,1,-1,9,9,5,1,2,-.009579379111528397,.1946887969970703,-.0669640377163887,0,3,16,6,2,2,-1,17,6,1,1,2,16,7,1,1,2,-9182195935864002e-20,.0793757066130638,-.0674495473504066,0,3,7,6,2,2,-1,7,6,1,1,2,8,7,1,1,2,.0012134959688410163,-.0511140711605549,.2775780856609345,0,3,16,6,2,2,-1,17,6,1,1,2,16,7,1,1,2,.0007920680218376219,-.0284809302538633,.1130611971020699,0,2,0,0,1,4,-1,0,2,1,2,2,.002719694981351495,.036205168813467,-.3822895884513855,0,3,16,6,2,2,-1,17,6,1,1,2,16,7,1,1,2,-.0070203691720962524,-.7084425091743469,9621540084481239e-20,0,3,7,6,2,2,-1,7,6,1,1,2,8,7,1,1,2,-.0007491076248697937,.1899659931659699,-.0707588419318199,0,2,8,9,9,6,-1,11,11,3,2,9,-.0300100892782211,.1409595012664795,-.0833628922700882,0,2,0,5,2,6,-1,0,7,2,2,3,.0211524497717619,.025880130007863,-.4697616100311279,1,2,14,4,4,7,-1,15,5,2,7,2,-.0319705903530121,-.512407124042511,.0121158296242356,0,3,2,13,20,2,-1,2,13,10,1,2,12,14,10,1,2,.01050771959126,.038660790771246,-.3098644018173218,0,3,23,7,2,2,-1,24,7,1,1,2,23,8,1,1,2,48152811359614134e-21,-.061655979603529,.0678063929080963,0,2,3,2,1,4,-1,3,3,1,2,2,.0009649511775933206,-.0613585598766804,.1991685926914215,0,2,11,2,14,4,-1,11,3,14,2,2,-.0404121391475201,.1341411024332047,-.0717744380235672,0,2,5,7,4,5,-1,6,7,2,5,2,.0058856019750237465,.0359793491661549,-.3332307040691376,1,2,23,8,1,4,-1,22,9,1,2,2,.0053272489458322525,.032898910343647,-.5153871178627014,0,2,2,0,10,8,-1,7,0,5,8,2,.0532727986574173,-.078457422554493,.158265694975853,0,2,1,5,24,3,-1,9,6,8,1,9,.0174429006874561,.1339583992958069,-.1186174973845482,0,2,10,0,4,10,-1,10,5,4,5,2,-.0433590598404408,-.2269790023565292,.0467031300067902,0,2,5,4,15,3,-1,5,5,15,1,3,-.0231206398457289,.1634031981229782,-.0685165524482727,0,2,11,6,3,6,-1,11,8,3,2,3,-.009379617869853973,.1582739949226379,-.0771108269691467,0,2,18,8,7,3,-1,18,9,7,1,3,-.014122249558568,-.5691561102867126,.0232016704976559,0,2,0,0,4,2,-1,0,1,4,1,2,-.0155957797542214,-.719995379447937,.0111829601228237,1,2,20,0,2,1,-1,20,0,1,1,2,.0007452989812009037,-.076692558825016,.0582969412207603,0,2,0,6,1,8,-1,0,8,1,4,2,-.00512205995619297,-.4147517085075378,.0252124201506376,0,3,23,7,2,2,-1,24,7,1,1,2,23,8,1,1,2,-572679091419559e-19,.0905847102403641,-.066890686750412,0,3,0,7,2,2,-1,0,7,1,1,2,1,8,1,1,2,.0008843176765367389,-.0570513382554054,.2420555055141449,1,2,24,8,1,4,-1,23,9,1,2,2,-.006399252917617559,-.4766991138458252,.0172231607139111,1,2,1,8,3,1,-1,2,9,1,1,3,.00342156202532351,.0330659411847591,-.3505514860153198,0,3,21,7,2,2,-1,22,7,1,1,2,21,8,1,1,2,.0006076180143281817,-.0633307918906212,.1801937073469162,0,2,5,8,15,6,-1,5,10,15,2,3,-.0271245595067739,.1347420066595078,-.0843034014105797,0,2,6,7,14,8,-1,6,9,14,4,2,.0320383384823799,-.0676692426204681,.179666593670845,0,2,1,4,10,2,-1,1,5,10,1,2,.007258396130055189,-.0986167713999748,.1166217997670174,0,2,12,5,3,3,-1,13,6,1,1,9,-.0037803640589118004,.1233021020889282,-.0477618910372257,0,2,0,4,7,3,-1,0,5,7,1,3,.0392416305840015,.0167705602943897,-.7329750061035156,0,3,21,7,2,2,-1,22,7,1,1,2,21,8,1,1,2,-53865249356022105e-21,.0850126668810844,-.0751027390360832,0,3,2,7,2,2,-1,2,7,1,1,2,3,8,1,1,2,.0008259296882897615,-.055150531232357,.2059426009654999,1,2,22,9,1,3,-1,21,10,1,1,3,-5640352901536971e-20,.0762555226683617,-.0699946209788322,0,3,11,13,2,2,-1,11,13,1,1,2,12,14,1,1,2,-.0005692833219654858,-.2483194023370743,.0468857996165752,0,3,19,3,6,12,-1,22,3,3,6,2,19,9,3,6,2,.0424826890230179,-.0344216786324978,.1484764963388443,0,3,0,3,6,12,-1,0,3,3,6,2,3,9,3,6,2,-.0339534096419811,.2843470871448517,-.0431083589792252,0,2,17,1,4,11,-1,18,1,2,11,2,.0188998207449913,.0142998602241278,-.4192070066928864,0,2,0,10,6,3,-1,0,11,6,1,3,.0019765710458159447,.0621932409703732,-.1786025017499924,0,2,23,11,2,1,-1,23,11,1,1,2,-5089443948236294e-20,.0948854833841324,-.0689786225557327,0,2,4,1,4,11,-1,5,1,2,11,2,.0114915501326323,.0331886112689972,-.3628959059715271,0,3,21,3,4,12,-1,23,3,2,6,2,21,9,2,6,2,-.0215106792747974,.2759737968444824,-.03174914047122,0,3,0,3,4,12,-1,0,3,2,6,2,2,9,2,6,2,.0130551997572184,-.0830815583467484,.1449849009513855,0,2,11,11,6,4,-1,11,12,6,2,2,.006674758158624172,-.0461902506649494,.1383360028266907,0,2,6,11,13,4,-1,6,12,13,2,2,-.007061630021780729,.1968749016523361,-.0837985798716545,0,2,11,10,3,1,-1,12,10,1,1,3,.0006148166139610112,.0542011298239231,-.1981233954429627,0,2,5,2,13,8,-1,5,6,13,4,2,.2860183119773865,.0232954602688551,-.4173370003700256,0,2,15,2,10,6,-1,15,4,10,2,3,.0463717207312584,-.0290123391896486,.1808013021945953,0,2,0,2,10,6,-1,0,4,10,2,3,-.0557247512042522,.1358146965503693,-.106122300028801,0,2,12,1,13,8,-1,12,3,13,4,2,-.2584396898746491,-.4910731911659241,.0151501996442676,-1.3937480449676514,113,0,2,5,3,15,3,-1,5,4,15,1,3,-.0417404398322105,.4202992916107178,-.138658806681633,0,2,9,3,9,3,-1,9,4,9,1,3,.02743861079216,-.0691855624318123,.6378138065338135,1,2,3,2,7,3,-1,2,3,7,1,3,-.0319233611226082,.5562999844551086,-.0588022507727146,0,2,5,2,15,3,-1,5,3,15,1,3,-.0426339097321033,.3957036137580872,-.0923223569989204,0,2,5,4,15,3,-1,5,5,15,1,3,-.0453329794108868,.4831672012805939,-.0990284606814384,0,3,17,6,2,2,-1,18,6,1,1,2,17,7,1,1,2,.0014149550115689635,-.038321029394865,.3782787919044495,1,2,5,10,2,3,-1,5,10,1,3,2,.003184457076713443,.0845874175429344,-.3629348874092102,0,2,23,11,2,4,-1,23,13,2,2,2,.007986554875969887,.0660245269536972,-.4990949034690857,0,3,0,11,14,4,-1,0,11,7,2,2,7,13,7,2,2,.008363707922399044,-.1568834036588669,.1732781976461411,0,2,10,4,6,3,-1,10,5,6,1,3,.0166161693632603,-.1092156991362572,.3208172023296356,0,3,0,1,24,14,-1,0,1,12,7,2,12,8,12,7,2,-.108372300863266,-.3144314885139465,.0960887372493744,0,3,1,5,24,8,-1,13,5,12,4,2,1,9,12,4,2,-.0552641600370407,-.3238588869571686,.0760045275092125,0,3,0,0,24,12,-1,0,0,12,6,2,12,6,12,6,2,.1263256967067719,.0652572736144066,-.4011892974376679,0,2,10,0,15,14,-1,10,7,15,7,2,.388045608997345,.0290472805500031,-.2850419878959656,1,2,1,11,2,1,-1,1,11,1,1,2,.0021647498942911625,.0566388815641403,-.4483107030391693,0,2,1,11,24,4,-1,1,11,12,4,2,-.0850358307361603,.2374248951673508,-.1127642020583153,0,2,7,7,10,3,-1,7,8,10,1,3,.0297137200832367,-.0403699316084385,.4747174084186554,0,2,9,5,7,3,-1,9,6,7,1,3,.0189488306641579,-.0794471576809883,.2721098959445953,0,2,0,9,2,6,-1,0,11,2,2,3,-.005443382076919079,-.4018659889698029,.0573576912283897,1,2,22,8,3,2,-1,22,8,3,1,2,-.0074416291899979115,-.4642170965671539,.0343283303081989,0,2,12,6,1,3,-1,12,7,1,1,3,.003174582961946726,-.0719946026802063,.2899833023548126,0,2,24,6,1,6,-1,24,8,1,2,3,-.004643504042178392,-.4219543039798737,.0394870713353157,1,2,3,3,7,2,-1,3,3,7,1,2,-.0225970800966024,.2745698094367981,-.0772427767515183,0,3,10,4,6,10,-1,13,4,3,5,2,10,9,3,5,2,.0175681803375483,.060469850897789,-.2755838930606842,0,2,0,3,14,6,-1,0,6,14,3,2,.2285360991954804,.0372774116694927,-.5375431180000305,0,3,9,0,8,8,-1,13,0,4,4,2,9,4,4,4,2,.0323306396603584,.0458961501717567,-.3844825029373169,1,2,3,4,5,3,-1,2,5,5,1,3,-.0285396501421928,.5891790986061096,-.0340728089213371,0,2,18,9,7,6,-1,18,11,7,2,3,.0286119598895311,.024174140766263,-.2325512021780014,0,2,0,9,7,6,-1,0,11,7,2,3,.0190214607864618,.0562911406159401,-.3404670059680939,0,2,12,1,3,3,-1,12,2,3,1,3,-.005794208031147718,.2392093986272812,-.0638626366853714,0,3,9,2,6,8,-1,9,2,3,4,2,12,6,3,4,2,.0198575407266617,.0513716302812099,-.3405377864837647,0,2,1,14,24,1,-1,7,14,12,1,2,-.0227794591337442,.2922581136226654,-.0604945607483387,0,3,0,3,12,12,-1,0,3,6,6,2,6,9,6,6,2,.1480142027139664,-.0343834199011326,.466711699962616,0,2,11,3,9,4,-1,14,3,3,4,3,-.0337039716541767,-.3770483136177063,.0263036508113146,0,3,9,4,6,6,-1,9,4,3,3,2,12,7,3,3,2,-.0162283908575773,-.338245689868927,.0570861399173737,1,2,20,0,4,1,-1,20,0,2,1,2,-.00429419195279479,-.329514890909195,.0434178002178669,0,2,8,3,9,4,-1,11,3,3,4,3,-.0235741101205349,-.3945200145244598,.0398236103355885,0,2,14,4,6,9,-1,16,4,2,9,3,.0218487493693829,.0268086697906256,-.2596569955348969,0,2,5,4,6,9,-1,7,4,2,9,3,-.0209309905767441,-.3641955852508545,.043782789260149,0,3,16,5,2,2,-1,17,5,1,1,2,16,6,1,1,2,.0016019339673221111,-.0240206904709339,.218288004398346,0,2,0,0,15,12,-1,0,4,15,4,3,-.548965573310852,-.5673372149467468,.0286840796470642,0,2,8,1,11,3,-1,8,2,11,1,3,.0151870902627707,-.081696130335331,.2107073962688446,0,2,0,6,1,6,-1,0,8,1,2,3,-.003065345110371709,-.3701387047767639,.0471426397562027,0,2,14,5,1,3,-1,14,6,1,1,3,-.0022847671061754227,.1813296973705292,-.0419041812419891,0,3,7,2,2,2,-1,7,2,1,1,2,8,3,1,1,2,.0013886080123484135,-.0477169714868069,.3120515942573547,1,2,22,9,1,4,-1,21,10,1,2,2,-.0042354268953204155,-.3120726943016052,.0365724302828312,0,2,10,5,5,3,-1,10,6,5,1,3,.004923470783978701,-.1105178967118263,.1364745944738388,0,2,14,5,1,3,-1,14,6,1,1,3,-.000978243537247181,.101911298930645,-.0396985597908497,0,2,0,0,2,2,-1,0,1,2,1,2,.0023952899500727654,.0345855616033077,-.4620797038078308,1,2,22,9,1,4,-1,21,10,1,2,2,-27391599360271357e-21,.0470036789774895,-.0576489008963108,1,2,3,9,4,1,-1,4,10,2,1,2,-.003789501031860709,-.3904446959495544,.03927081823349,0,2,8,8,9,3,-1,8,9,9,1,3,.025150740519166,-.0313480608165264,.4742729067802429,0,2,2,8,21,3,-1,9,9,7,1,9,-.0545641481876373,.1494560986757278,-.0982013270258904,0,2,10,6,8,8,-1,12,6,4,8,2,-.0416621901094913,-.4245094060897827,.0152987902984023,0,2,7,3,6,12,-1,9,3,2,12,3,-.0207394007593393,-.3218981921672821,.0479229800403118,0,2,11,0,3,1,-1,12,0,1,1,3,-.0009790281765162945,.2330693006515503,-.0597994215786457,0,2,10,10,4,4,-1,11,10,2,4,2,-.004154779948294163,-.3040251135826111,.0456931404769421,0,3,16,5,2,2,-1,17,5,1,1,2,16,6,1,1,2,-26045470804092474e-21,.055388018488884,-.0540977194905281,0,3,7,5,2,2,-1,7,5,1,1,2,8,6,1,1,2,.0010567409917712212,-.052676759660244,.2473292946815491,0,3,1,0,24,8,-1,13,0,12,4,2,1,4,12,4,2,.1842923015356064,.0165581107139587,-.5789644718170166,0,2,6,6,3,1,-1,7,6,1,1,3,.0014177090488374233,-.0524071305990219,.2524789869785309,0,2,21,12,4,3,-1,21,13,4,1,3,-.004088235087692738,-.3066633939743042,.0269502196460962,0,3,0,3,4,4,-1,0,3,2,2,2,2,5,2,2,2,.008542191237211227,-.0481166206300259,.2716326117515564,1,2,19,0,2,3,-1,19,0,1,3,2,.0195690393447876,.0251199807971716,-.3371602892875671,0,2,2,2,15,6,-1,2,5,15,3,2,.267735093832016,.0231193397194147,-.5075724124908447,0,2,5,0,15,2,-1,5,1,15,1,2,-.0326806083321571,.2773688137531281,-.048139289021492,0,2,0,0,2,4,-1,0,1,2,2,2,-.005057450849562883,-.3639586865901947,.0363070890307426,1,2,23,1,2,12,-1,20,4,2,6,2,.0791702270507813,-.0295530706644058,.1632819026708603,0,2,4,2,2,3,-1,4,3,2,1,3,.0022955629974603653,-.0644191280007362,.192163497209549,1,2,20,0,2,2,-1,20,0,1,2,2,.00021744619880337268,-.1248127967119217,.0513428300619125,0,2,0,12,4,3,-1,0,13,4,1,3,-.0059793200343847275,-.5400406122207642,.0236572697758675,0,2,13,1,12,8,-1,13,3,12,4,2,-.2183004021644592,-.3002713024616242,.0188296400010586,1,2,5,0,2,2,-1,5,0,2,1,2,-.002578265964984894,-.2936800122261047,.0437353104352951,0,2,11,2,14,12,-1,11,8,14,6,2,-.1344317942857742,-.2982031106948853,.021951649338007,0,2,0,2,14,12,-1,0,8,14,6,2,.3329834043979645,.0417996607720852,-.3464672863483429,0,2,16,7,6,8,-1,18,7,2,8,3,-.0276046600192785,-.3169625997543335,.0150398099794984,1,2,7,0,13,2,-1,7,0,13,1,2,.0284599401056767,.031132759526372,-.4115855097770691,0,2,16,7,6,8,-1,18,7,2,8,3,.0568751804530621,.0031998890917748213,-.849632978439331,0,2,3,7,6,8,-1,5,7,2,8,3,-.0264140591025352,-.4030340015888214,.028532799333334,0,3,17,7,2,2,-1,18,7,1,1,2,17,8,1,1,2,.0008267092052847147,-.047888670116663,.2083473950624466,1,2,12,5,3,6,-1,13,6,1,6,3,-.0174812003970146,-.4784274101257324,.0261973403394222,0,2,20,2,1,6,-1,20,4,1,2,3,.0102093704044819,-.0323491990566254,.3333239853382111,0,3,7,2,2,2,-1,7,2,1,1,2,8,3,1,1,2,-.0009044284233823419,.2252988964319229,-.0502184815704823,0,2,19,10,2,1,-1,19,10,1,1,2,-5515550947166048e-20,.0854163095355034,-.0922556668519974,0,2,6,4,8,2,-1,8,4,4,2,2,-.0075864349491894245,-.2745333909988403,.0428331792354584,0,2,9,5,16,7,-1,13,5,8,7,2,.0689363330602646,-.0362212397158146,.220213994383812,0,3,6,7,2,2,-1,6,7,1,1,2,7,8,1,1,2,.0010017789900302887,-.0464680194854736,.2603206038475037,0,3,17,7,2,2,-1,18,7,1,1,2,17,8,1,1,2,-.0015333900228142738,.283126711845398,-.0321949794888496,0,3,11,13,2,2,-1,11,13,1,1,2,12,14,1,1,2,.0005027548177167773,.054722610861063,-.2383649945259094,0,3,17,7,2,2,-1,18,7,1,1,2,17,8,1,1,2,6782740820199251e-20,-.0391390211880207,.0501381084322929,0,3,6,7,2,2,-1,6,7,1,1,2,7,8,1,1,2,-.0009686368284747005,.2108709067106247,-.0608406700193882,0,2,20,8,5,3,-1,20,9,5,1,3,.0157267302274704,.0115508204326034,-.8977199196815491,0,3,11,13,2,2,-1,11,13,1,1,2,12,14,1,1,2,-.0006198352784849703,-.2865422964096069,.0380632318556309,0,2,5,11,15,4,-1,5,12,15,2,2,-.0148898903280497,.218888595700264,-.0534253492951393,0,2,0,8,6,3,-1,0,9,6,1,3,.0091423774138093,.0289719104766846,-.4331383109092712,0,2,19,10,2,1,-1,19,10,1,1,2,4456711030798033e-20,-.0493506006896496,.0829902365803719,0,2,4,10,2,1,-1,5,10,1,1,2,-4629544127965346e-20,.1145173981785774,-.1154157966375351,0,3,1,0,24,6,-1,13,0,12,3,2,1,3,12,3,2,-.09515430778265,-.3621807992458344,.0389639586210251,1,2,5,1,2,5,-1,5,1,1,5,2,.0114479204639792,-.0633771494030952,.1799890995025635,0,3,21,3,4,12,-1,23,3,2,6,2,21,9,2,6,2,.0168469492346048,-.079555906355381,.2080432027578354,0,3,0,3,4,12,-1,0,3,2,6,2,2,9,2,6,2,-.0195328295230865,.3306660056114197,-.0368879809975624,0,2,24,2,1,6,-1,24,5,1,3,2,-.009995151311159134,-.2601873874664307,.020032050088048,0,2,5,2,9,8,-1,8,2,3,8,3,.0559661500155926,.0298731103539467,-.3797968029975891,0,2,24,2,1,6,-1,24,5,1,3,2,.0223989300429821,.009444269351661205,-.3070712089538574,0,2,0,2,1,6,-1,0,5,1,3,2,-.011130659841001,-.4547461867332459,.0237820893526077,0,2,9,6,9,4,-1,9,7,9,2,2,.0103914495557547,-.0801509991288185,.1017400026321411,0,2,11,6,3,4,-1,11,7,3,2,2,-.009707638993859291,.322004497051239,-.0475250408053398,0,2,20,14,2,1,-1,20,14,1,1,2,1917052941280417e-20,-.061904601752758,.0758714973926544,0,2,0,8,6,4,-1,0,9,6,2,2,-.005766047164797783,-.2893261909484863,.0357113592326641,0,3,16,0,2,2,-1,17,0,1,1,2,16,1,1,1,2,-.000801895628683269,.1487676948308945,-.0337995104491711,0,2,8,0,9,15,-1,11,5,3,5,9,-.4516898989677429,-.5800644755363464,.0182942803949118,0,2,13,9,4,6,-1,14,9,2,6,2,.007116700056940317,.0221952199935913,-.4342006146907806,0,2,8,2,9,3,-1,8,3,9,1,3,.0214324798434973,-.0425198413431644,.271175891160965,-1.3605639934539795,172,0,3,0,9,8,6,-1,0,9,4,3,2,4,12,4,3,2,.008846518583595753,-.2059727013111115,.2158975005149841,0,2,20,1,5,4,-1,20,3,5,2,2,-.0114869000390172,.1450283974409103,-.2512278854846954,0,2,4,3,16,7,-1,8,3,8,7,2,.06137790158391,-.1210888996720314,.2893109023571014,0,2,15,0,10,8,-1,15,2,10,4,2,-.05146674066782,.0770430117845535,-.1447598934173584,0,3,0,2,24,10,-1,0,2,12,5,2,12,7,12,5,2,.0990432873368263,.0879464074969292,-.3668490052223206,0,2,20,9,5,4,-1,20,10,5,2,2,.00602407893165946,.0559716187417507,-.423053503036499,0,2,0,14,22,1,-1,11,14,11,1,2,.009322894737124443,-.1488721966743469,.1423504054546356,1,2,22,0,3,12,-1,22,0,3,6,2,-.0837828367948532,-.0506230294704437,.0671857669949532,0,2,0,4,2,2,-1,1,4,1,2,2,-.001436957041732967,.1669974029064179,-.118479497730732,0,2,20,9,5,4,-1,20,10,5,2,2,-.008492374792695045,-.5746508240699768,.0469529181718826,0,2,0,9,5,4,-1,0,10,5,2,2,.006158161908388138,.0387838594615459,-.4179377853870392,0,2,7,3,18,6,-1,13,5,6,2,9,.3882668018341065,-.0341588892042637,.3883490860462189,0,2,4,10,10,1,-1,9,10,5,1,2,-.0062880381010472775,.1877942979335785,-.1096756979823113,1,2,21,1,4,10,-1,21,1,2,10,2,-.0886473506689072,.2961074113845825,-.0496502704918385,1,2,4,1,10,4,-1,4,1,10,2,2,.0573849491775036,-.0621429793536663,.4039953947067261,0,2,16,8,4,7,-1,17,8,2,7,2,.006304989103227854,.03024085983634,-.2553277909755707,0,2,5,8,4,7,-1,6,8,2,7,2,-.0128176100552082,-.749150276184082,.0188356805592775,0,2,6,0,13,2,-1,6,1,13,1,2,.006515969056636095,-.0749715119600296,.1975888013839722,0,2,0,12,8,3,-1,0,13,8,1,3,.00829929206520319,.0329895503818989,-.434665709733963,1,2,22,0,2,1,-1,22,0,1,1,2,.006391171831637621,.0297571904957294,-.3072845935821533,1,2,3,0,1,2,-1,3,0,1,1,2,6894963735248893e-20,-.1729405969381332,.09270279109478,0,3,17,3,8,8,-1,21,3,4,4,2,17,7,4,4,2,.0413548089563847,-.0279047600924969,.1629645973443985,0,2,6,2,13,6,-1,6,4,13,2,3,.1899937987327576,-.031295470893383,.4835174977779388,0,2,10,0,15,14,-1,10,7,15,7,2,-.1273290067911148,-.4309565126895905,.0414485186338425,1,2,1,1,12,1,-1,1,1,6,1,2,-.0356059707701206,-.2009662985801697,.0775555819272995,0,2,18,3,4,2,-1,18,4,4,1,2,-.007276066113263369,.1169442981481552,-.0564889013767242,0,2,7,11,6,4,-1,9,11,2,4,3,-.0167282801121473,-.5582438707351685,.024678710848093,0,2,20,4,5,6,-1,20,6,5,2,3,.003516335040330887,-.1312393993139267,.0638676136732101,0,2,1,12,5,3,-1,1,13,5,1,3,-.003770946990698576,-.33209028840065,.0413776598870754,0,3,1,0,24,2,-1,13,0,12,1,2,1,1,12,1,2,-.0138869602233171,-.3127424120903015,.0425702482461929,1,2,3,3,5,3,-1,2,4,5,1,3,.00935373269021511,-.0667856708168983,.1907455027103424,0,2,17,6,8,4,-1,19,6,4,4,2,-.0194346699863672,.315269410610199,-.047358151525259,1,2,5,0,1,3,-1,4,1,1,1,3,.006251101847738028,.0309588797390461,-.3830946981906891,0,2,23,0,2,4,-1,23,2,2,2,2,-.025296900421381,-.2962245941162109,.0151915997266769,0,2,0,0,3,6,-1,0,3,3,3,2,-.003075412940233946,.0729133188724518,-.1764045059680939,0,3,11,1,14,2,-1,18,1,7,1,2,11,2,7,1,2,.007800100836902857,-.0501575507223606,.1162889003753662,0,3,0,1,14,2,-1,0,1,7,1,2,7,2,7,1,2,-.007768054027110338,.2415755987167358,-.0778944417834282,0,2,5,4,15,6,-1,5,6,15,2,3,-.0880923122167587,.2515082955360413,-.0482993088662624,0,2,10,7,2,2,-1,10,8,2,1,2,-.0017023129621520638,.1797576993703842,-.0970716699957848,1,2,13,2,8,5,-1,15,4,4,5,2,-.099703423678875,-.4700092971324921,.0155829498544335,1,2,2,9,2,2,-1,2,9,1,2,2,.004665717016905546,.029513580724597,-.4018146991729736,0,2,12,8,6,3,-1,14,8,2,3,3,-.0176613796502352,-.5449513792991638,.0168585199862719,0,2,0,9,24,6,-1,8,11,8,2,9,-.2230933010578156,.1843273043632507,-.0632233396172524,0,2,1,12,24,3,-1,9,13,8,1,9,.052850779145956,-.0734771713614464,.1994421929121018,0,2,5,11,15,4,-1,5,13,15,2,2,-.0246656592935324,.2699545025825501,-.0523515492677689,1,2,24,10,1,4,-1,23,11,1,2,2,-.0049799769185483456,-.4495851993560791,.026983380317688,1,2,1,10,4,1,-1,2,11,2,1,2,.003053586930036545,.0375075116753578,-.3464896082878113,0,2,15,1,10,14,-1,15,8,10,7,2,-.0263100396841764,-.1766241043806076,.0256136003881693,0,2,0,7,4,2,-1,2,7,2,2,2,-.004868402145802975,.187709704041481,-.0605575516819954,0,2,20,4,5,6,-1,20,6,5,2,3,.0458405800163746,.0330421291291714,-.2026686072349548,0,2,0,4,7,6,-1,0,6,7,2,3,.006748796906322241,-.1384654939174652,.1144922971725464,0,2,11,7,6,3,-1,11,8,6,1,3,.010793830268085,-.0550474487245083,.1810662001371384,0,2,8,10,9,1,-1,11,10,3,1,3,-.0132016502320766,-.4654887914657593,.0258085392415524,0,2,5,10,15,1,-1,10,10,5,1,3,-.0049963342025876045,.1138966009020805,-.1140139997005463,0,2,7,8,6,3,-1,9,8,2,3,3,-.0158193595707417,-.4853562116622925,.0220876205712557,0,2,23,12,2,1,-1,23,12,1,1,2,682646204950288e-19,-.0819193720817566,.0840993970632553,0,3,0,13,24,2,-1,0,13,12,1,2,12,14,12,1,2,-.0156373791396618,-.4515635073184967,.0227358005940914,0,2,9,9,7,3,-1,9,10,7,1,3,.008300557732582092,-.0514142103493214,.2212347984313965,0,2,0,6,2,4,-1,0,7,2,2,2,.006699975114315748,.0297896005213261,-.35434889793396,0,2,18,2,5,4,-1,18,3,5,2,2,.005174416117370129,-.0496886894106865,.220291405916214,0,3,1,4,8,2,-1,1,4,4,1,2,5,5,4,1,2,.006127804052084684,-.0630758926272392,.1783366054296494,0,2,21,8,4,4,-1,21,9,4,2,2,.0068791587837040424,.0284415297210217,-.2993854880332947,0,2,4,4,8,4,-1,4,5,8,2,2,-.0217361003160477,.1791318953037262,-.0602877512574196,0,2,11,4,14,4,-1,11,5,14,2,2,.0140090202912688,-.1060196980834007,.1548174023628235,0,2,3,0,18,9,-1,12,0,9,9,2,.2186813950538635,-.0483517609536648,.257346898317337,0,2,3,0,20,15,-1,3,0,10,15,2,.2838009893894196,-.0509055890142918,.293605387210846,1,2,12,1,6,8,-1,14,3,2,8,3,.1209316030144692,.017309570685029,-.6926872134208679,1,2,17,4,1,9,-1,14,7,1,3,3,.0569618307054043,-.0186788197606802,.3227567970752716,0,2,6,7,4,8,-1,7,7,2,8,2,-.00905009638518095,-.4240661859512329,.0268415194004774,0,2,21,5,4,3,-1,21,6,4,1,3,.0231182798743248,.0105462800711393,-.5228689908981323,0,3,7,0,2,2,-1,7,0,1,1,2,8,1,1,1,2,.0011480690445750952,-.0459857396781445,.2319914996623993,0,2,21,8,4,3,-1,21,9,4,1,3,-.009890930727124214,-.5407552123069763,.0142617002129555,0,3,7,1,2,2,-1,7,1,1,1,2,8,2,1,1,2,.0007059997878968716,-.0649549588561058,.1677557975053787,0,3,16,1,2,2,-1,17,1,1,1,2,16,2,1,1,2,-8231129322666675e-20,.0727679133415222,-.0542482398450375,0,2,0,8,4,3,-1,0,9,4,1,3,.005338047165423632,.0320924408733845,-.3186857998371124,0,3,20,9,2,2,-1,21,9,1,1,2,20,10,1,1,2,598358892602846e-19,-.0492977797985077,.0571143105626106,0,3,3,9,2,2,-1,3,9,1,1,2,4,10,1,1,2,4074164098710753e-20,-.0992263928055763,.1105673015117645,0,3,19,3,6,12,-1,22,3,3,6,2,19,9,3,6,2,-.0271146595478058,.2459900975227356,-.0621489509940147,0,3,7,1,2,2,-1,7,1,1,1,2,8,2,1,1,2,-.000884772278368473,.202344998717308,-.0529261194169521,0,2,7,4,12,3,-1,7,5,12,1,3,-.0192636791616678,.1516259014606476,-.0715369805693626,0,2,0,0,11,2,-1,0,1,11,1,2,.009689152240753174,.035710871219635,-.3255082964897156,0,2,13,2,6,5,-1,15,2,2,5,3,-.0228419005870819,-.3499914109706879,.0171892996877432,0,3,0,0,24,10,-1,0,0,12,5,2,12,5,12,5,2,-.1477797031402588,-.4319078028202057,.0216299500316381,0,2,20,4,2,3,-1,20,5,2,1,3,.0023399880155920982,-.0442668199539185,.0963377729058266,0,2,0,3,7,4,-1,0,4,7,2,2,-.0728321895003319,-.818618893623352,.0117990002036095,0,2,11,1,14,14,-1,11,8,14,7,2,-.3072721064090729,-.7007309198379517,.003556411014869809,0,2,6,2,6,5,-1,8,2,2,5,3,-.0207666493952274,-.3913905024528503,.0246222894638777,0,3,16,0,2,2,-1,17,0,1,1,2,16,1,1,1,2,-.0036341920495033264,-.4501088857650757,.0055562350898981094,0,3,7,0,2,2,-1,7,0,1,1,2,8,1,1,1,2,-7079407077981159e-20,.1087834984064102,-.0905004590749741,0,3,16,0,2,2,-1,17,0,1,1,2,16,1,1,1,2,-8831486047711223e-20,.0641764104366302,-.0494646318256855,0,2,2,0,20,1,-1,7,0,10,1,2,-.0110706500709057,.1473083049058914,-.0670493170619011,0,2,11,0,14,1,-1,11,0,7,1,2,.006362635176628828,-.0400333292782307,.0926633775234222,0,2,9,3,6,2,-1,9,4,6,1,2,-.007749951910227537,.1392461061477661,-.0774780735373497,0,2,11,3,3,4,-1,11,4,3,2,2,.004753272980451584,-.0729171708226204,.1706562042236328,0,2,0,11,18,3,-1,6,12,6,1,9,-.0168079808354378,.130800798535347,-.0801806673407555,0,3,15,3,10,12,-1,20,3,5,6,2,15,9,5,6,2,.1279494017362595,-.0199226494878531,.3711799085140228,0,2,0,3,14,3,-1,0,4,14,1,3,-.018189599737525,.1235873028635979,-.0830406174063683,0,2,9,4,8,3,-1,11,4,4,3,2,-.0161725897341967,-.449065089225769,.0227566491812468,0,2,0,12,2,1,-1,1,12,1,1,2,6804615259170532e-20,-.1011824011802673,.0935735777020454,0,3,23,13,2,2,-1,24,13,1,1,2,23,14,1,1,2,.00011714019638020545,-.0810816064476967,.1062628999352455,0,3,0,13,2,2,-1,0,13,1,1,2,1,14,1,1,2,5452167897601612e-20,-.0932891815900803,.1159989982843399,0,2,9,12,8,1,-1,11,12,4,1,2,-.009509580209851265,-.505190372467041,.0141592798754573,0,2,0,7,6,4,-1,0,8,6,2,2,-.0028461390174925327,-.1991575956344605,.0473652109503746,0,3,19,3,6,12,-1,22,3,3,6,2,19,9,3,6,2,.0232862401753664,-.0403292290866375,.0805157274007797,0,3,0,3,6,12,-1,0,3,3,6,2,3,9,3,6,2,-.0426056496798992,.3344807922840118,-.0383727103471756,0,2,23,7,2,4,-1,23,8,2,2,2,.004510118160396814,.0263549294322729,-.2349215000867844,0,2,0,7,2,4,-1,0,8,2,2,2,.006181781180202961,.0211725104600191,-.4420514106750488,0,3,13,7,8,4,-1,17,7,4,2,2,13,9,4,2,2,-.0106069697067142,.0654574930667877,-.0324725992977619,0,2,0,1,10,14,-1,0,8,10,7,2,-.085813581943512,-.3406231105327606,.0301514994353056,0,2,9,8,7,3,-1,9,9,7,1,3,.006275806110352278,-.0619911886751652,.1503033936023712,0,2,9,8,3,4,-1,9,9,3,2,2,-.0030965260230004787,.1481299996376038,-.0813362672924995,1,2,18,10,2,3,-1,17,11,2,1,3,-.0111239803954959,-.4638158082962036,.0152134699746966,1,2,7,10,3,2,-1,8,11,1,2,3,-.011103980243206,-.6005380153656006,.0135854296386242,1,2,23,0,2,1,-1,23,0,1,1,2,-.003294483060017228,-.4641366004943848,.026226969435811,1,2,12,8,4,3,-1,12,8,2,3,2,.0113766100257635,-.0565435998141766,.1575082987546921,0,2,5,7,15,3,-1,10,8,5,1,9,-.0294652003794909,.1486423015594482,-.0651882514357567,0,2,0,0,20,8,-1,10,0,10,8,2,.0491673015058041,-.0922251716256142,.1015425994992256,1,2,21,0,4,3,-1,20,1,4,1,3,-.0209590997546911,.1749638020992279,-.0255501996725798,1,2,4,0,3,4,-1,5,1,1,4,3,.0054627470672130585,-.0626592189073563,.1695216000080109,0,2,18,3,5,2,-1,18,4,5,1,2,-.0043515427969396114,.0822615697979927,-.0598390214145184,0,2,2,3,5,2,-1,2,4,5,1,2,.007477249950170517,-.049545519053936,.2469687014818192,1,2,13,0,2,5,-1,13,0,1,5,2,-.0374278612434864,-.9178332090377808,.0035620180424302816,0,2,5,12,6,3,-1,7,13,2,1,9,-.0248439908027649,-.4893918037414551,.0171825792640448,1,2,13,0,2,5,-1,13,0,1,5,2,.008012044243514538,.02174236997962,-.0648176670074463,0,2,9,6,4,2,-1,9,7,4,1,2,.005730602890253067,-.0707883909344673,.1390995979309082,0,2,18,9,4,3,-1,18,10,4,1,3,.0109893204644322,.007036118768155575,-.3556833863258362,0,2,3,9,4,3,-1,3,10,4,1,3,-.0035342550836503506,-.2303902953863144,.0395394414663315,0,2,7,9,15,6,-1,7,12,15,3,2,.0326121784746647,-.0834509506821632,.0961622893810272,0,3,4,1,12,6,-1,4,1,6,3,2,10,4,6,3,2,-.0519190989434719,-.3597438931465149,.023558309301734,0,2,10,5,14,10,-1,10,10,14,5,2,.2802706062793732,.0191025994718075,-.2738722860813141,0,2,10,6,2,3,-1,10,7,2,1,3,-.0018680640496313572,.1557087004184723,-.0592420399188995,1,2,13,4,4,6,-1,14,5,2,6,2,.0412711799144745,.00921028945595026,-.6225361824035645,1,2,12,4,6,4,-1,11,5,6,2,2,-.0341574586927891,-.6910676956176758,.0140588199719787,0,2,19,0,5,3,-1,19,1,5,1,3,.0281112492084503,.006389203947037458,-.6016489267349243,0,2,6,7,3,1,-1,7,7,1,1,3,-.0009767578449100256,.1663821935653687,-.053310938179493,0,2,19,0,5,3,-1,19,1,5,1,3,-.0284041091799736,-.8431190848350525,.004920249804854393,0,2,6,7,3,1,-1,7,7,1,1,3,.000976581359282136,-.0524366609752178,.1696853935718536,0,2,11,0,6,15,-1,13,0,2,15,3,-.079386442899704,-.7418122291564941,.004584290087223053,0,3,0,2,2,6,-1,0,2,1,3,2,1,5,1,3,2,.0029205000028014183,-.0499707907438278,.1705241948366165,1,2,21,0,2,1,-1,21,0,1,1,2,-.00497920997440815,-.4247047007083893,.0113332699984312,1,2,4,0,1,2,-1,4,0,1,1,2,.007530936039984226,.0200634505599737,-.4817556142807007,0,2,9,0,14,8,-1,9,0,7,8,2,-.1206317022442818,.1783839017152786,-.0404023304581642,0,3,7,0,2,2,-1,7,0,1,1,2,8,1,1,1,2,6450695218518376e-20,-.08585424721241,.1069532036781311,0,2,4,6,18,4,-1,4,6,9,4,2,.1407386958599091,-.0227742493152618,.4258378148078919,0,3,0,7,2,2,-1,0,7,1,1,2,1,8,1,1,2,.0005870871245861053,-.0585701502859592,.1556326001882553,0,3,23,7,2,2,-1,24,7,1,1,2,23,8,1,1,2,42137140553677455e-21,-.057670820504427,.0648988783359528,0,3,0,7,2,2,-1,0,7,1,1,2,1,8,1,1,2,-5485915971803479e-20,.1383187025785446,-.0935516208410263,0,3,23,7,2,2,-1,24,7,1,1,2,23,8,1,1,2,-8131826325552538e-20,.0786737129092216,-.0584529899060726,0,3,0,7,2,2,-1,0,7,1,1,2,1,8,1,1,2,.00010710170317906886,-.1036069020628929,.1105291023850441,0,2,24,6,1,4,-1,24,7,1,2,2,.005948519799858332,.0124739902094007,-.6046726703643799,0,2,0,6,1,4,-1,0,7,1,2,2,-.003834115108475089,-.5651066899299622,.0139579800888896,0,2,11,0,6,15,-1,13,0,2,15,3,.048183299601078,.006878762040287256,-.2265198975801468,0,2,0,1,2,3,-1,0,2,2,1,3,.009846852160990238,.0149204200133681,-.5408421754837036,0,2,8,1,9,3,-1,8,2,9,1,3,.007079598028212786,-.0740584135055542,.1212510019540787,0,2,8,1,3,3,-1,9,2,1,1,9,-.001718766987323761,.1150275021791458,-.0767944231629372,1,2,19,7,5,3,-1,18,8,5,1,3,.0141321197152138,.0222348105162382,-.3713991045951843,1,2,6,7,3,5,-1,7,8,1,5,3,-.008070403710007668,-.2536310851573944,.0307344105094671,0,3,1,0,24,14,-1,13,0,12,7,2,1,7,12,7,2,.2283755987882614,.0168569702655077,-.5456647872924805,0,2,8,11,9,4,-1,8,12,9,2,2,-.0106975501403213,.1705504059791565,-.048232439905405,0,2,6,11,14,4,-1,6,12,14,2,2,.006105799227952957,-.0747807994484901,.1244964972138405,0,2,0,11,3,4,-1,0,12,3,2,2,.003582532051950693,.0343106091022491,-.2529211938381195,0,2,17,11,8,2,-1,17,12,8,1,2,.008796939626336098,.0227318406105042,-.2092120051383972,0,2,0,11,8,2,-1,0,12,8,1,2,-.0117600196972489,-.578932523727417,.0150208799168468,0,2,23,13,1,2,-1,23,14,1,1,2,.0014420140068978071,.0108067002147436,-.174350306391716,0,2,1,13,1,2,-1,1,14,1,1,2,-4906246977043338e-20,.0891510024666786,-.0946391522884369,0,2,9,0,14,8,-1,9,0,7,8,2,.0330546088516712,-.0502973310649395,.072425939142704,0,2,0,1,14,8,-1,0,3,14,4,2,-.0449321903288364,.0714013203978539,-.1246540024876595,0,2,20,4,2,3,-1,20,5,2,1,3,-.0123274503275752,.2216438055038452,-.0160399992018938,0,2,0,1,14,9,-1,0,4,14,3,3,-.3724926114082336,-.3693152964115143,.0260022208094597,0,2,9,13,9,1,-1,12,13,3,1,3,.0152763100340962,.0053399899043142796,-.5456783771514893,0,2,7,13,9,1,-1,10,13,3,1,3,-.0145687395706773,-.5883231163024902,.0139877004548907,0,3,20,7,2,2,-1,21,7,1,1,2,20,8,1,1,2,.000998902483843267,-.0358810797333717,.174325704574585,-1.2964390516281128,201,0,2,5,9,15,6,-1,5,12,15,3,2,.0572950802743435,-.1768665015697479,.2448291033506393,0,2,21,0,2,6,-1,21,3,2,3,2,-.010082540102303,.1378919035196304,-.2031147032976151,0,3,4,4,8,10,-1,4,4,4,5,2,8,9,4,5,2,-.0185250397771597,.1623972952365875,-.1676190942525864,0,2,16,1,8,6,-1,16,3,8,2,3,-.0527544915676117,.134710505604744,-.1428814977407455,1,2,2,1,11,2,-1,2,1,11,1,2,.024354750290513,-.0266546793282032,.4326488971710205,0,2,20,4,5,6,-1,20,6,5,2,3,.0634179636836052,.0422610901296139,-.401317685842514,0,2,0,4,5,6,-1,0,6,5,2,3,.0038921029772609472,-.1906750947237015,.1267316043376923,0,3,19,11,6,4,-1,22,11,3,2,2,19,13,3,2,2,.0015238909982144833,-.1371546983718872,.1246439963579178,0,2,10,4,5,2,-1,10,5,5,1,2,-.006765741854906082,.2558242976665497,-.0607152618467808,0,2,7,6,11,4,-1,7,7,11,2,2,-.0241763703525066,.285988986492157,-.0642128363251686,1,2,9,2,4,4,-1,9,2,2,4,2,-.009176191873848438,.1021848022937775,-.1999447047710419,0,2,1,0,24,11,-1,7,0,12,11,2,-.1578399986028671,.239830806851387,-.0785783529281616,0,2,4,0,10,10,-1,9,0,5,10,2,.0487401895225048,-.1100914031267166,.1558353006839752,1,2,23,8,2,4,-1,23,8,2,2,2,.0191179793328047,.0197066999971867,-.3720233142375946,1,2,2,8,4,2,-1,2,8,2,2,2,-.0127781601622701,-.4160012900829315,.0353787206113338,0,3,23,3,2,12,-1,24,3,1,6,2,23,9,1,6,2,.0026996301021426916,-.0985597372055054,.1149144023656845,0,3,9,3,6,12,-1,9,3,3,6,2,12,9,3,6,2,.0245021991431713,.0430920794606209,-.3663294017314911,0,3,1,0,24,12,-1,13,0,12,6,2,1,6,12,6,2,.0850031301379204,.0430114008486271,-.2886289954185486,0,3,0,3,2,12,-1,0,3,1,6,2,1,9,1,6,2,.003164753085002303,-.114293098449707,.1279425024986267,1,2,14,8,3,4,-1,14,8,3,2,2,.0116577902808785,-.0515255816280842,.1422376930713654,0,2,0,0,6,1,-1,2,0,2,1,3,-.006680144928395748,-.4743103981018066,.0287305805832148,0,2,9,2,16,7,-1,13,2,8,7,2,-.0388207696378231,.0953134000301361,-.0473909191787243,1,2,8,7,1,6,-1,8,7,1,3,2,-.0254217702895403,-.4219881892204285,.028437789529562,0,2,8,7,9,4,-1,8,8,9,2,2,-.0121460696682334,.1830082982778549,-.0762820765376091,0,2,7,5,10,4,-1,7,6,10,2,2,-.026787219569087,.2859373092651367,-.0522297993302345,1,2,14,2,1,6,-1,12,4,1,2,3,-.0116149904206395,.1138594970107079,-.0663506835699081,0,3,0,3,8,12,-1,0,3,4,6,2,4,9,4,6,2,-.0599568895995617,.2777940034866333,-.0470041483640671,0,2,19,13,6,2,-1,19,13,3,2,2,-.00867370143532753,.2129196971654892,-.0287764091044664,0,2,0,13,6,2,-1,3,13,3,2,2,.002854354912415147,-.1221636980772018,.1421594023704529,0,2,23,12,1,3,-1,23,13,1,1,3,.002271306002512574,.0182375106960535,-.4104354083538055,0,2,1,12,1,3,-1,1,13,1,1,3,-.0012334890197962523,-.3772745132446289,.035043578594923,0,2,23,12,1,3,-1,23,13,1,1,3,-.0026904400438070297,-.4196098148822784,.0100445803254843,0,2,4,10,10,1,-1,9,10,5,1,2,-.0026551370974630117,.1150795966386795,-.1072231009602547,0,2,23,12,1,3,-1,23,13,1,1,3,-56895318266469985e-21,.0416303612291813,-.0317232310771942,0,2,1,12,1,3,-1,1,13,1,1,3,.000987313687801361,.0429715514183044,-.2815021872520447,0,2,11,2,12,4,-1,11,3,12,2,2,.0182135794311762,-.0451830588281155,.1914888024330139,0,2,3,1,12,6,-1,3,3,12,2,3,-.0872772708535194,.171896293759346,-.121959999203682,1,2,23,0,2,2,-1,23,0,1,2,2,-.005389865022152662,-.386665403842926,.0155352503061295,1,2,2,0,2,2,-1,2,0,2,1,2,.0108539797365665,.0364841781556606,-.3959751129150391,0,2,14,13,4,2,-1,15,13,2,2,2,-.004180129151791334,-.4820233881473541,.0170424394309521,1,2,3,6,6,3,-1,2,7,6,1,3,-.0234517697244883,.4986476898193359,-.0220960807055235,0,2,14,13,4,2,-1,15,13,2,2,2,.0029061511158943176,.0269486699253321,-.3256624042987824,0,3,0,7,24,4,-1,0,7,12,2,2,12,9,12,2,2,.0463646091520786,.026882030069828,-.3762974143028259,0,2,23,0,2,2,-1,23,1,2,1,2,-.00021972910326439887,.0705367177724838,-.1089593023061752,0,2,7,13,4,2,-1,8,13,2,2,2,-.0037804399617016315,-.4887917041778565,.0199932008981705,0,3,16,11,2,2,-1,17,11,1,1,2,16,12,1,1,2,6064217086532153e-20,-.0753576681017876,.0811428874731064,0,2,8,11,9,4,-1,8,12,9,2,2,-.0106888897716999,.2206722944974899,-.0562041401863098,0,2,2,12,21,3,-1,9,13,7,1,9,.0436831787228584,-.0610822103917599,.1712581962347031,0,2,1,13,21,2,-1,8,13,7,2,3,-.0202471297234297,.1565587073564529,-.0770068317651749,1,2,22,10,1,4,-1,21,11,1,2,2,-.005928528029471636,-.4369310140609741,.0202764291316271,1,2,3,5,6,3,-1,2,6,6,1,3,.01134920027107,-.0597750283777714,.1651744991540909,1,2,13,2,8,5,-1,15,4,4,5,2,-.1365716010332108,-.8707361817359924,.004286841955035925,0,2,4,2,8,6,-1,4,4,8,2,3,.0663046464323998,-.0388697795569897,.2649452090263367,0,2,5,1,15,4,-1,5,2,15,2,2,.0195911191403866,-.0803443267941475,.1665123999118805,0,2,0,1,8,4,-1,0,2,8,2,2,.0340932197868824,.026182109490037,-.4526833891868591,0,2,10,0,15,14,-1,10,7,15,7,2,-.2061661928892136,-.4254589080810547,.0156788490712643,0,2,9,13,6,2,-1,11,13,2,2,3,-.007667514029890299,-.3513334095478058,.0274340193718672,0,2,8,9,11,4,-1,8,10,11,2,2,-.0129145104438066,.1359857022762299,-.0633687376976013,1,2,8,6,3,3,-1,9,7,1,3,3,.0160742308944464,.0215212907642126,-.4643712937831879,0,2,21,5,4,6,-1,21,7,4,2,3,.0369430296123028,.0274755004793406,-.3073608875274658,1,2,12,3,6,6,-1,10,5,6,2,3,-.075521357357502,-.4241931140422821,.0237817000597715,0,2,12,9,10,6,-1,12,9,5,6,2,.0243982393294573,-.0493879318237305,.1672402024269104,0,2,3,9,10,6,-1,8,9,5,6,2,.1157704964280129,.0166440103203058,-.6928011178970337,0,2,12,0,4,1,-1,13,0,2,1,2,.000915299984626472,-.0502800084650517,.1328525990247726,1,2,3,10,4,1,-1,4,11,2,1,2,-.003624845063313842,-.3066833913326263,.028492359444499,1,2,18,12,1,2,-1,18,12,1,1,2,-.0007358163129538298,.0559885688126087,-.0392797887325287,0,2,2,0,20,10,-1,12,0,10,10,2,.2000436931848526,-.0568408109247684,.1685038954019547,1,2,22,2,3,6,-1,23,3,1,6,3,-.0178776904940605,.193175196647644,-.0514639392495155,1,2,3,2,6,3,-1,2,3,6,1,3,.011350380256772,-.0489644110202789,.2181939035654068,0,3,21,1,4,6,-1,23,1,2,3,2,21,4,2,3,2,.0125029096379876,-.0419848784804344,.2713862061500549,0,3,0,1,4,6,-1,0,1,2,3,2,2,4,2,3,2,-.009303327649831772,.1590452045202255,-.0626974031329155,0,2,24,0,1,6,-1,24,3,1,3,2,.009820517152547836,.015533110126853,-.330407589673996,0,2,0,0,1,6,-1,0,3,1,3,2,.0044993069022893906,.0376702398061752,-.3112137019634247,0,2,18,0,6,6,-1,18,2,6,2,3,.0140464501455426,-.0434262491762638,.1032719984650612,0,2,5,1,15,4,-1,5,2,15,2,2,-.0411175191402435,.1867991983890533,-.0664343684911728,0,2,4,8,18,1,-1,10,8,6,1,3,-.0107145197689533,.1244383975863457,-.0663585364818573,0,2,8,6,6,4,-1,8,7,6,2,2,.009289542213082314,-.0821698531508446,.1224353983998299,0,2,9,5,8,2,-1,11,5,4,2,2,-.0130508001893759,-.400338888168335,.016636909916997,0,2,5,0,6,6,-1,7,0,2,6,3,-.0364681892096996,-.5473737716674805,.0148177295923233,0,2,21,8,2,1,-1,21,8,1,1,2,-7537294004578143e-20,.0594716407358646,-.0578790009021759,1,2,7,1,2,2,-1,7,1,2,1,2,.0142522901296616,.0252972692251205,-.3336473107337952,0,2,17,4,8,4,-1,17,5,8,2,2,.0033469200134277344,-.0707368031144142,.0745013207197189,0,2,6,0,13,2,-1,6,1,13,1,2,.004444595891982317,-.0672459527850151,.1451885998249054,0,2,21,5,4,6,-1,21,7,4,2,3,-.008720582351088524,-.202135294675827,.0275202393531799,0,2,0,5,4,6,-1,0,7,4,2,3,.0469216890633106,.0161568503826857,-.5311927795410156,0,2,21,8,2,1,-1,21,8,1,1,2,58387980971019715e-21,-.0557161718606949,.0720106214284897,0,2,2,8,2,1,-1,3,8,1,1,2,-4610310134012252e-20,.0959030091762543,-.0971473827958107,1,2,23,0,2,1,-1,23,0,1,1,2,.006065776105970144,.0240712091326714,-.2376091033220291,0,2,4,0,15,4,-1,4,1,15,2,2,-.0555203706026077,.3074511885643005,-.0299711804836988,0,2,15,1,10,8,-1,15,3,10,4,2,-.0365539006888866,.0328120291233063,-.0570152215659618,0,3,0,5,4,2,-1,0,5,2,1,2,2,6,2,1,2,.0018784699495881796,-.0653261989355087,.1390983015298843,1,2,23,0,2,1,-1,23,0,1,1,2,-.007482212036848068,-.7748216986656189,.00592863280326128,0,2,0,5,1,4,-1,0,6,1,2,2,-.0033365150447934866,-.3616085052490234,.0226737502962351,0,2,19,13,4,2,-1,19,14,4,1,2,-.0122549999505281,-.6580218076705933,.0043241591192781925,0,3,7,12,2,2,-1,7,12,1,1,2,8,13,1,1,2,-.0002502274001017213,.1368491053581238,-.0613101907074451,0,3,1,0,24,8,-1,13,0,12,4,2,1,4,12,4,2,.1189583986997604,.024467010051012,-.3081929087638855,0,2,2,4,3,3,-1,2,5,3,1,3,.0018534749979153275,-.0657177790999413,.1380506008863449,1,2,20,6,4,3,-1,19,7,4,1,3,-.0139663796871901,-.4281671941280365,.0166652500629425,1,2,5,6,3,4,-1,6,7,1,4,3,-.0120118902996182,-.4546675086021423,.0174813903868198,0,3,16,11,2,2,-1,17,11,1,1,2,16,12,1,1,2,.0008638032013550401,.0268306396901608,-.1949577033519745,0,3,7,11,2,2,-1,7,11,1,1,2,8,12,1,1,2,-.0005486354930326343,.172817200422287,-.0519250482320786,0,2,9,5,9,3,-1,12,5,3,3,3,.0356420204043388,.011997340247035,-.2636224925518036,0,2,0,0,6,1,-1,2,0,2,1,3,.009283074177801609,.0153813296929002,-.5276867151260376,0,2,17,4,8,1,-1,19,4,4,1,2,.003344479948282242,-.0448165088891983,.1556369960308075,0,2,7,5,9,3,-1,10,5,3,3,3,-.0348524898290634,-.6144651770591736,.014714409597218,0,2,17,4,8,1,-1,19,4,4,1,2,-.0036836538929492235,.0679996237158775,-.0403181910514832,0,2,0,4,8,1,-1,2,4,4,1,2,.002637067111209035,-.0527165904641151,.1650273054838181,0,3,16,11,2,2,-1,17,11,1,1,2,16,12,1,1,2,-.001140838023275137,-.1495666950941086,.0155292097479105,0,2,6,11,12,2,-1,9,11,6,2,2,-.005560464225709438,.1015162020921707,-.0783084183931351,0,2,4,6,20,9,-1,9,6,10,9,2,.031304020434618,-.0519621782004833,.1036399006843567,0,2,6,8,12,2,-1,6,9,12,1,2,.00929038506001234,-.0539887212216854,.1653061956167221,0,2,6,8,13,4,-1,6,9,13,2,2,-.0108930300921202,.1281013935804367,-.0734129622578621,0,2,2,13,4,2,-1,2,14,4,1,2,-.004919060971587896,-.3507530987262726,.0244891606271267,0,2,11,1,3,12,-1,11,4,3,6,2,.0811754167079926,.0209406390786171,-.3776533007621765,0,2,7,10,11,4,-1,7,11,11,2,2,-.007118931971490383,.1320966929197311,-.074379600584507,0,2,5,9,15,6,-1,5,11,15,2,3,.0290335901081562,-.0601534284651279,.1686525046825409,0,2,1,5,14,10,-1,1,10,14,5,2,.2666859030723572,.030215110629797,-.3336375057697296,0,3,13,10,2,2,-1,14,10,1,1,2,13,11,1,1,2,.001343771000392735,.0244619604200125,-.3497652113437653,0,2,0,0,4,2,-1,0,1,4,1,2,-6406597094610333e-20,.0681859701871872,-.1218236982822418,0,2,18,3,4,2,-1,18,4,4,1,2,-.0022273659706115723,.0591664388775826,-.0569609887897968,0,2,0,7,4,4,-1,0,8,4,2,2,.0001082283997675404,-.118367500603199,.0699028074741364,0,2,12,12,6,2,-1,14,12,2,2,3,.007776250131428242,.0182663407176733,-.3238837122917175,0,2,7,0,3,1,-1,8,0,1,1,3,-.0008562789880670607,.1596496999263763,-.0523401089012623,0,2,15,0,2,1,-1,15,0,1,1,2,.003980595152825117,.0056993248872458935,-.6384922862052917,0,2,8,0,2,1,-1,9,0,1,1,2,-.0004905238165520132,.1629474014043808,-.0742301419377327,0,2,18,3,2,10,-1,18,3,1,10,2,-.0184035003185272,-.6773443222045898,.010705940425396,0,3,7,1,2,2,-1,7,1,1,1,2,8,2,1,1,2,-.0008971457136794925,.1691973060369492,-.0477185398340225,0,2,18,0,7,3,-1,18,1,7,1,3,-.0167341101914644,-.3151237964630127,.0124420495703816,0,2,7,12,6,2,-1,9,12,2,2,3,-.0119769899174571,-.5293223857879639,.0144362701103091,0,2,20,7,4,3,-1,20,8,4,1,3,.007036808878183365,.0264915898442268,-.2470992058515549,0,2,5,3,2,10,-1,6,3,1,10,2,-.0105798998847604,-.4092808067798615,.0187591798603535,0,3,16,0,2,2,-1,17,0,1,1,2,16,1,1,1,2,.0006084999768063426,-.0334094502031803,.0843884497880936,0,3,7,0,2,2,-1,7,0,1,1,2,8,1,1,1,2,-.000594453071244061,.1412419974803925,-.0555582903325558,0,2,15,0,6,2,-1,17,0,2,2,3,-.0157594103366137,-.3833500146865845,.0156633593142033,0,2,0,0,1,4,-1,0,2,1,2,2,-.0101080304011703,-.3391439020633698,.0209970101714134,1,2,22,1,2,12,-1,18,5,2,4,3,.008824238553643227,.046882901340723,-.0345581099390984,1,2,4,0,12,3,-1,8,4,4,3,3,.1695280969142914,-.0297883804887533,.2978200018405914,0,3,14,13,2,2,-1,15,13,1,1,2,14,14,1,1,2,.0014175090473145247,.0145506802946329,-.2557711899280548,0,2,11,6,3,3,-1,12,7,1,1,9,-.006245535798370838,.1703144013881683,-.0457185097038746,0,2,15,1,10,8,-1,15,3,10,4,2,.08297199010849,-.0108856502920389,.2358570992946625,0,2,0,1,10,8,-1,0,3,10,4,2,-.036387961357832,.0720635578036308,-.1351491957902908,0,2,11,3,14,10,-1,11,8,14,5,2,.2605817019939423,.0307604894042015,-.208186000585556,0,3,0,0,24,12,-1,0,0,12,6,2,12,6,12,6,2,-.1837086975574493,-.4619984030723572,.0176900699734688,0,2,20,7,4,3,-1,20,8,4,1,3,-.00397269893437624,-.1660892963409424,.0209467206150293,0,2,0,1,7,3,-1,0,2,7,1,3,.0214559100568295,.0231478307396173,-.3625465929508209,0,2,20,7,4,3,-1,20,8,4,1,3,.0144318202510476,.004468928091228008,-.2445929050445557,0,2,0,7,1,8,-1,0,9,1,4,2,-.0033524229656904936,-.2480840981006622,.0316352993249893,1,2,22,4,3,4,-1,23,5,1,4,3,-.0156694706529379,.3172483146190643,-.0374899208545685,1,2,11,2,12,1,-1,15,6,4,1,3,-.0400774292647839,-.2589775919914246,.0327349714934826,1,2,22,4,3,4,-1,23,5,1,4,3,.0123612098395824,-.0450748614966869,.169064998626709,0,2,1,7,4,3,-1,1,8,4,1,3,.0109678898006678,.0187921095639467,-.4384852945804596,0,2,13,9,6,2,-1,15,9,2,2,3,-.0137434704229236,-.4609765112400055,.0122369602322578,0,3,6,7,2,2,-1,6,7,1,1,2,7,8,1,1,2,-.001032243948429823,.1648599952459335,-.0516587682068348,0,2,13,9,6,2,-1,15,9,2,2,3,.008831336162984371,.015935530886054,-.2015953958034515,0,2,4,0,6,2,-1,6,0,2,2,3,.0144206797704101,.0160773508250713,-.4641633033752441,0,2,13,9,6,2,-1,15,9,2,2,3,-.0018205989617854357,.0433134213089943,-.0280837193131447,1,2,7,7,2,6,-1,7,7,1,6,2,.003930467180907726,.0497011989355087,-.1514773964881897,0,2,24,0,1,10,-1,24,5,1,5,2,-.008321069180965424,-.1029928028583527,.0179813895374537,0,2,6,7,3,1,-1,7,7,1,1,3,-.0011277500307187438,.1659521013498306,-.0483443103730679,0,3,14,13,2,2,-1,15,13,1,1,2,14,14,1,1,2,-.000783850671723485,-.1946461051702499,.0250845197588205,0,2,8,7,4,1,-1,9,7,2,1,2,-.0008546434110030532,.1473073959350586,-.0529893897473812,1,2,24,4,1,9,-1,21,7,1,3,3,-.006144941784441471,.0951583385467529,-.0323545187711716,1,2,1,4,9,1,-1,4,7,3,1,3,.0537422299385071,-.0160139091312885,.5178387761116028,0,2,11,1,6,13,-1,13,1,2,13,3,-.009177369065582752,.0658730715513229,-.0286986008286476,0,2,10,2,4,7,-1,11,2,2,7,2,-.001626214012503624,.1165013015270233,-.0662005692720413,0,2,11,1,6,13,-1,13,1,2,13,3,-.0702467709779739,-.5561671257019043,.0033650770783424377,0,2,8,1,6,13,-1,10,1,2,13,3,-.045713048428297,-.5554363131523132,.0145238302648067,0,2,16,9,4,1,-1,16,9,2,1,2,-.0016252630157396197,.0774459466338158,-.0477535910904408,0,2,5,9,4,1,-1,7,9,2,1,2,-.00877845473587513,-.6660557985305786,.0114997997879982,1,2,17,4,1,9,-1,14,7,1,3,3,.0581780597567558,-.0126901902258396,.2431164979934692,0,3,7,4,2,2,-1,7,4,1,1,2,8,5,1,1,2,-.0010166700230911374,.1701835989952087,-.0434626787900925,0,3,13,9,2,2,-1,14,9,1,1,2,13,10,1,1,2,-.0008318690815940499,-.1554417014122009,.0277679692953825,0,3,7,11,2,2,-1,7,11,1,1,2,8,12,1,1,2,.0001063566014636308,-.0799610763788223,.0975525230169296,0,3,13,9,2,2,-1,14,9,1,1,2,13,10,1,1,2,.0007735859835520387,.0280197393149138,-.1640979051589966,0,2,6,13,10,1,-1,11,13,5,1,2,-.005128828808665276,.1435500979423523,-.0521811507642269,0,2,9,8,10,7,-1,9,8,5,7,2,-.0296237897127867,.1256711930036545,-.0727018266916275,0,2,4,5,15,10,-1,9,5,5,10,3,.0479203201830387,-.0627507865428925,.1496749967336655,0,2,20,6,5,4,-1,20,7,5,2,2,.0299077890813351,.0033279890194535255,-.5352283716201782,0,2,0,6,5,4,-1,0,7,5,2,2,-.00311031611636281,-.184633806347847,.0402609407901764,0,2,11,7,3,1,-1,12,7,1,1,3,.0011777599574998021,-.0421488806605339,.1833201944828033,0,2,9,4,7,3,-1,9,5,7,1,3,.0149721698835492,-.0501780100166798,.1479559987783432,0,2,15,4,4,3,-1,15,4,2,3,2,.022697489708662,.008885804563760757,-.3510260879993439,0,2,6,4,4,3,-1,8,4,2,3,2,.0128841297701001,.0346549116075039,-.2406193017959595,0,3,16,6,2,2,-1,17,6,1,1,2,16,7,1,1,2,-.0011240700259804726,.1314530968666077,-.0288430396467447,0,3,7,6,2,2,-1,7,6,1,1,2,8,7,1,1,2,-.0013627869775518775,.2013843953609467,-.0379555486142635,0,3,14,13,2,2,-1,15,13,1,1,2,14,14,1,1,2,.0005355795728974044,.0279592797160149,-.1196514964103699,1,2,6,0,4,2,-1,6,0,4,1,2,-.0152801796793938,-.4851869940757752,.0156223699450493,0,2,20,14,2,1,-1,20,14,1,1,2,4641250052372925e-20,-.0589389093220234,.0601089298725128,0,3,1,13,6,2,-1,1,13,3,1,2,4,14,3,1,2,965538783930242e-19,-.0965948700904846,.0779175236821175,0,2,12,1,2,2,-1,12,2,2,1,2,.0038991239853203297,-.0261822007596493,.1902385950088501,0,3,8,0,8,8,-1,8,0,4,4,2,12,4,4,4,2,.0237854700535536,.0403596796095371,-.1793317049741745,0,3,16,12,2,2,-1,17,12,1,1,2,16,13,1,1,2,5911722837481648e-20,-.0676945373415947,.0789666101336479,0,3,0,4,8,8,-1,0,4,4,4,2,4,8,4,4,2,.0585355199873447,-.0279133208096027,.2635962069034576,0,2,19,4,2,1,-1,19,4,1,1,2,-.006712567061185837,-.8246011137962341,.0036960430443286896,0,2,4,4,2,1,-1,5,4,1,1,2,-.0046747662127017975,-.7625464797019958,.009274384006857872,0,3,20,0,2,2,-1,21,0,1,1,2,20,1,1,1,2,.005398152861744165,.0019147379789501429,-.8057739734649658,0,2,0,5,15,3,-1,0,6,15,1,3,.007725214120000601,-.0822006091475487,.0925986021757126,0,2,13,5,1,3,-1,13,6,1,1,3,-.001167214009910822,.1147938966751099,-.0459650196135044,1,2,4,9,3,2,-1,5,10,1,2,3,-.007402225863188505,-.4262216091156006,.0174518898129463,0,3,20,0,2,2,-1,21,0,1,1,2,20,1,1,1,2,6543080235132948e-20,-.0445476993918419,.0498182512819767,0,3,3,0,2,2,-1,3,0,1,1,2,4,1,1,1,2,463534306618385e-19,-.082009993493557,.0922331288456917,-1.254032015800476,218,0,3,0,11,12,4,-1,0,11,6,2,2,6,13,6,2,2,.0105607798323035,-.1728546023368835,.2072951048612595,0,2,17,1,8,4,-1,17,3,8,2,2,-.038237389177084,.1771112978458405,-.1585303992033005,0,2,6,6,13,6,-1,6,8,13,2,3,-.0541206710040569,.2564443051815033,-.0884335711598396,0,2,23,4,2,3,-1,23,4,1,3,2,-.002200446091592312,.2010346055030823,-.1101640984416008,0,2,2,13,10,2,-1,2,14,10,1,2,.0654388666152954,.0007821313920430839,-4350.8232421875,0,2,23,4,2,3,-1,23,4,1,3,2,-.0135645801201463,-.5407810807228088,.004865359049290419,0,2,0,4,2,3,-1,1,4,1,3,2,-.0018708320567384362,.1633561998605728,-.1228590980172157,0,2,2,7,21,3,-1,9,8,7,1,9,.1699268966913223,-.004541059955954552,.4810850024223328,1,2,2,11,2,2,-1,2,11,1,2,2,.003598150098696351,.0356757305562496,-.4236158132553101,0,2,2,2,21,6,-1,9,4,7,2,9,.5448976159095764,-.0198735594749451,.5460472106933594,0,2,1,1,8,6,-1,1,3,8,2,3,-.0627753064036369,.1722137033939362,-.1143800020217896,0,2,6,4,15,4,-1,6,5,15,2,2,-.0459444113075733,.2595784068107605,-.0732216089963913,1,2,2,10,4,1,-1,3,11,2,1,2,.002180942101404071,.0495434813201427,-.3175086975097656,0,2,4,14,18,1,-1,4,14,9,1,2,-.00965660810470581,.1581763029098511,-.0890468433499336,0,3,0,3,24,10,-1,0,3,12,5,2,12,8,12,5,2,.080804243683815,.0503276288509369,-.2887117862701416,0,3,15,3,10,12,-1,20,3,5,6,2,15,9,5,6,2,.0987789332866669,-.0381883382797241,.3119831085205078,0,2,9,5,6,3,-1,9,6,6,1,3,.008411401882767677,-.0949936509132385,.1344850063323975,0,2,2,13,21,1,-1,9,13,7,1,3,-.0147700998932123,.1715719997882843,-.0750405564904213,0,3,0,3,10,12,-1,0,3,5,6,2,5,9,5,6,2,.105756402015686,-.0440231785178185,.3495194017887116,0,2,5,3,15,4,-1,5,4,15,2,2,.0401043891906738,-.0572791509330273,.2763915061950684,0,2,8,6,9,3,-1,8,7,9,1,3,.0135993398725986,-.0886402428150177,.1596630066633225,0,2,14,13,3,1,-1,15,13,1,1,3,-.003337878966704011,-.499087005853653,.007176036946475506,0,2,7,1,10,2,-1,7,2,10,1,2,.006549019832164049,-.0597806982696056,.2110590040683746,0,2,14,13,3,1,-1,15,13,1,1,3,-6275867053773254e-20,.0655476525425911,-.0541992485523224,0,2,8,13,3,1,-1,9,13,1,1,3,.000908895512111485,.042570099234581,-.2828716039657593,0,3,1,0,24,12,-1,13,0,12,6,2,1,6,12,6,2,.0881031826138496,.0406627096235752,-.298372894525528,0,2,0,0,13,14,-1,0,7,13,7,2,-.1351538002490997,-.4011076092720032,.025998929515481,1,2,21,6,3,3,-1,20,7,3,1,3,.0105496803298593,.0265602301806211,-.3554666042327881,0,2,8,9,8,4,-1,8,10,8,2,2,-.0109745198860765,.1540209054946899,-.0715849623084068,0,2,13,10,6,4,-1,15,10,2,4,3,-.01281054969877,-.2680475115776062,.0205432493239641,1,2,11,3,4,4,-1,11,3,2,4,2,-.067375123500824,-.5299177169799805,.0192500203847885,0,2,13,10,6,4,-1,15,10,2,4,3,.0133285904303193,.0141924796625972,-.2692896127700806,0,2,7,10,10,4,-1,7,12,10,2,2,-.034924790263176,.2877762019634247,-.0366922505199909,0,2,13,10,6,4,-1,15,10,2,4,3,-.0259607005864382,-.5250588059425354,.004201324190944433,0,2,6,10,6,4,-1,8,10,2,4,3,-.0144326100125909,-.4404621124267578,.0239412691444159,0,2,21,14,4,1,-1,21,14,2,1,2,.0010242980206385255,-.0813294127583504,.1090075969696045,0,2,0,7,4,4,-1,0,8,4,2,2,-.0033913699444383383,-.2744260132312775,.0353980511426926,0,3,19,3,6,12,-1,22,3,3,6,2,19,9,3,6,2,-.0254591107368469,.1884281933307648,-.0505212917923927,0,2,5,1,15,2,-1,5,2,15,1,2,-.0250639300793409,.1583306044340134,-.067982017993927,0,2,19,1,3,4,-1,19,2,3,2,2,.00457573588937521,-.0512838996946812,.114658497273922,0,2,2,5,20,4,-1,12,5,10,4,2,-.1538352966308594,.42741459608078,-.0233538504689932,0,2,21,14,4,1,-1,21,14,2,1,2,.00674419803544879,.0116364201530814,-.1990616023540497,0,2,0,14,4,1,-1,2,14,2,1,2,.0004985763225704432,-.1112217977643013,.0913273170590401,0,3,19,3,6,12,-1,22,3,3,6,2,19,9,3,6,2,.0416502095758915,-.0342307090759277,.1340909004211426,0,3,0,3,6,12,-1,0,3,3,6,2,3,9,3,6,2,-.0486865788698196,.3840608894824982,-.0367092713713646,0,2,19,1,3,4,-1,19,2,3,2,2,-.0142661100253463,.1904101967811585,-.0373262614011765,0,2,3,1,3,4,-1,3,2,3,2,2,.002073825104162097,-.0940800234675407,.1367546021938324,0,2,10,1,10,2,-1,10,1,5,2,2,-.0127805396914482,.0790209397673607,-.0321417711675167,0,2,5,0,8,3,-1,9,0,4,3,2,.008742088451981544,-.0805833786725998,.1433219015598297,1,2,21,0,2,1,-1,21,0,1,1,2,6978053716011345e-20,-.1539752036333084,.0694082602858543,1,2,2,8,4,2,-1,3,9,2,2,2,-.007998161017894745,-.4497911930084229,.0232297703623772,1,2,21,0,2,1,-1,21,0,1,1,2,.005380451213568449,.0246548391878605,-.1725358963012695,0,2,2,0,21,1,-1,9,0,7,1,3,-.0200069397687912,.165263906121254,-.0625987574458122,1,2,21,0,2,1,-1,21,0,1,1,2,-.004465640988200903,-.3730463087558746,.0105512700974941,1,2,4,0,1,2,-1,4,0,1,1,2,-.0031919090542942286,-.4411549866199493,.0209588091820478,0,3,1,11,24,4,-1,13,11,12,2,2,1,13,12,2,2,-.0622704289853573,-.5413467884063721,.0132205402478576,0,3,0,11,24,4,-1,0,11,12,2,2,12,13,12,2,2,-.044956348836422,-.4331294000148773,.0206683203577995,0,3,16,5,2,2,-1,17,5,1,1,2,16,6,1,1,2,.0011595709947869182,-.0236924402415752,.1087998002767563,0,3,7,5,2,2,-1,7,5,1,1,2,8,6,1,1,2,-.0008840562077239156,.1649617999792099,-.0524947308003902,0,2,18,1,6,2,-1,18,1,3,2,2,.0266917701810598,.0148458201438189,-.5571644902229309,0,2,2,0,21,2,-1,9,0,7,2,3,.0182767305523157,-.066286213696003,.1257701069116592,0,2,13,0,10,15,-1,13,0,5,15,2,-.0809113383293152,.1131376996636391,-.049807820469141,0,2,6,0,13,4,-1,6,1,13,2,2,-.036403700709343,.2336605936288834,-.0383339710533619,0,2,11,3,9,3,-1,11,4,9,1,3,-.0139478798955679,.0991646125912666,-.0678260922431946,1,2,3,2,10,3,-1,2,3,10,1,3,-.0224205106496811,.1904506981372833,-.0484246909618378,0,2,6,6,16,8,-1,6,6,8,8,2,.0995163321495056,-.0482200607657433,.2056124061346054,0,2,5,0,12,15,-1,8,0,6,15,2,.1495629996061325,.0141723398119211,-.6450886726379395,0,2,23,8,2,4,-1,23,8,1,4,2,.0009669344290159643,-.0378436110913754,.0635498985648155,0,2,0,5,3,3,-1,0,6,3,1,3,.0120417503640056,.018035089597106,-.4774137139320374,0,2,21,5,4,2,-1,22,5,2,2,2,.0023097700905054808,-.0415334291756153,.1302794069051743,0,2,0,5,4,2,-1,1,5,2,2,2,.002201986964792013,-.0514689311385155,.1736146062612534,1,2,21,2,3,4,-1,22,3,1,4,3,.0272558908909559,-.0153390001505613,.3625235855579376,1,2,4,2,4,3,-1,3,3,4,1,3,.008874750696122646,-.0426916293799877,.2076780050992966,1,2,23,2,2,2,-1,23,2,2,1,2,.0047241621650755405,-.0500567816197872,.087361179292202,0,2,0,5,4,4,-1,0,6,4,2,2,7316731353057548e-20,-.1244131028652191,.0726777836680412,0,2,23,7,2,5,-1,23,7,1,5,2,-.001263994025066495,.0776199027895927,-.0404986217617989,0,2,0,0,1,4,-1,0,1,1,2,2,.003690955927595496,.0311388503760099,-.3086219131946564,0,2,23,1,2,4,-1,23,3,2,2,2,-.028352240100503,-.3550184071063995,.0135328602045774,0,2,0,1,2,4,-1,0,3,2,2,2,-.0009666720288805664,.0676028430461884,-.1432974934577942,0,2,19,3,5,4,-1,19,4,5,2,2,-.0587403103709221,-.5506312847137451,.0042741261422634125,1,2,12,1,6,2,-1,12,1,6,1,2,-.0272757392376661,-.6493160724639893,.012534529902041,0,2,19,11,6,4,-1,19,12,6,2,2,-.0117558799684048,-.5648565292358398,.0137637602165341,0,2,1,3,6,4,-1,1,4,6,2,2,.007592375855892897,-.0431140698492527,.200558602809906,1,2,23,0,2,1,-1,23,0,1,1,2,-.0007197940140031278,-.1374174952507019,.0340671092271805,1,2,2,0,1,2,-1,2,0,1,1,2,.004119044169783592,.0367105789482594,-.2477497011423111,0,2,19,0,4,2,-1,20,0,2,2,2,.007544305175542831,.007234477903693914,-.4473736882209778,0,3,0,0,2,12,-1,0,0,1,6,2,1,6,1,6,2,-.005235828924924135,.2173164039850235,-.0386803299188614,0,3,22,4,2,8,-1,23,4,1,4,2,22,8,1,4,2,.0007468659896403551,-.0371707193553448,.0385193713009357,0,3,1,4,2,8,-1,1,4,1,4,2,2,8,1,4,2,.0008846849086694419,-.1020980030298233,.0926149412989616,0,2,17,9,4,1,-1,17,9,2,1,2,-.0011738609755411744,.110879197716713,-.0856960415840149,1,2,12,2,5,8,-1,10,4,5,4,2,-.0989599674940109,-.4499149918556213,.0212421305477619,0,3,18,13,2,2,-1,19,13,1,1,2,18,14,1,1,2,.0008824847172945738,.0228975899517536,-.1995048969984055,0,2,6,9,13,6,-1,6,11,13,2,3,-.0413776896893978,.1549389958381653,-.0591393709182739,0,2,6,10,13,4,-1,6,11,13,2,2,.00679467897862196,-.0783610120415688,.1739570051431656,0,3,0,8,24,4,-1,0,8,12,2,2,12,10,12,2,2,.0447585098445416,.0260890107601881,-.3311159014701843,0,2,17,10,8,3,-1,17,11,8,1,3,.0029978479724377394,.0459281504154205,-.1491470038890839,0,3,4,0,16,8,-1,4,0,8,4,2,12,4,8,4,2,-.059589359909296,-.2485350966453552,.032523650676012,0,2,14,0,1,2,-1,14,1,1,1,2,.0009419932030141354,-.0425546802580357,.1344856023788452,0,2,3,9,6,6,-1,5,9,2,6,3,-.0239475108683109,-.4583190977573395,.0178181305527687,0,2,13,10,12,3,-1,16,10,6,3,2,.007446235977113247,-.0423585288226604,.0580310709774494,0,2,0,10,12,3,-1,3,10,6,3,2,-.0129095697775483,.197303906083107,-.0445232689380646,0,2,19,8,5,3,-1,19,9,5,1,3,.0028930921107530594,.0428810603916645,-.1371746063232422,0,2,7,1,3,1,-1,8,1,1,1,3,-.0006818625843152404,.1337869018316269,-.0565496906638145,0,2,15,1,3,1,-1,16,1,1,1,3,.0009088438237085938,-.0361675098538399,.1220118999481201,0,2,7,1,3,1,-1,8,1,1,1,3,.0004230542981531471,-.0695094764232636,.1302513927221298,0,2,20,8,2,3,-1,20,9,2,1,3,-.0016460029873996973,-.1300535947084427,.032738208770752,0,2,2,0,4,2,-1,3,0,2,2,2,.007249381858855486,.0122888395562768,-.6227869987487793,0,2,19,8,5,3,-1,19,9,5,1,3,.007820780389010906,.007436948828399181,-.1486981958150864,0,2,4,1,6,11,-1,6,1,2,11,3,.0359272807836533,.0188675802201033,-.3921496868133545,0,2,16,9,2,1,-1,16,9,1,1,2,-6161881174193695e-20,.0568877793848515,-.0677392184734344,0,2,5,2,15,4,-1,5,3,15,2,2,.0374080687761307,-.038547120988369,.2218790054321289,0,2,11,2,3,3,-1,11,3,3,1,3,-.005215566139668226,.1363334953784943,-.0673948600888252,0,2,2,7,18,6,-1,11,7,9,6,2,-.0935681909322739,.1743745058774948,-.0487747117877007,0,2,1,6,24,9,-1,7,6,12,9,2,.076228141784668,-.0574758499860764,.1471180021762848,0,2,0,0,1,10,-1,0,5,1,5,2,-.0200377702713013,-.4157789945602417,.0179230198264122,0,2,9,3,10,2,-1,9,4,10,1,2,-.0118243796750903,.1144623011350632,-.0700482204556465,0,2,12,6,1,3,-1,12,7,1,1,3,-.0016057320171967149,.1678820997476578,-.0499466583132744,0,2,16,9,2,1,-1,16,9,1,1,2,-.002551743993535638,-.3828516900539398,.011361270211637,0,2,7,9,2,1,-1,8,9,1,1,2,-9951562969945371e-20,.0925496816635132,-.0903496667742729,0,3,16,7,6,6,-1,19,7,3,3,2,16,10,3,3,2,-.0167104993015528,.1787143051624298,-.0413177497684956,0,3,10,10,2,2,-1,10,10,1,1,2,11,11,1,1,2,-.0009668730199337006,-.2522006928920746,.0305528100579977,0,3,16,9,2,2,-1,17,9,1,1,2,16,10,1,1,2,-6082893014536239e-20,.0542593784630299,-.0474381409585476,0,3,7,9,2,2,-1,7,9,1,1,2,8,10,1,1,2,-.0008633537217974663,.1779994070529938,-.0423120781779289,0,3,13,10,2,2,-1,14,10,1,1,2,13,11,1,1,2,-.0008921846165321767,-.1845878958702087,.0251416098326445,0,2,11,7,2,3,-1,11,8,2,1,3,-.003487017937004566,.1677664965391159,-.0460440590977669,0,2,19,0,6,3,-1,19,1,6,1,3,.0195988900959492,.0180558506399393,-.3022567927837372,0,2,0,0,6,3,-1,0,1,6,1,3,-.0109872100874782,-.3727653026580811,.0197681505233049,0,2,24,0,1,2,-1,24,1,1,1,2,-6639063940383494e-20,.0768569633364677,-.1268360018730164,0,2,0,0,16,1,-1,4,0,8,1,2,-.004260623827576637,.1132820025086403,-.0696604028344154,0,2,19,11,6,4,-1,19,12,6,2,2,.007314716000109911,.0329976715147495,-.2646273076534271,0,2,0,11,6,4,-1,0,12,6,2,2,-.0101194800809026,-.470618486404419,.0138464700430632,0,2,5,3,15,6,-1,5,6,15,3,2,.0921443328261375,-.0886306688189507,.0808285027742386,0,2,8,3,9,3,-1,8,4,9,1,3,.0118425898253918,-.0542713403701782,.1590622961521149,0,2,12,0,1,12,-1,12,3,1,6,2,.0260604508221149,.0202190801501274,-.3709642887115479,0,2,1,3,14,8,-1,1,7,14,4,2,.2863250076770783,.0171639006584883,-.3946934938430786,0,2,15,0,6,4,-1,17,0,2,4,3,-.019337460398674,-.2173891961574554,.0148878796026111,0,3,3,7,4,2,-1,3,7,2,1,2,5,8,2,1,2,.0006899603758938611,-.0642509534955025,.1074123978614807,0,2,14,5,1,8,-1,14,9,1,4,2,.0273154806345701,.005089373793452978,-.5541477799415588,0,2,0,7,3,3,-1,0,8,3,1,3,-.007314932066947222,-.5788456201553345,.0114226602017879,0,2,11,12,6,3,-1,13,12,2,3,3,.0134929800406098,.0069531891494989395,-.3359794020652771,0,2,8,12,6,3,-1,10,12,2,3,3,.0170349292457104,.009658707305788994,-.6638085842132568,0,3,16,5,6,10,-1,19,5,3,5,2,16,10,3,5,2,-.0495363213121891,-.1099594011902809,.007144455797970295,0,3,3,5,6,10,-1,3,5,3,5,2,6,10,3,5,2,-.0326232202351093,.188817098736763,-.0416569598019123,0,2,17,8,8,1,-1,19,8,4,1,2,.0025752598885446787,-.0510260090231895,.1057118028402329,0,2,0,8,8,1,-1,2,8,4,1,2,.0024968909565359354,-.0559858083724976,.1347001940011978,0,2,9,13,14,2,-1,9,13,7,2,2,-.0116916997358203,.0694792568683624,-.0498108491301537,0,2,1,14,20,1,-1,6,14,10,1,2,.005096627864986658,-.0719841867685318,.120134100317955,0,3,17,7,2,2,-1,18,7,1,1,2,17,8,1,1,2,.0008642909815534949,-.0280915908515453,.110590897500515,0,2,0,8,2,2,-1,0,9,2,1,2,-.0030658349860459566,-.4070394039154053,.0187105592340231,0,3,17,7,2,2,-1,18,7,1,1,2,17,8,1,1,2,-55272910685744137e-21,.0707912817597389,-.0700317397713661,0,3,6,7,2,2,-1,6,7,1,1,2,7,8,1,1,2,.0006569849792867899,-.0492957085371017,.154824897646904,0,3,13,10,2,2,-1,14,10,1,1,2,13,11,1,1,2,.0005370734143070877,.0302961803972721,-.1238510981202126,0,2,4,0,6,4,-1,6,0,2,4,3,-.027268910780549,-.4674024879932404,.0149874398484826,0,2,10,0,6,2,-1,12,0,2,2,3,-.002613895107060671,.116668201982975,-.0615368783473969,0,2,8,1,8,3,-1,10,1,4,3,2,-.027707589790225,-.6434546709060669,.0120052499696612,1,2,14,6,7,2,-1,14,6,7,1,2,-.0200542695820332,-.3493579030036926,.0109763201326132,0,2,8,10,4,1,-1,9,10,2,1,2,.0006917031714692712,.0442647784948349,-.1491888016462326,0,3,16,11,2,2,-1,17,11,1,1,2,16,12,1,1,2,6456066330429167e-20,-.0422041602432728,.0473436005413532,0,3,7,11,2,2,-1,7,11,1,1,2,8,12,1,1,2,-8837810310069472e-20,.1016054973006249,-.0740641728043556,0,3,16,11,2,2,-1,17,11,1,1,2,16,12,1,1,2,-661065278109163e-19,.0759406536817551,-.0495208092033863,0,3,7,11,2,2,-1,7,11,1,1,2,8,12,1,1,2,.00042288508848287165,-.0588600113987923,.1385688036680222,0,2,17,9,4,1,-1,17,9,2,1,2,.0025251980405300856,-.0302844792604446,.1643659025430679,0,2,4,9,4,1,-1,6,9,2,1,2,-.009034793823957443,-.6502289175987244,.0117079298943281,0,2,11,8,3,4,-1,11,9,3,2,2,-.0042698681354522705,.1213309019804001,-.0608336813747883,1,2,9,6,3,2,-1,10,7,1,2,3,.0166539791971445,.0145571101456881,-.5031678080558777,1,2,21,0,4,8,-1,19,2,4,4,2,-.1178558021783829,-.3486539125442505,.005829961039125919,1,2,4,0,8,4,-1,6,2,4,4,2,-.0389890410006046,.1082129999995232,-.0824354067444801,1,2,20,1,5,2,-1,20,1,5,1,2,-.006974487099796534,.0920993909239769,-.0447417609393597,0,2,0,6,6,4,-1,0,7,6,2,2,.0154374102130532,.029481740668416,-.2408691942691803,0,2,20,6,5,4,-1,20,7,5,2,2,-.005959998816251755,-.2254153043031693,.025642080232501,0,2,6,8,3,1,-1,7,8,1,1,3,-.0005335814203135669,.1183808967471123,-.0571242086589336,0,3,1,8,24,2,-1,13,8,12,1,2,1,9,12,1,2,.0176937691867352,.0266077890992165,-.3055857121944428,0,2,8,8,8,3,-1,8,9,8,1,3,.005359944887459278,-.0569497905671597,.1210888996720314,0,2,17,11,6,4,-1,19,11,2,4,3,.0158548094332218,.0215572193264961,-.2521420121192932,0,2,0,0,18,1,-1,9,0,9,1,2,.0549633502960205,.0106362197548151,-.5730599761009216,1,2,14,6,3,2,-1,15,7,1,2,3,-.0037383600138127804,.077441543340683,-.0306048095226288,0,2,5,6,13,2,-1,5,7,13,1,2,.0182623900473118,-.0549028292298317,.1176588013768196,1,2,14,6,3,2,-1,15,7,1,2,3,-.0318278707563877,-.9110031723976135,.0013938200427219272,0,2,10,6,2,6,-1,10,8,2,2,3,-.00364661798812449,.1085240989923477,-.0722526162862778,1,2,20,1,5,2,-1,20,1,5,1,2,-.0517431795597076,-.9186943173408508,.001879784045740962,1,2,5,1,2,5,-1,5,1,1,5,2,-.009044954553246498,.1787680983543396,-.038844209164381,0,2,24,7,1,8,-1,24,9,1,4,2,-.004534022882580757,-.2472573071718216,.029726779088378,0,2,7,7,11,3,-1,7,8,11,1,3,.006873410195112228,-.0675214827060699,.1065412983298302,0,3,13,11,2,2,-1,14,11,1,1,2,13,12,1,1,2,.0007732778904028237,.022192569449544,-.1398307979106903,0,2,10,11,3,1,-1,11,11,1,1,3,-8525294106220827e-20,.0903024971485138,-.0786189734935761,0,2,24,7,1,8,-1,24,9,1,4,2,.0048931739293038845,.0311242006719112,-.1617130041122437,1,2,10,5,2,4,-1,10,5,2,2,2,-.0357618294656277,-.3406237065792084,.0201859101653099,1,2,22,1,2,3,-1,21,2,2,1,3,-.0110698901116848,.1165141984820366,-.0340334698557854,1,2,3,1,3,2,-1,4,2,1,2,3,.0034201510716229677,-.0530161187052727,.1339436024427414,0,2,16,4,3,3,-1,17,5,1,1,9,-.049969270825386,-.8493295907974243,.002754738088697195,1,2,3,0,3,2,-1,3,0,3,1,2,-.0011221430031582713,-.1629413068294525,.0413381010293961,0,2,17,0,8,3,-1,17,0,4,3,2,.0371481291949749,.0171750299632549,-.2840433120727539,0,2,0,12,4,3,-1,0,13,4,1,3,.00238473410718143,.0348382107913494,-.1844726949930191,0,2,2,3,21,3,-1,9,3,7,3,3,.1431124955415726,.0252217296510935,-.2543725967407227,1,2,8,1,2,5,-1,8,1,1,5,2,-.0119188595563173,.1655784994363785,-.0447442717850208,0,3,19,7,6,4,-1,22,7,3,2,2,19,9,3,2,2,.006477945018559694,-.0250237993896008,.0799132883548737,0,3,0,7,6,4,-1,0,7,3,2,2,3,9,3,2,2,.0014581739669665694,-.0797923728823662,.0829188674688339,0,2,24,4,1,4,-1,24,5,1,2,2,.0062418850138783455,.013290929608047,-.2995111048221588,1,2,4,7,3,4,-1,3,8,3,2,2,-.0227145906537771,.4398984909057617,-.0150371296331286,0,2,17,9,4,1,-1,18,9,2,1,2,-.0043001482263207436,-.3546585142612457,.007952126674354076,0,2,4,9,4,1,-1,5,9,2,1,2,.0010604769922792912,.0385937690734863,-.1762923002243042,0,2,23,6,2,2,-1,23,7,2,1,2,.0043205441907048225,.0171245392411947,-.1075016036629677,0,2,0,6,2,2,-1,0,7,2,1,2,-.0038217399269342422,-.4589209854602814,.0141258295625448,0,2,12,0,3,1,-1,13,0,1,1,3,.0009733684710226953,-.0361551195383072,.1268056929111481,0,3,1,7,2,2,-1,1,7,1,1,2,2,8,1,1,2,-.0007908184779807925,.1707147061824799,-.0376146212220192,0,3,22,7,2,2,-1,23,7,1,1,2,22,8,1,1,2,-.0007615988724865019,.2311398983001709,-.0603629797697067,0,2,2,11,6,4,-1,4,11,2,4,3,-.0210315398871899,-.4918564856052399,.0156012997031212,0,3,14,1,10,4,-1,19,1,5,2,2,14,3,5,2,2,.0180973205715418,-.0467358492314816,.1050693020224571,0,2,6,2,12,2,-1,6,3,12,1,2,-.0131208598613739,.1018344014883041,-.0857265591621399,0,2,9,6,8,9,-1,9,9,8,3,3,.2012819051742554,-.009487469680607319,.5418189764022827,0,2,3,8,3,3,-1,4,9,1,1,9,.007332609035074711,.0282447207719088,-.2452981024980545,0,3,22,7,2,2,-1,23,7,1,1,2,22,8,1,1,2,.0009054064285010099,-.0559650883078575,.2322594970464706,0,3,11,10,2,2,-1,11,10,1,1,2,12,11,1,1,2,.0005353200249373913,.0432194508612156,-.1652047038078308,0,3,22,7,2,2,-1,23,7,1,1,2,22,8,1,1,2,-802397116785869e-19,.0588538907468319,-.0475415214896202,0,2,4,13,10,1,-1,9,13,5,1,2,.004840339999645948,-.0541158504784107,.1303326934576035,0,2,3,0,20,15,-1,3,0,10,15,2,.6619219779968262,-.0147952698171139,.5785722732543945,0,2,0,13,24,1,-1,6,13,12,1,2,-.008544123731553555,.1165743991732597,-.0628988370299339,0,3,22,7,2,2,-1,23,7,1,1,2,22,8,1,1,2,54021849791752174e-21,-.0602008998394012,.0699716731905937])
},function(t,e){PEEKS.registerPage("3D Assets",function(){var t=new PEEKS.Asset({category:"fashion"});return t.addPage("peeks_toolbar"),t.addCurvedPanel({size:5,texture:"/images/logo_lacoste.png",rotation:[20,0,0]}),t.addCurvedPanel({size:5,texture:"/images/logo_converse.png",position:[0,1],rotation:[0,30,0]}),t.addCurvedPanel({size:5,texture:"/images/logo_converse.png",position:[0,1],rotation:[0,-30,0]}),t.addMesh({geometry:"/assets/converse.obj",texture:"/assets/converse.jpg",position:[-1,0,-3],rotation:[0,0,0],size:.05,onClick:"animateRotate90"}),t.addAsset({position:[0,.5,-3],onClick:"animateRotate90"}).addMesh({geometry:"/assets/lacoste_polo_shirt.obj",texture:"/assets/lacoste_polo_shirt.jpg",rotation:[-90,0,0],size:.02}),t.addMesh({geometry:"/assets/black_leather_shoes.obj",texture:"/assets/black_leather_shoes.png",position:[1.5,0,-3],rotation:[0,200,0],size:.1,onClick:"animateRotate90"}),t})},function(t,e){PEEKS.registerPage("2D Assets",function(){for(var t=new PEEKS.Asset({fontColor:[0,0,0],category:"fashion"}),e=[["9427112_fpx.png","9427113_fpx.png"],["9477418_fpx.png","9477419_fpx.png"],["9513483_fpx.png","9513484_fpx.png"],["9579778_fpx.png","9579779_fpx.png"],["9617416_fpx.png","9617417_fpx.png"],["9427112_fpx.png","9427113_fpx.png"],["9477418_fpx.png","9477419_fpx.png"],["9513483_fpx.png","9513484_fpx.png"],["9579778_fpx.png","9579779_fpx.png"],["9617416_fpx.png","9617417_fpx.png"],["9427112_fpx.png","9427113_fpx.png"],["9477418_fpx.png","9477419_fpx.png"],["9513483_fpx.png","9513484_fpx.png"],["9579778_fpx.png","9579779_fpx.png"],["9617416_fpx.png","9617417_fpx.png"],["9427112_fpx.png","9427113_fpx.png"],["9477418_fpx.png","9477419_fpx.png"],["9513483_fpx.png","9513484_fpx.png"]],i=(t.addAsset(),function(){var t=this.parent;t.animate({duration:1,begin:[0,0,0],end:[0,-.6,0],attribute:"position"}),t.parent.assetPage.infoVisible=!1}),r=function(){var t=this.parent;if(t)if(this.infoVisible)this.animateFlip();else{if(this.infoVisible=!0,t.assetPage=this,void 0===t.infoPage){t.infoPage=t.addAsset({position:[0,0,-.2]});var e=t.infoPage.addButton({size:1,alpha:0,onClick:i});e.addText({position:[0,0,.1],text:"Product Name",textAlign:"center",fontSize:40})}t.infoPage.animate({duration:1,begin:[0,0,0],end:[0,.6,0],attribute:"position"})}},n=t.addScreen({radius:3}),a=0;a<e.length;a++){n.addAsset({position:[2*a/e.length-1,0,0]}).addButton({image:"/images/"+e[a][0],imageBack:"/images/"+e[a][1],onClick:r})}return t.addPage("peeks_toolbar"),t})},function(t,e){function i(t,e){var i=t.addAsset({position:e}),r=i.addAsset({position:[0,-1,-2.9],onClick:"animateRotate90",size:.013,onFocus:""});r.mannequin={};var n=r.mannequin,a=(i.addAsset({position:[.5,1,-3]}),"skirt"),o="M",s="M",c="M",h="M",l=[1,1,1],u="pose1",p=void 0,d=function(t,e,i){return"/assets/woman_"+e+"_"+t+(i||"")+".obj"},f=function(t,e,i,n){void 0===t&&(t=r.addMesh({geometry:d(e,"pose1")})),t.initShapeWeights();var a="XS"===h?-1:"S"===h?-.5:"M"===h?0:"L"===h?.5:"XL"===h?1:0,o="XS"===c?-1:"S"===c?-.5:"M"===c?0:"L"===c?.5:"XL"===c?1:0,l="XS"===s?-1:"S"===s?-.5:"M"===s?0:"L"===s?.5:"XL"===s?1:0;return"jacket"!==e&&"j_blouse"!==e&&"pants"!==e&&"skirt"!==e&&"underwear"!==e&&"body"!==e||(0!==a&&t.setShape("pose1_hips_1_1",d(e,u,"_hips_1_1"),a),0!==o&&t.setShape("pose1_breast_1_1",d(e,u,"_spine1_1_1"),o),0!==l&&t.setShape("pose1_chest_1_1",d(e,u,"_spine2_1_1"),l)),t.validateShapeWeights(),t.setProperties(i),t.setVisible(void 0===n||n),t},m=function(t){void 0===t&&(t=this),void 0!==t.material&&(p=t.material),void 0!==t.vm&&(void 0!==t.vm.size&&(o=t.vm.size),void 0!==t.vm.breastSize&&(c=t.vm.breastSize),void 0!==t.vm.chestSize&&(s=t.vm.chestSize),void 0!==t.vm.hipsSize&&(h=t.vm.hipsSize),void 0!==t.vm.outfit&&(a=t.vm.outfit),void 0!==t.vm.skin&&(l=t.vm.skin)),n.shoes=f(n.shoes,"highHeels",{texture:"/assets/material_suede.jpg",material:{type:"velvet"}}),n.body=f(n.body,"body",{texture:"/assets/woman_body.png",color:l,material:{emissive:[.1,.05,.05],shininess:20}}),n.pants=f(n.pants,"pants",{texture:p.map,material:p},"pants"===a),n.skirt=f(n.skirt,"skirt",{texture:p.map,material:p},"skirt"===a),n.jacket=f(n.jacket,"jacket",{texture:p.map,material:p},"pants"===a||"skirt"===a),n.blouse=f(n.blouse,"j_blouse",{texture:"/assets/material_white.jpg",material:{type:"velvet",emissive:[.05,.05,.1],shininess:10,normalMap:"/assets/material_suede_normal.jpg"}},"pants"===a||"skirt"===a),n.underwear=f(n.underwear,"underwear",{texture:"/assets/material_dark.jpg"===p.map?"/assets/woman_underwear_transparency.png":p.map,alpha:"/assets/material_dark.jpg"===p.map?.7:1,material:"/assets/material_dark.jpg"===p.map?void 0:p},"underwear"===a),n.iris=f(n.iris,"iris",{texture:"/assets/woman_iris.png"}),n.sclera=f(n.sclera,"sclera",{texture:"/assets/woman_sclera.png",material:{alphaMap:"/assets/woman_sclera_alpha.png"}})},g=t.addCanvas({valign:"top"}),v=.45;g.addText({position:[.35,v,0],text:"Fabric",fontSize:30,fontOutlineStyle:""}),g.addView({position:[.35,v-.03,0],size:[.2,.001,1]}),v-=.08;var y=g.addDisc({texture:"/assets/material_red_satin.jpg",position:[.3,v,0],size:.05,material:{type:"velvet",emissive:[.1,.1,.1],shininess:10,normalMap:void 0,map:"/assets/material_red_satin.jpg"},onClick:m});g.addDisc({texture:"/assets/material_red_velvet.jpg",position:[.4,v,0],size:.05,material:{emissive:[.1,0,0],shininess:2,normalMap:"/assets/material_velvet_normal.jpg",map:"/assets/material_red_velvet.jpg"},onClick:m}),v-=.08,g.addDisc({texture:"/assets/material_suede.jpg",position:[.3,v,0],size:.05,material:{type:"velvet",emissive:[.1,.1,.1],shininess:5,normalMap:"/assets/material_suede_normal.jpg",map:"/assets/material_suede.jpg",specularMap:"/assets/material_red_satin.jpg"},onClick:m}),g.addDisc({texture:"/assets/material_blue_satin.jpg",position:[.4,v,0],size:.05,material:{type:"velvet",emissive:[.05,.05,.1],shininess:5,normalMap:"/assets/material_suede_normal.jpg",map:"/assets/material_blue_satin.jpg"},onClick:m}),v-=.08,g.addDisc({texture:"/assets/material_white.jpg",position:[.3,v,0],size:.05,material:{emissive:[.1,0,0],shininess:2,normalMap:"/assets/material_velvet_normal.jpg",map:"/assets/material_white.jpg"},onClick:m}),g.addDisc({texture:"/assets/material_dark.jpg",position:[.4,v,0],size:.05,material:{type:"velvet",emissive:[0,0,.1],shininess:5,map:"/assets/material_dark.jpg"},onClick:m}),v-=.2,g.addText({position:[.35,v,0],text:"Skin",fontSize:30,fontOutlineStyle:""}),g.addView({position:[.35,v-.03,0],size:[.2,.001,1]}),v-=.08,g.addDisc({texture:"/assets/woman_body.png",position:[.3,v,0],size:.05,color:[1.1,1.1,1.4],textureRepeat:[.15,.15],vm:{skin:[1.1,1.1,1.4]},onClick:m}),g.addDisc({texture:"/assets/woman_body.png",position:[.4,v,0],size:.05,color:[1,1,1],textureRepeat:[.15,.15],vm:{skin:[1,1,1]},onClick:m}),v-=.08,g.addDisc({texture:"/assets/woman_body.png",position:[.3,v,0],size:.05,color:[1,1,.7],textureRepeat:[.15,.15],vm:{skin:[1,1,.7]},onClick:m}),g.addDisc({texture:"/assets/woman_body.png",position:[.4,v,0],size:.05,color:[.7,.7,.6],textureRepeat:[.15,.15],vm:{skin:[.7,.7,.6]},onClick:m}),v-=.08,g.addDisc({texture:"/assets/woman_body.png",position:[.3,v,0],size:.05,color:[.5,.5,.5],textureRepeat:[.15,.15],vm:{skin:[.5,.5,.5]},onClick:m}),g.addDisc({texture:"/assets/woman_body.png",position:[.4,v,0],size:.05,color:[.3,.3,.3],textureRepeat:[.15,.15],vm:{skin:[.3,.3,.3]},onClick:m});var x=function(t,e,i,r){t.addTextButton({position:[e-.1,i,0],size:.1,label:"XS",fontSize:30,vm:{},onClick:m}).vm[r+"Size"]="XS",t.addTextButton({position:[e-.05,i,0],size:.1,label:"S",fontSize:30,vm:{},onClick:m}).vm[r+"Size"]="S",t.addTextButton({position:[e,i,0],size:.1,label:"M",fontSize:30,vm:{},onClick:m}).vm[r+"Size"]="M",t.addTextButton({position:[e+.05,i,0],size:.1,label:"L",fontSize:30,vm:{},onClick:m}).vm[r+"Size"]="L",t.addTextButton({position:[e+.1,i,0],size:.1,label:"XL",fontSize:30,vm:{size:"L"},onClick:m}).vm[r+"Size"]="XL"},v=.45;return g.addText({position:[-.35,v,0],text:"Breast",fontSize:30,fontOutlineStyle:""}),v-=.05,x(g,-.35,v,"chest"),v-=.08,g.addText({position:[-.35,v,0],text:"Waist",fontSize:30,fontOutlineStyle:""}),v-=.05,x(g,-.35,v,"breast"),v-=.08,g.addText({position:[-.35,v,0],text:"Hips",fontSize:30,fontOutlineStyle:""}),v-=.05,x(g,-.35,v,"hips"),v-=.2,g.addText({position:[-.35,v,0],text:"Outfit",fontSize:30,fontOutlineStyle:""}),g.addView({position:[-.35,v-.03,0],size:[.2,.001,1]}),v-=.08,g.addTextButton({position:[-.35,v,0],size:.15,label:"Underwear",fontSize:35,vm:{outfit:"underwear"},onClick:m}),v-=.08,g.addTextButton({position:[-.35,v,0],size:.15,label:"Pants",fontSize:35,vm:{outfit:"pants"},onClick:m}),v-=.08,g.addTextButton({position:[-.35,v,0],size:.15,label:"Skirt",fontSize:35,vm:{outfit:"skirt"},onClick:m}),m(y),i}PEEKS.registerPage("mannequin",function(){var t=new PEEKS.Asset({category:"white",gyroscope:"off"});return i(t,[0,0,0]),t})},function(t,e){function i(t,e){var i=t.addAsset({position:e}),r=i.addAsset({position:[0,0,-2],rotation:[0,-110,0],onClick:"animateRotate90",size:.03,onFocus:""});r.mannequin={};var n=r.mannequin,a=(i.addAsset({position:[.5,1,-3]}),void 0),o=function(t){return"/assets/frye_boot"+(""!==t?"_"+t:"")+".obj"},s=function(t,e,i){return void 0===t&&(t=r.addMesh({geometry:o(e),position:[-20,-20,20]})),t.setProperties(i),t},c=function(t){void 0===t&&(t=this),void 0!==t.material&&(a=t.material),n.boot=s(n.boot,"",{texture:a.map,material:a}),n.boot_buckle=s(n.boot_buckle,"buckle",{texture:a.map}),n.boot_buckle=s(n.boot_buckle,"buckle",{texture:"/assets/frye_boot_diffuse.jpg"}),n.boot_inside=s(n.boot_inside,"inside",{texture:"/assets/material_suede.jpg"}),n.boot_sole=s(n.boot_sole,"sole",{texture:"/assets/frye_sole.jpg"}),n.boot_sole_top=s(n.boot_sole_top,"sole_top",{texture:"/assets/frye_sole.jpg"})},h=t.addCanvas({valign:"top"}),l=.45;h.addText({position:[.35,l,0],text:"Finish",fontSize:40,fontOutlineStyle:""}),h.addView({position:[.35,l-.03,0],size:[.2,.001,1]}),l-=.08,h.addDisc({texture:"/assets/material_red_satin.jpg",position:[.3,l,0],size:.05,material:{type:"velvet",emissive:[.1,.1,.1],shininess:10,normalMap:void 0,map:"/assets/material_red_satin.jpg"},onClick:c}),h.addDisc({texture:"/assets/material_nubuk.jpg",position:[.4,l,0],size:.05,material:{type:"velvet",emissive:[.1,0,0],shininess:2,map:"/assets/material_nubuk.jpg"},onClick:c}),l-=.08,h.addDisc({texture:"/assets/material_suede.jpg",position:[.3,l,0],size:.05,material:{type:"velvet",emissive:[.1,.1,.1],shininess:5,normalMap:"/assets/material_suede_normal.jpg",map:"/assets/material_suede.jpg",specularMap:"/assets/material_red_satin.jpg"},onClick:c}),h.addDisc({texture:"/assets/material_blue_satin.jpg",position:[.4,l,0],size:.05,material:{type:"velvet",emissive:[.05,.05,.1],shininess:5,normalMap:"/assets/material_suede_normal.jpg",map:"/assets/material_blue_satin.jpg"},onClick:c}),l-=.08;var u=h.addDisc({texture:"/assets/frye_boot_diffuse.jpg",position:[.3,l,0],size:.05,material:{emissive:[.1,0,0],shininess:2,map:"/assets/frye_boot_diffuse.jpg",bumpMap:"/assets/frye_boot_bump.jpg"},onClick:c});return h.addDisc({texture:"/assets/material_dark.jpg",position:[.4,l,0],size:.05,material:{type:"velvet",emissive:[0,0,.1],shininess:5,map:"/assets/material_dark.jpg"},onClick:c}),c(u),i}PEEKS.registerPage("shoe",function(){var t=new PEEKS.Asset({category:"white",bgColor:[226/255,220/255,209/255],gyroscope:"off"});return i(t,[0,0,0]),t})},function(t,e){PEEKS.registerPage("sportrade",function(){var t=new PEEKS.Asset({category:"soccer",gyroscope:"off"});t.setAssetPath("http://52.25.54.6/?url=https://medias.lequipe.fr/logo-football/"),t.addSiteMapItem("WC 2018",{icon:"https://upload.wikimedia.org/wikipedia/fr/thumb/f/f7/FIFA_World_Cup_2018_Logo.png/200px-FIFA_World_Cup_2018_Logo.png",description:"Mars 2018"}),t.addSiteMapItem("WC 2018/Brésil",{icon:"626/300"}),t.addSiteMapItem("WC 2018/Argentine",{icon:"642/300"}),t.addSiteMapItem("WC 2018/Uruguay",{icon:"885/300"}),t.addSiteMapItem("WC 2018/Colombie",{icon:"640/300"}),t.addSiteMapItem("WC 2018/Égypte",{icon:"654/300"}),t.addSiteMapItem("WC 2018/Maroc",{icon:"627/300"}),t.addSiteMapItem("WC 2018/Nigéria",{icon:"634/300"}),t.addSiteMapItem("WC 2018/Tunisie",{icon:"639/300"}),t.addSiteMapItem("WC 2018/Sénégal",{icon:"951/300"}),t.addSiteMapItem("WC 2018/Arabie Saoudite",{icon:"631/300"}),t.addSiteMapItem("WC 2018/Iran",{icon:"637/300"}),t.addSiteMapItem("WC 2018/République de Corée",{icon:"636/300"}),t.addSiteMapItem("WC 2018/Japon",{icon:"643/300"}),t.addSiteMapItem("WC 2018/Allemagne",{icon:"159/300"}),t.addSiteMapItem("WC 2018/Angleterre",{icon:"170/300"}),t.addSiteMapItem("WC 2018/Belgique",{icon:"644/300"}),t.addSiteMapItem("WC 2018/Croatie",{icon:"187/300"}),t.addSiteMapItem("WC 2018/Espagne",{icon:"175/300"}),t.addSiteMapItem("WC 2018/France",{icon:"165/300"}),t.addSiteMapItem("WC 2018/Islande",{icon:"167/300"}),t.addSiteMapItem("WC 2018/Pologne",{icon:"173/300"}),t.addSiteMapItem("WC 2018/Portugal",{icon:"181/300"}),t.addSiteMapItem("WC 2018/Russie",{icon:"164/300"}),t.addSiteMapItem("WC 2018/Serbie",{icon:"4256/300"}),t.addSiteMapItem("WC 2018/Suède",{icon:"172/300"}),t.addSiteMapItem("WC 2018/Suisse",{icon:"152/300"}),t.addSiteMapItem("WC 2018/Costa Rica",{icon:"5000000000000000000001351/300"}),t.addSiteMapItem("WC 2018/Mexique",{icon:"635/300"}),t.addSiteMapItem("WC 2018/Panama",{icon:"1207/300"}),t.addSiteMapItem("WC 2018/Pérou",{icon:"650/300"}),t.addSiteMapItem("WC 2018/Danemark",{icon:"151/300"}),t.addSiteMapItem("WC 2018/Australie",{icon:"1889/300"}),t.addSiteMapItem("Ligue1 2019",{icon:"/assets/sportrade_icon_france_ligue1.png",description:"Juin 2018"}),t.addSiteMapItem("Ligue1 2019/PSG",{icon:"26/300"}),t.addSiteMapItem("Ligue1 2019/OM",{icon:"6/300"}),t.addSiteMapItem("Ligue1 2019/OL",{icon:"22/300"}),t.addSiteMapItem("Ligue1 2019/As Monaco",{icon:"25/300"}),t.addSiteMapItem("Ligue1 2019/FCG Bordeaux",{icon:"18/300"}),t.addSiteMapItem("Ligue1 2019/FC Nantes",{icon:"15/300"}),t.addSiteMapItem("Ligue1 2019/EA Guingamp",{icon:"37/300"}),t.addSiteMapItem("Ligue1 2019/SCO Angers",{icon:"374/300"}),t.addSiteMapItem("Ligue1 2019/Toulouse FC",{icon:"12/300"}),t.addSiteMapItem("Ligue1 2019/Amiens SC",{icon:"44/300"}),t.addSiteMapItem("Ligue1 2019/RC Strasbourg",{icon:"13/300"}),t.addSiteMapItem("Ligue1 2019/Lille OSC",{icon:"43/300"}),t.addSiteMapItem("Ligue1 2019/AS Saint-Etienne",{icon:"38/300"}),t.addSiteMapItem("Ligue1 2019/Dijon FCO",{icon:"202/300"}),t.addSiteMapItem("Ligue1 2019/FC Metz",{icon:"20/300"}),t.addSiteMapItem("Ligue1 2019/SM Caen",{icon:"41/300"}),t.addSiteMapItem("Ligue1 2019/Montpellier HSC",{icon:"17/300"}),t.addSiteMapItem("Ligue1 2019/ESTAC",{icon:"30/300"}),t.addSiteMapItem("Ligue1 2019/OGC Nice",{icon:"46/300"}),t.addSiteMapItem("Ligue1 2019/Stade Rennais FC",{icon:"14/300"}),t.addSiteMapItem("Ligue1 2020",{icon:"/assets/sportrade_icon_france_ligue1.png",description:"Juin 2019"}),t.addSiteMapItem("Ligue1 2020/PSG",{icon:"26/300"}),t.addSiteMapItem("Ligue1 2020/OM",{icon:"6/300"}),t.addSiteMapItem("Ligue1 2020/OL",{icon:"22/300"}),t.addSiteMapItem("Ligue1 2020/As Monaco",{icon:"25/300"}),t.addSiteMapItem("Ligue1 2020/FCG Bordeaux",{icon:"18/300"}),t.addSiteMapItem("Ligue1 2020/FC Nantes",{icon:"15/300"}),t.addSiteMapItem("Ligue1 2020/EA Guingamp",{icon:"37/300"}),t.addSiteMapItem("Ligue1 2020/SCO Angers",{icon:"374/300"}),t.addSiteMapItem("Ligue1 2020/Toulouse FC",{icon:"12/300"}),t.addSiteMapItem("Ligue1 2020/Amiens SC",{icon:"44/300"}),t.addSiteMapItem("Ligue1 2020/RC Strasbourg",{icon:"13/300"}),t.addSiteMapItem("Ligue1 2020/Lille OSC",{icon:"43/300"}),t.addSiteMapItem("Ligue1 2020/AS Saint-Etienne",{icon:"38/300"}),t.addSiteMapItem("Ligue1 2020/Dijon FCO",{icon:"202/300"}),t.addSiteMapItem("Ligue1 2020/FC Metz",{icon:"20/300"}),t.addSiteMapItem("Ligue1 2020/SM Caen",{icon:"41/300"}),t.addSiteMapItem("Ligue1 2020/Montpellier HSC",{icon:"17/300"}),t.addSiteMapItem("Ligue1 2020/ESTAC",{icon:"30/300"}),t.addSiteMapItem("Ligue1 2020/OGC Nice",{icon:"46/300"}),t.addSiteMapItem("Ligue1 2020/Stade Rennais FC",{icon:"14/300"}),t.setSiteMapMenuPath(""),t.onUpdateSiteMapPath=function(){r()};var e=function(){t.querySiteMapItemAssets(this.path).length>0&&(t.setSiteMapMenuPath(this.path),r())},i=void 0,r=function(){i&&i.destroy();var r=t.querySiteMapMenuAssets();if(r){var n=r.length,a=n<15?15:n;i=t.addScreen({radius:a/4});for(var o=0;o<n;o++){var s=r[o],c=o,h=c%2==0?-c/a:(c+1)/a,l=i.addAsset({position:[h,0,0],size:.4});l.addView({position:[0,-1,-.3],size:[1.4,2,1],alpha:.6,viewBgColor:[0,0,0]});var u=(l.addButton({image:s.image?t.getAssetPath(s.image):void 0,path:s.path,onClick:e}),-1);s.name&&(l.addText({position:[0,u,.05],fontSize:64,text:s.name}),u-=.4),s.description&&(l.addText({position:[0,u,.1],fontSize:40,text:s.description}),u-=.4)}}i.addAsset({position:[0,-.3,0]}).addText({position:[0,0,1],fontSize:100,size:1,text:"RDV en Mars 2018"})};return r(),t})},function(t,e){PEEKS.registerPage("tron",function(){var t=new PEEKS.Asset({fontColor:[1,1,1],fontOutlineStyle:"",fontName:"Helvetica Neue",bgColor:[0,0,0],category:"",groundImage:"/images/floor_network.jpg",groundImageRepeat:200,navigation:"vehicle"});t.addCanvas().addTextButton({fontSize:40,text:"go",onClick:function(){t.getCamera().speed=10,this.destroy()}});var e,i=[0,-1,-4];return t.onUpdate=function(){var r=this.getScene().computeOffsetFromCamera(i);void 0==e&&(e=t.addMesh({geometry:"/assets/tron_moto.obj",size:.02,rotation:[0,180,0],position:r}),e.trail={lastPosition:r.slice(),points:[]}),e.setPosition(r);var n=e.trail.lastPosition,a=[r[0]-n[0],r[2]-n[2]];if(Math.sqrt(a[0]*a[0]+a[1]*a[1])>.02&&(e.trail.lastPosition=r.slice(),e.trail.points.push(r.slice()),void 0!==e.trail.ribbons&&e.trail.ribbons.destroy(),e.trail.ribbons=t.addAsset(),e.trail.ribbons.addRibbon({position:[0,.2,0],points:e.trail.points}),e.trail.ribbons.addRibbon({position:[0,.25,0],points:e.trail.points}),e.trail.ribbons.addRibbon({position:[0,.3,0],points:e.trail.points})),e.trail.points.length>=2){var o=e.trail.points.length>=10?10:e.trail.points.length,s=e.trail.points[e.trail.points.length-o],c=e.trail.points[e.trail.points.length-1],h=[c[0]-s[0],c[1]-s[1],c[2]-s[2]],l=Math.sqrt(h[0]*h[0]+h[1]*h[1]+h[2]*h[2]);h=[h[0]/l,h[1]/l,h[2]/l];var u=h[0],p=h[2]<0?1:-1;e.setRotation([0,90+p*Math.acos(u)*180/Math.PI,0])}},t})},function(t,e){PEEKS.registerPage("Movie",function(){var t=new PEEKS.Asset({category:"entertainment",gyroscope:"off"});return t.addVideo({url:"/assets/video_sintel.mp4",position:[0,0,-3],rotation:[0,0,0],size:[4.8,2.4,1]}),t})}]);